{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js!D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\qr\\QuestionDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\qr\\QuestionDetail.vue","mtime":1583747397541},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\workFiles\\\\deployweb\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport '@ckeditor/ckeditor5-build-decoupled-document/build/translations/zh-cn';\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nexport default {\n  inject: ['reload'],\n  data: function data() {\n    return {\n      editor: DecoupledEditor,\n      editorConfig: {\n        language: 'zh-cn',\n        fontSize: {\n          options: [8, 10, 'default', 14, 16, 18, 20, 22, 24, 26, 28, 32, 48]\n        },\n        fontFamily: {\n          options: ['宋体', '仿宋', '微软雅黑', '黑体', '仿宋_GB2312', '楷体', '隶书', '幼圆']\n        }\n      },\n      dialogFormVisible: false,\n      remarkFormVisible: false,\n      question: {\n        title: \"\",\n        category: \"\",\n        p_class: \"\",\n        questioner: \"\",\n        record_type: \"\",\n        resolver: \"\",\n        status: \"\",\n        create_time: null,\n        update_time: null,\n        resolve_time: null,\n        body: \"\",\n        answer: \"\",\n        question_histories: []\n      },\n      answerForm: {\n        answer: ''\n      },\n      rules: {\n        answer: [{\n          required: true,\n          message: '请解决该问题',\n          trigger: 'blur'\n        }],\n        remark: [{\n          required: true,\n          message: '请输入问题备注',\n          trigger: 'blur'\n        }]\n      },\n      remarkForm: {\n        remark: ''\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.initQuestionDetail();\n  },\n  methods: {\n    editorOnReady: function editorOnReady(editor) {\n      editor.ui.getEditableElement().parentElement.insertBefore(editor.ui.view.toolbar.element, editor.ui.getEditableElement());\n\n      editor.plugins.get('FileRepository').createUploadAdapter = function (loader) {\n        var val = editor.getData();\n        return {\n          upload: function () {\n            var _upload = _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee() {\n              return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return loader.file.then(function (f) {\n                        var F = new FileReader();\n                        F.readAsArrayBuffer(f);\n                        return new Promise(function (resolve) {\n                          F.onload = function () {\n                            resolve(F.result);\n                          };\n                        });\n                      }).then(function (bufAsArray) {\n                        return {\n                          default: ''\n                        };\n                      });\n\n                    case 2:\n                      return _context.abrupt(\"return\", _context.sent);\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            function upload() {\n              return _upload.apply(this, arguments);\n            }\n\n            return upload;\n          }()\n        };\n      };\n    },\n    initQuestionDetail: function initQuestionDetail() {\n      var _this = this;\n\n      var id = this.$route.params.id;\n      this.$axios.get(this.$api.questionManage + '/' + id).then(function (response) {\n        _this.question.title = response.data['res']['title'];\n        _this.question.category = response.data['res']['category'];\n        _this.question.p_class = response.data['res']['p_class'];\n        _this.question.questioner = response.data['res']['questioner'];\n        _this.question.record_type = response.data['res']['record_type'];\n        _this.question.resolver = response.data['res']['resolver'];\n        _this.question.status = response.data['res']['status'];\n        _this.question.create_time = response.data['res']['create_time'];\n        _this.question.update_time = response.data['res']['update_time'];\n        _this.question.resolve_time = response.data['res']['resolve_time'];\n        _this.question.body = response.data['res']['body'];\n        _this.question.answer = response.data['res']['answer'];\n        _this.question.question_histories = response.data['res']['question_histories'];\n      });\n    },\n    goBack: function goBack() {\n      this.$router.go(-1);\n    },\n    answerQuestion: function answerQuestion() {\n      this.answerForm.answer = this.question.answer;\n      this.dialogFormVisible = true;\n    },\n    cancelBtn: function cancelBtn() {\n      this.dialogFormVisible = false;\n      this.remarkFormVisible = false;\n      this.reload();\n    },\n    answerBtn: function answerBtn() {\n      var _this2 = this;\n\n      var id = this.$route.params.id;\n      var data = {\n        'answer': this.answerForm.answer\n      };\n      this.$axios.put(this.$api.questionManage + '/' + id, data).then(function (response) {\n        if (_this2.messageShow(_this2, response)) {\n          _this2.reload();\n        }\n      }).catch(function (error) {\n        _this2.errorMessageShow(_this2, error.response);\n      });\n    },\n    addRemark: function addRemark() {\n      this.remarkForm.answer = '';\n      this.remarkFormVisible = true;\n    },\n    addRemarkBtn: function addRemarkBtn() {\n      var _this3 = this;\n\n      var id = this.$route.params.id;\n      var data = {\n        'remark': this.remarkForm.remark\n      };\n      this.$axios.put(this.$api.questionManage + '/' + id, data).then(function (response) {\n        if (_this3.messageShow(_this3, response)) {\n          _this3.reload();\n        }\n      }).catch(function (error) {\n        _this3.errorMessageShow(_this3, error.response);\n      });\n    }\n  }\n};",{"version":3,"sources":["QuestionDetail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"21\">\r\n                <el-page-header @back=\"goBack\" :content=\"question.title\"></el-page-header>\r\n            </el-col>\r\n            <!-- <el-col :span=\"3\" :offset=\"3\">\r\n                <el-button @click=\"answerQuestion\" type=\"primary\" size=\"small\" plain>Answer</el-button>\r\n            </el-col> -->\r\n            <el-col :span=\"1\" style=padding-top:0px>\r\n                <el-dropdown>\r\n                <span split-button class=\"el-dropdown-link icon-warp\">\r\n                    <i class=\"el-icon-circle-plus\"></i>\r\n                </span>\r\n                <el-dropdown-menu slot=\"dropdown\">\r\n                    <el-dropdown-item @click.native=\"answerQuestion\">解答问题</el-dropdown-item>\r\n                    <el-dropdown-item @click.native=\"addRemark\">添加备注</el-dropdown-item>\r\n                </el-dropdown-menu>\r\n                </el-dropdown>\r\n            </el-col>\r\n        </el-row>\r\n        <el-divider></el-divider>\r\n        <div>\r\n            <div class=\"mdui-typo\">\r\n                <ul>\r\n                <li>项目: {{ question.category }}</li>\r\n                <li>级别: {{ question.p_class }}</li>\r\n                <li>问题类型: {{ question.record_type }}</li>\r\n                <li>发起者: {{ question.questioner }}</li>\r\n                <li>指派: {{ question.resolver }}</li>\r\n                <li>状态: {{ question.status }}</li>\r\n                <li>创建时间: {{ question.create_time }}</li>\r\n                </ul>\r\n                <el-divider content-position=\"left\"><strong>详细内容</strong></el-divider>\r\n                <span v-html=\"question.body\"></span>\r\n                <div v-show=\"question.answer\">\r\n                    <el-divider content-position=\"left\"><strong>解决情况</strong></el-divider>\r\n                    <span v-html=\"question.answer\"></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <el-divider content-position=\"left\"><strong>历史记录</strong></el-divider>\r\n        <el-table\r\n            :data=\"question.question_histories\"\r\n            stripe\r\n            style=\"width: 100%\">\r\n            <el-table-column\r\n            prop=\"timestamp\"\r\n            label=\"时间\"\r\n            width=\"230\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"user\"\r\n            label=\"\"\r\n            width=\"150\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"record\"\r\n            label=\"记录\"\r\n            min-width=\"100\">\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <el-dialog title=\"问题解答\" :visible.sync=\"dialogFormVisible\">\r\n          <el-form :model=\"answerForm\" :rules=\"rules\" ref=\"answerForm\" label-width=\"100px\" class=\"demo-answerForm\" label-position=\"top\">\r\n              <el-form-item prop=\"answer\" size=\"small\">\r\n                <div>\r\n                <ckeditor :editor=\"editor\" @ready=\"editorOnReady\" v-model=\"answerForm.answer\" :config=\"editorConfig\">\r\n                </ckeditor>\r\n                <el-divider></el-divider>\r\n                </div>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"cancelBtn()\">取 消</el-button>\r\n              <el-button type=\"primary\" @click=\"answerBtn()\">确 认</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-dialog title=\"备注\" :visible.sync=\"remarkFormVisible\">\r\n          <el-form :model=\"remarkForm\" :rules=\"rules\" ref=\"remarkForm\" label-width=\"100px\" class=\"demo-answerForm\" label-position=\"top\">\r\n              <el-form-item prop=\"remark\" size=\"small\" label=\"备注\">\r\n                <el-input type=\"textarea\" v-model=\"remarkForm.remark\"></el-input>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"cancelBtn()\">取 消</el-button>\r\n              <el-button type=\"primary\" @click=\"addRemarkBtn()\">确 认</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport '@ckeditor/ckeditor5-build-decoupled-document/build/translations/zh-cn'\r\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document'\r\n\r\nexport default {\r\n    inject: ['reload'],\r\n    data(){\r\n        return{\r\n            editor: DecoupledEditor,\r\n            editorConfig: {\r\n                language: 'zh-cn',\r\n                fontSize: {\r\n                    options: [8, 10, 'default', 14, 16, 18, 20, 22, 24, 26, 28, 32, 48]\r\n                },\r\n                fontFamily:{\r\n                    options: ['宋体', '仿宋', '微软雅黑', '黑体', '仿宋_GB2312', '楷体', '隶书', '幼圆']\r\n                }\r\n            },\r\n            dialogFormVisible: false,\r\n            remarkFormVisible: false,\r\n            question: {\r\n                title: \"\",\r\n                category: \"\",\r\n                p_class: \"\",\r\n                questioner: \"\",\r\n                record_type: \"\",\r\n                resolver: \"\",\r\n                status: \"\",\r\n                create_time: null,\r\n                update_time: null,\r\n                resolve_time: null,\r\n                body: \"\",\r\n                answer: \"\",\r\n                question_histories: []\r\n            },\r\n            answerForm: {\r\n                answer: ''\r\n            },\r\n            rules: {\r\n                answer: [\r\n                    { required: true, message: '请解决该问题', trigger: 'blur' },\r\n                ],\r\n                remark: [\r\n                    { required: true, message: '请输入问题备注', trigger: 'blur' },\r\n                ]\r\n            },\r\n            remarkForm: {\r\n                remark: ''\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        this.initQuestionDetail()\r\n    },\r\n    methods: {\r\n        editorOnReady(editor){\r\n            editor.ui.getEditableElement().parentElement.insertBefore(\r\n                editor.ui.view.toolbar.element,\r\n                editor.ui.getEditableElement()\r\n            );\r\n            editor.plugins.get('FileRepository').createUploadAdapter = function(loader){\r\n                let val = editor.getData();\r\n                return{\r\n                    upload: async function(){\r\n                        return await loader.file.then(f => {\r\n                            const F = new FileReader();\r\n                            F.readAsArrayBuffer(f);\r\n                            return new Promise(resolve => {\r\n                                F.onload = function(){\r\n                                    resolve(F.result)\r\n                                };\r\n                            })\r\n                        }).then(bufAsArray => {\r\n                            return{\r\n                                default: ''\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n        }, \r\n        initQuestionDetail(){\r\n            let id = this.$route.params.id\r\n            this.$axios.get((this.$api.questionManage + '/' + id)).then((response) => {\r\n                this.question.title = response.data['res']['title']\r\n                this.question.category = response.data['res']['category']\r\n                this.question.p_class = response.data['res']['p_class']\r\n                this.question.questioner = response.data['res']['questioner']\r\n                this.question.record_type = response.data['res']['record_type']\r\n                this.question.resolver = response.data['res']['resolver']\r\n                this.question.status = response.data['res']['status']\r\n                this.question.create_time = response.data['res']['create_time']\r\n                this.question.update_time = response.data['res']['update_time']\r\n                this.question.resolve_time = response.data['res']['resolve_time']\r\n                this.question.body = response.data['res']['body']\r\n                this.question.answer = response.data['res']['answer']\r\n                this.question.question_histories = response.data['res']['question_histories']\r\n            })\r\n        },\r\n        goBack(){\r\n            this.$router.go(-1);\r\n        },\r\n        answerQuestion(){\r\n            this.answerForm.answer = this.question.answer\r\n            this.dialogFormVisible = true\r\n        },\r\n        cancelBtn(){\r\n            this.dialogFormVisible = false\r\n            this.remarkFormVisible = false\r\n            this.reload()\r\n        },\r\n        answerBtn(){\r\n            let id = this.$route.params.id\r\n            let data = {\r\n                'answer': this.answerForm.answer\r\n            }\r\n            this.$axios.put((this.$api.questionManage + '/' + id), data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                  this.reload();}\r\n                }).catch((error) => {\r\n                    this.errorMessageShow(this, error.response);\r\n                })\r\n        },\r\n        addRemark(){\r\n            this.remarkForm.answer = ''\r\n            this.remarkFormVisible = true\r\n        },\r\n        addRemarkBtn(){\r\n            let id = this.$route.params.id\r\n            let data = {\r\n                'remark': this.remarkForm.remark\r\n            }\r\n            this.$axios.put((this.$api.questionManage + '/' + id), data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                  this.reload();}\r\n                }).catch((error) => {\r\n                    this.errorMessageShow(this, error.response);\r\n                })\r\n        }\r\n    }\r\n}\r\n</script>"],"sourceRoot":"src/components/qr"}]}