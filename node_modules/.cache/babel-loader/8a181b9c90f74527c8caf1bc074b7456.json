{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js!D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\plan\\PlanEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\plan\\PlanEdit.vue","mtime":1583747397537},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\workFiles\\\\deployweb\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport '@ckeditor/ckeditor5-build-decoupled-document/build/translations/zh-cn';\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document'; // import func from '../../../vue-temp/vue-editor-bridge';\n\nexport default {\n  props: ['categorys'],\n  data: function data() {\n    return {\n      editor: DecoupledEditor,\n      editorConfig: {\n        language: 'zh-cn',\n        fontSize: {\n          options: [8, 10, 'default', 14, 16, 18, 20, 22, 24, 26, 28, 32, 48]\n        },\n        fontFamily: {\n          options: ['宋体', '仿宋', '微软雅黑', '黑体', '仿宋_GB2312', '楷体', '隶书', '幼圆']\n        }\n      },\n      planEditFlag: false,\n      planEditId: '',\n      subHeader: '',\n      planForm: {\n        title: '',\n        category_id: '',\n        version: '',\n        author: '',\n        yfb_datetime: '',\n        online_datetime: '',\n        remark: ''\n      },\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入计划标题',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 60,\n          message: '长度在 3 到 60 个字符',\n          trigger: 'blur'\n        }],\n        category_id: [{\n          required: true,\n          message: '请选择所属项目',\n          trigger: 'change'\n        }],\n        version: [{\n          required: true,\n          message: '请输入发布版本',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 60,\n          message: '长度在 3 到 60 个字符',\n          trigger: 'blur'\n        }],\n        yfb_datetime: [{\n          type: 'date',\n          required: true,\n          message: '请选择日期',\n          trigger: 'change'\n        }],\n        online_datetime: [{\n          type: 'date',\n          required: true,\n          message: '请选择时间',\n          trigger: 'change'\n        }],\n        remark: [{\n          required: true,\n          message: '请填写转测详细内容',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.judgeCreateOrEdit();\n  },\n  methods: {\n    initPlanFormEdit: function initPlanFormEdit(id) {\n      var _this = this;\n\n      this.$axios.get(this.$api.planManage + '/' + id).then(function (response) {\n        _this.planForm.title = response.data['res']['title'];\n        _this.planForm.category_id = response.data['res']['category_id'];\n        _this.planForm.version = response.data['res']['version'];\n        _this.planForm.author = response.data['res']['author']; // this.planForm.yfb_datetime = response.data['res']['yfb_datetime']\n        // this.planForm.online_datetime = response.data['res']['online_datetime']\n\n        _this.planForm.remark = response.data['res']['remark'];\n      });\n    },\n    judgeCreateOrEdit: function judgeCreateOrEdit() {\n      if (this.$route.path.indexOf('edit') >= 0) {\n        this.planEditFlag = true;\n        this.subHeader = '编辑计划'; // this.planEditId = this.$route.path.split('/')[3]\n\n        this.planEditId = this.$route.params.id;\n        this.initPlanFormEdit(this.planEditId);\n      } else {\n        this.planEditFlag = false;\n        this.subHeader = '新建计划';\n        this.planForm.author = localStorage.getItem(\"name\");\n      }\n    },\n    goBack: function goBack() {\n      this.$router.go(-1);\n    },\n    editorOnReady: function editorOnReady(editor) {\n      editor.ui.getEditableElement().parentElement.insertBefore(editor.ui.view.toolbar.element, editor.ui.getEditableElement());\n\n      editor.plugins.get('FileRepository').createUploadAdapter = function (loader) {\n        var val = editor.getData();\n        return {\n          upload: function () {\n            var _upload = _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee() {\n              return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return loader.file.then(function (f) {\n                        var F = new FileReader();\n                        F.readAsArrayBuffer(f);\n                        return new Promise(function (resolve) {\n                          F.onload = function () {\n                            resolve(F.result);\n                          };\n                        });\n                      }).then(function (bufAsArray) {\n                        return {\n                          default: ''\n                        };\n                      });\n\n                    case 2:\n                      return _context.abrupt(\"return\", _context.sent);\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            function upload() {\n              return _upload.apply(this, arguments);\n            }\n\n            return upload;\n          }()\n        };\n      };\n    },\n    submitForm: function submitForm(formName) {\n      var _this2 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var data = {\n            \"title\": _this2.planForm.title,\n            \"category_id\": _this2.planForm.category_id,\n            \"version\": _this2.planForm.version,\n            \"author\": _this2.planForm.author,\n            \"yfb_datetime\": _this2.planForm.yfb_datetime,\n            \"online_datetime\": _this2.planForm.online_datetime,\n            \"remark\": _this2.planForm.remark\n          };\n\n          if (_this2.planEditFlag === false) {\n            _this2.$axios.post(_this2.$api.planManage, data).then(function (response) {\n              if (_this2.messageShow(_this2, response)) {\n                _this2.$router.push('/management/plans');\n\n                _this2.planList();\n              }\n            }).catch(function (error) {\n              _this2.errorMessageShow(_this2, error.response);\n            });\n          } else {\n            _this2.$axios.put(_this2.$api.planManage + '/' + _this2.planEditId, data).then(function (response) {\n              if (_this2.messageShow(_this2, response)) {\n                _this2.$router.push('/management/plans');\n\n                _this2.planList();\n              }\n            }).catch(function (error) {\n              _this2.errorMessageShow(_this2, error.response);\n            });\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};",{"version":3,"sources":["PlanEdit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div>\r\n    <el-page-header @back=\"goBack\" v-bind:content=\"subHeader\"></el-page-header>\r\n    <el-divider></el-divider>\r\n    <el-form :model=\"planForm\" :rules=\"rules\" ref=\"planForm\" label-width=\"150px\" class=\"demo-planForm\" label-position=\"top\">\r\n        <el-form-item label=\"计划标题\" prop=\"title\" size=\"small\">\r\n            <el-input v-model=\"planForm.title\" class=\"commonwidth\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"发布版本\" prop=\"version\" size=\"small\">\r\n            <el-input v-model=\"planForm.version\" class=\"commonwidth\"></el-input>\r\n        </el-form-item>\r\n        <el-row :gutter=\"10\">\r\n          <el-col :span=\"4\">\r\n            <el-form-item label=\"项目\" prop=\"category_id\" size=\"small\">\r\n                <el-select v-model=\"planForm.category_id\" placeholder=\"请选择项目\">\r\n                  <el-option\r\n                    v-for=\"item in categorys\"\r\n                    :key=\"item.id\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.id\">\r\n                  </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"4\">\r\n            <el-form-item label=\"责任人\" prop=\"author\" size=\"small\">\r\n                <el-input v-model=\"planForm.author\" :disabled=\"true\"></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"5\">\r\n            <el-form-item label=\"计划上预发布时间\" required size=\"small\">\r\n                <el-form-item prop=\"yfb_datetime\">\r\n                    <el-date-picker type=\"date\" placeholder=\"选择日期\" v-model=\"planForm.yfb_datetime\">\r\n                    </el-date-picker>\r\n                </el-form-item>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"5\">\r\n            <el-form-item label=\"计划上线时间\" required size=\"small\">\r\n                <el-form-item prop=\"online_datetime\">\r\n                    <el-date-picker type=\"date\" placeholder=\"选择日期\" v-model=\"planForm.online_datetime\">\r\n                    </el-date-picker>\r\n                </el-form-item>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-form-item label=\"转测详细内容\" prop=\"remark\" size=\"small\">\r\n        <div  class=\"deploytext\">\r\n        <ckeditor :editor=\"editor\" @ready=\"editorOnReady\" v-model=\"planForm.remark\" :config=\"editorConfig\">\r\n        </ckeditor>\r\n        <el-divider></el-divider>\r\n        </div>\r\n        </el-form-item>\r\n        <el-form-item>\r\n            <el-button type=\"primary\" @click=\"submitForm('planForm')\">确定</el-button>\r\n            <el-button @click=\"resetForm('planForm')\">重置</el-button>\r\n        </el-form-item>\r\n    </el-form>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport '@ckeditor/ckeditor5-build-decoupled-document/build/translations/zh-cn'\r\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document'\r\n// import func from '../../../vue-temp/vue-editor-bridge';\r\n\r\n  export default {\r\n    props: ['categorys'],\r\n    data() {\r\n      return {\r\n        editor: DecoupledEditor,\r\n        editorConfig: {\r\n            language: 'zh-cn',\r\n            fontSize: {\r\n                options: [8, 10, 'default', 14, 16, 18, 20, 22, 24, 26, 28, 32, 48]\r\n            },\r\n            fontFamily:{\r\n                options: ['宋体', '仿宋', '微软雅黑', '黑体', '仿宋_GB2312', '楷体', '隶书', '幼圆']\r\n            }\r\n        },\r\n        planEditFlag: false,\r\n        planEditId: '',\r\n        subHeader: '',\r\n        planForm: {\r\n          title: '',\r\n          category_id: '',\r\n          version: '',\r\n          author: '',\r\n          yfb_datetime: '',\r\n          online_datetime: '',\r\n          remark: ''\r\n        },\r\n        rules: {\r\n          title: [\r\n            { required: true, message: '请输入计划标题', trigger: 'blur' },\r\n            { min: 3, max: 60, message: '长度在 3 到 60 个字符', trigger: 'blur' }\r\n          ],\r\n          category_id: [\r\n            { required: true, message: '请选择所属项目', trigger: 'change' }\r\n          ],\r\n          version: [\r\n            { required: true, message: '请输入发布版本', trigger: 'blur' },\r\n            { min: 3, max: 60, message: '长度在 3 到 60 个字符', trigger: 'blur' }\r\n          ],\r\n          yfb_datetime: [\r\n            { type: 'date', required: true, message: '请选择日期', trigger: 'change' }\r\n          ],\r\n          online_datetime: [\r\n            { type: 'date', required: true, message: '请选择时间', trigger: 'change' }\r\n          ],\r\n          remark: [\r\n            { required: true, message: '请填写转测详细内容', trigger: 'blur' }\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    mounted() {\r\n      this.judgeCreateOrEdit();\r\n    },\r\n    methods: {\r\n        initPlanFormEdit(id){\r\n          this.$axios.get((this.$api.planManage + '/' + id)).then((response) => {\r\n            this.planForm.title = response.data['res']['title']\r\n            this.planForm.category_id = response.data['res']['category_id']\r\n            this.planForm.version = response.data['res']['version']\r\n            this.planForm.author = response.data['res']['author']\r\n            // this.planForm.yfb_datetime = response.data['res']['yfb_datetime']\r\n            // this.planForm.online_datetime = response.data['res']['online_datetime']\r\n            this.planForm.remark = response.data['res']['remark']\r\n          })\r\n        },\r\n        judgeCreateOrEdit(){\r\n            if(this.$route.path.indexOf('edit') >= 0){\r\n                this.planEditFlag = true\r\n                this.subHeader = '编辑计划'\r\n                // this.planEditId = this.$route.path.split('/')[3]\r\n                this.planEditId = this.$route.params.id\r\n                this.initPlanFormEdit(this.planEditId)\r\n            }else{\r\n                this.planEditFlag = false\r\n                this.subHeader = '新建计划'\r\n                this.planForm.author = localStorage.getItem(\"name\")\r\n            }\r\n        },\r\n        goBack(){\r\n            this.$router.go(-1);\r\n        },\r\n        editorOnReady(editor){\r\n            editor.ui.getEditableElement().parentElement.insertBefore(\r\n                editor.ui.view.toolbar.element,\r\n                editor.ui.getEditableElement()\r\n            );\r\n            editor.plugins.get('FileRepository').createUploadAdapter = function(loader){\r\n                let val = editor.getData();\r\n                return{\r\n                    upload: async function(){\r\n                        return await loader.file.then(f => {\r\n                            const F = new FileReader();\r\n                            F.readAsArrayBuffer(f);\r\n                            return new Promise(resolve => {\r\n                                F.onload = function(){\r\n                                    resolve(F.result)\r\n                                };\r\n                            })\r\n                        }).then(bufAsArray => {\r\n                            return{\r\n                                default: ''\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n        },\r\n      submitForm(formName) {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid) {\r\n            let data = {\r\n              \"title\": this.planForm.title,\r\n              \"category_id\": this.planForm.category_id,\r\n              \"version\": this.planForm.version,\r\n              \"author\": this.planForm.author,\r\n              \"yfb_datetime\": this.planForm.yfb_datetime,\r\n              \"online_datetime\": this.planForm.online_datetime,\r\n              \"remark\": this.planForm.remark,\r\n            }\r\n            if (this.planEditFlag === false){\r\n              this.$axios.post(this.$api.planManage, data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                  this.$router.push('/management/plans')\r\n                  this.planList();\r\n                }\r\n              }).catch((error) => {\r\n                this.errorMessageShow(this, error.response);\r\n              })\r\n            }else{\r\n              this.$axios.put((this.$api.planManage + '/' + this.planEditId), data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                  this.$router.push('/management/plans')\r\n                  this.planList();\r\n                }\r\n              }).catch((error) => {\r\n                this.errorMessageShow(this, error.response);\r\n              })\r\n            }\r\n          } else {\r\n            console.log('error submit!!');\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      resetForm(formName) {\r\n        this.$refs[formName].resetFields();\r\n      }\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src/components/plan"}]}