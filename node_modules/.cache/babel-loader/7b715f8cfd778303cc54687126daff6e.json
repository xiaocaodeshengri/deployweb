{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js!D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\settings\\Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\settings\\Task.vue","mtime":1583747397547},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      editTaskFlag: false,\n      dialogFormVisible: false,\n      taskForm: {\n        id: '',\n        title: '',\n        task_url: '',\n        email: '',\n        cron: ''\n      },\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入任务名称',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 60,\n          message: '长度在 1 到 60 个字符',\n          trigger: 'blur'\n        }],\n        task_url: [{\n          required: true,\n          message: '请输入任务URL',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 128,\n          message: '长度在 1 到 128 个字符',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入电子邮件',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 254,\n          message: '长度在 1 到 254 个字符',\n          trigger: 'blur'\n        }],\n        cron: [{\n          required: true,\n          message: '请输入CRON定时任务时间',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 30,\n          message: '长度在 1 到 30 个字符',\n          trigger: 'blur'\n        }]\n      },\n      tableData: []\n    };\n  },\n  mounted: function mounted() {\n    this.taskList();\n  },\n  methods: {\n    taskList: function taskList() {\n      var _this = this;\n\n      this.$axios.get(this.$api.taskList, {\n        params: {\n          page: this.currentPage,\n          size: this.pageSize\n        }\n      }).then(function (response) {\n        if (_this.messageShow(_this, response)) {\n          _this.tableData = response.data['res'];\n          _this.total = response.data['total'];\n        }\n      });\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.taskList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.taskList();\n    },\n    initTaskForm: function initTaskForm() {\n      this.taskForm.id = null, this.taskForm.title = null, this.taskForm.task_url = null, this.taskForm.email = null, this.taskForm.cron = null;\n    },\n    addBtn: function addBtn() {\n      this.initTaskForm();\n      this.editTaskFlag = false;\n      this.dialogFormVisible = true;\n    },\n    editTask: function editTask(id) {\n      var _this2 = this;\n\n      this.editTaskFlag = true;\n      this.$axios.get(this.$api.taskManage + '/' + id).then(function (response) {\n        _this2.taskForm.id = id;\n        _this2.taskForm.title = response.data['res']['title'];\n        _this2.taskForm.task_url = response.data['res']['task_url'];\n        _this2.taskForm.email = response.data['res']['email'];\n        _this2.taskForm.cron = response.data['res']['cron'];\n      });\n      this.dialogFormVisible = true;\n    },\n    opTask: function opTask(id, operation) {\n      var _this3 = this;\n\n      this.$axios.get(this.$api.taskOperation.replace(/OPERATION/g, operation) + '/' + id).then(function (response) {\n        if (_this3.messageShow(_this3, response)) {\n          _this3.taskList();\n        }\n      }).catch(function (error) {\n        _this3.errorMessageShow(_this3, error.response);\n      });\n    },\n    deleteTask: function deleteTask(id) {\n      var _this4 = this;\n\n      this.$axios.delete(this.$api.taskManage + '/' + id).then(function (response) {\n        if (_this4.messageShow(_this4, response)) {\n          _this4.taskList();\n        }\n      }).catch(function (error) {\n        _this4.errorMessageShow(_this4, error.response);\n      });\n    },\n    addTaskBtn: function addTaskBtn() {\n      var _this5 = this;\n\n      var data = {\n        \"title\": this.taskForm.title,\n        \"task_url\": this.taskForm.task_url,\n        \"email\": this.taskForm.email,\n        \"cron\": this.taskForm.cron\n      };\n      this.$axios.post(this.$api.taskManage, data).then(function (response) {\n        if (_this5.messageShow(_this5, response)) {\n          _this5.dialogFormVisible = false;\n\n          _this5.taskList();\n        }\n      }).catch(function (error) {\n        _this5.errorMessageShow(_this5, error.response);\n      });\n    },\n    editTaskBtn: function editTaskBtn(id) {\n      var _this6 = this;\n\n      var data = {\n        \"title\": this.taskForm.title,\n        \"task_url\": this.taskForm.task_url,\n        \"email\": this.taskForm.email,\n        \"cron\": this.taskForm.cron\n      };\n      this.$axios.put(this.$api.taskManage + '/' + id, data).then(function (response) {\n        if (_this6.messageShow(_this6, response)) {\n          _this6.dialogFormVisible = false;\n          _this6.editTaskFlag = false;\n\n          _this6.taskList();\n        }\n      }).catch(function (error) {\n        _this6.errorMessageShow(_this6, error.response);\n      });\n    },\n    cancelBtn: function cancelBtn() {\n      this.dialogFormVisible = false;\n      this.initTaskForm();\n      this.editTaskFlag = false;\n    }\n  }\n};",{"version":3,"sources":["Task.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"10\">\r\n          <el-col :span=\"3\"><h2>定时任务</h2></el-col>\r\n          <el-col :span=\"3\" :offset=\"18\" style=padding-top:18px>\r\n            <el-button @click.native=\"addBtn()\" type=\"primary\" icon=\"el-icon-plus\" size=\"small\" circle plain></el-button>\r\n          </el-col>\r\n        </el-row>\r\n        <el-divider></el-divider>\r\n        <el-table\r\n            :data=\"tableData\"\r\n            stripe\r\n            style=\"width: 100%\">\r\n            <el-table-column\r\n            type=\"index\"\r\n            label=\"No.\"\r\n            width=\"50\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"title\"\r\n            label=\"标题\"\r\n            width=\"150\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"task_url\"\r\n            label=\"URL\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"email\"\r\n            label=\"Emails\"\r\n            width=\"280\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"cron\"\r\n            label=\"CRON\">\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"360\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" plain\r\n                                @click.native=\"editTask(tableData[scope.$index]['id'])\">Edit\r\n                    </el-button>\r\n                    <el-button type=\"info\" size=\"mini\" plain\r\n                                @click.native=\"opTask(tableData[scope.$index]['id'], 'run')\">Run\r\n                    </el-button>\r\n                    <el-button type=\"success\" size=\"mini\" v-if=\"tableData[scope.$index]['status'] === 0\" plain\r\n                                @click.native=\"opTask(tableData[scope.$index]['id'], 'start')\">Start\r\n                    </el-button>\r\n                    <el-button type=\"danger\" size=\"mini\" v-else plain\r\n                                @click.native=\"opTask(tableData[scope.$index]['id'], 'stop')\">Stop\r\n                    </el-button>\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" plain\r\n                                @click.native=\"sureView(deleteTask,tableData[scope.$index]['id'],tableData[scope.$index]['title'])\">\r\n                        Delete\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <el-row type=\"flex\" justify=\"end\">\r\n          <el-col :span=\"12\" style=padding-top:24px>\r\n            <el-pagination\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"currentPage\"\r\n              :page-sizes=\"[10, 20, 50, 100]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"total\">\r\n            </el-pagination>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-dialog title=\"定时任务配置\" :visible.sync=\"dialogFormVisible\">\r\n          <el-form :model=\"taskForm\" :rules=\"rules\" ref=\"taskForm\" label-width=\"150px\" class=\"demo-taskForm\">\r\n              <el-form-item label=\"定时任务名称\" prop=\"title\" size=\"small\">\r\n                  <el-input v-model=\"taskForm.title\" class=\"commonwidth\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"任务URL\" prop=\"task_url\" size=\"small\">\r\n                  <el-input v-model=\"taskForm.task_url\" class=\"commonwidth\" placeholder=\"/api/taskx/\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"电子邮件\" prop=\"email\" size=\"small\">\r\n                  <el-input type=\"textarea\" v-model=\"taskForm.email\" class=\"commonwidth\" placeholder=\"邮箱用`,`隔开\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"时间设定\" prop=\"cron\" size=\"small\">\r\n                  <el-input v-model=\"taskForm.cron\" class=\"commonwidth\" placeholder=\"分 时 日 月 星期\"></el-input>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click.native=\"cancelBtn()\">取 消</el-button>\r\n              <el-button v-if=\"editTaskFlag === true\" type=\"primary\" @click=\"editTaskBtn(taskForm['id'])\">修 改</el-button>\r\n              <el-button v-else type=\"primary\" @click=\"addTaskBtn()\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        editTaskFlag: false,\r\n        dialogFormVisible: false,\r\n        taskForm: {\r\n          id: '',\r\n          title: '',\r\n          task_url: '',\r\n          email: '',\r\n          cron: ''\r\n        },\r\n        rules: {\r\n          title: [\r\n            { required: true, message: '请输入任务名称', trigger: 'blur' },\r\n            { min: 1, max: 60, message: '长度在 1 到 60 个字符', trigger: 'blur' }\r\n          ],\r\n          task_url: [\r\n            { required: true, message: '请输入任务URL', trigger: 'blur' },\r\n            { min: 1, max: 128, message: '长度在 1 到 128 个字符', trigger: 'blur' }\r\n          ],\r\n          email: [\r\n            { required: true, message: '请输入电子邮件', trigger: 'blur' },\r\n            { min: 1, max: 254, message: '长度在 1 到 254 个字符', trigger: 'blur' }\r\n          ],\r\n          cron: [\r\n            { required: true, message: '请输入CRON定时任务时间', trigger: 'blur' },\r\n            { min: 1, max: 30, message: '长度在 1 到 30 个字符', trigger: 'blur' }\r\n          ]\r\n        },\r\n        tableData: []\r\n      }\r\n    },\r\n    mounted() {\r\n      this.taskList();\r\n    },\r\n    methods: {\r\n      taskList(){\r\n        this.$axios.get(this.$api.taskList, \r\n        {\r\n          params: {page: this.currentPage, size: this.pageSize}\r\n        }).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.tableData = response.data['res']\r\n            this.total = response.data['total']\r\n          }\r\n        })\r\n      },\r\n      handleSizeChange(val){\r\n        this.pageSize = val;\r\n        this.taskList()\r\n      },\r\n      handleCurrentChange(val){\r\n        this.currentPage = val;\r\n        this.taskList()\r\n      },\r\n      initTaskForm(){\r\n        this.taskForm.id = null,\r\n        this.taskForm.title = null,\r\n        this.taskForm.task_url = null,\r\n        this.taskForm.email = null,\r\n        this.taskForm.cron = null\r\n      },\r\n      addBtn(){\r\n        this.initTaskForm()\r\n        this.editTaskFlag = false\r\n        this.dialogFormVisible = true\r\n      },\r\n      editTask(id){\r\n        this.editTaskFlag = true\r\n        this.$axios.get((this.$api.taskManage + '/' + id)).then((response) => {\r\n          this.taskForm.id = id\r\n          this.taskForm.title = response.data['res']['title']\r\n          this.taskForm.task_url = response.data['res']['task_url']\r\n          this.taskForm.email = response.data['res']['email']\r\n          this.taskForm.cron = response.data['res']['cron']\r\n        })\r\n        this.dialogFormVisible = true\r\n      },\r\n      opTask(id, operation){\r\n        this.$axios.get((this.$api.taskOperation.replace(/OPERATION/g, operation) + '/' + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.taskList()\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      deleteTask(id){\r\n        this.$axios.delete((this.$api.taskManage + '/' + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.taskList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      addTaskBtn(){\r\n        let data = {\r\n          \"title\": this.taskForm.title,\r\n          \"task_url\": this.taskForm.task_url,\r\n          \"email\": this.taskForm.email,\r\n          \"cron\": this.taskForm.cron\r\n        }\r\n        this.$axios.post(this.$api.taskManage, data).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.dialogFormVisible = false;\r\n            this.taskList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      editTaskBtn(id){\r\n        let data = {\r\n          \"title\": this.taskForm.title,\r\n          \"task_url\": this.taskForm.task_url,\r\n          \"email\": this.taskForm.email,\r\n          \"cron\": this.taskForm.cron\r\n        }\r\n        this.$axios.put((this.$api.taskManage + '/' + id), data).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.dialogFormVisible = false;\r\n            this.editTaskFlag = false;\r\n            this.taskList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      cancelBtn(){\r\n        this.dialogFormVisible = false;\r\n        this.initTaskForm();\r\n        this.editTaskFlag = false;\r\n      }\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src/components/settings"}]}