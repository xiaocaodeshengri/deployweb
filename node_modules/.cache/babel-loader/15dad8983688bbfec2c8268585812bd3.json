{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js!D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\cicd\\Cicd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\cicd\\Cicd.vue","mtime":1583747397515},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: ['categorys'],\n  data: function data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      editTaskFlag: false,\n      dialogFormVisible: false,\n      cicdForm: {\n        id: '',\n        category_id: '',\n        service_name: '',\n        develop_env: '',\n        test_env: '',\n        develop_api_task: '',\n        test_api_task: ''\n      },\n      rules: {\n        category_id: [{\n          required: true,\n          message: '请输入选择项目组',\n          trigger: 'blur'\n        }]\n      },\n      tableData: [],\n      envList: [],\n      cicdTaskList: [],\n      category: ''\n    };\n  },\n  mounted: function mounted() {\n    this.cicdList(null);\n    this.environmentList();\n    this.cicdTask();\n  },\n  methods: {\n    environmentList: function environmentList() {\n      var _this = this;\n\n      this.$axios.get(this.$api.environmentList, {\n        params: {\n          page: 1,\n          size: 100,\n          category_id: localStorage.getItem(\"category_id\")\n        }\n      }).then(function (response) {\n        _this.envList = response.data['res'];\n      });\n    },\n    cicdTask: function cicdTask() {\n      var _this2 = this;\n\n      this.$axios.get(this.$api.cicdTaskList, {\n        params: {\n          category_id: localStorage.getItem(\"category_id\")\n        }\n      }).then(function (response) {\n        _this2.cicdTaskList = response.data['res'];\n      });\n    },\n    cicdList: function cicdList(category_id) {\n      var _this3 = this;\n\n      this.$axios.get(this.$api.cicdList, {\n        params: {\n          page: this.currentPage,\n          size: this.pageSize,\n          category_id: category_id\n        }\n      }).then(function (response) {\n        if (_this3.messageShow(_this3, response)) {\n          _this3.tableData = response.data['res'];\n          _this3.total = response.data['total'];\n        }\n      });\n    },\n    filterCicd: function filterCicd() {\n      this.cicdList(this.category);\n    },\n    refreshList: function refreshList() {\n      this.currentPage = 1, this.category = null, this.cicdList(this.category);\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.cicdList(this.category);\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.cicdList(this.category);\n    },\n    initCicdForm: function initCicdForm() {\n      this.cicdForm.id = null, this.cicdForm.category_id = null, this.cicdForm.service_name = null, this.cicdForm.develop_env = null, this.cicdForm.test_env = null, this.cicdForm.develop_api_task = null, this.cicdForm.test_api_task = null;\n    },\n    addBtn: function addBtn() {\n      this.initCicdForm();\n      this.editTaskFlag = false;\n      this.dialogFormVisible = true;\n    },\n    editCicd: function editCicd(id) {\n      var _this4 = this;\n\n      this.editTaskFlag = true;\n      this.$axios.get(this.$api.cicdManage + '/' + id).then(function (response) {\n        _this4.cicdForm.id = id;\n        _this4.cicdForm.category_id = response.data['res']['category_id'];\n        _this4.cicdForm.service_name = response.data['res']['service_name'];\n        _this4.cicdForm.develop_env = response.data['res']['develop_env'];\n        _this4.cicdForm.test_env = response.data['res']['test_env'];\n        _this4.cicdForm.develop_api_task = response.data['res']['develop_api_task'];\n        _this4.cicdForm.test_api_task = response.data['res']['test_api_task'];\n      });\n      this.dialogFormVisible = true;\n    },\n    opCicd: function opCicd(id, operation) {\n      var _this5 = this;\n\n      this.$axios.get(this.$api.cicdOperation.replace(/OPERATION/g, operation) + '/' + id).then(function (response) {\n        if (_this5.messageShow(_this5, response)) {\n          _this5.cicdList();\n        }\n      }).catch(function (error) {\n        _this5.errorMessageShow(_this5, error.response);\n      });\n    },\n    deleteTask: function deleteTask(id) {\n      var _this6 = this;\n\n      this.$axios.delete(this.$api.cicdManage + '/' + id).then(function (response) {\n        if (_this6.messageShow(_this6, response)) {\n          _this6.cicdList();\n        }\n      }).catch(function (error) {\n        _this6.errorMessageShow(_this6, error.response);\n      });\n    },\n    addCicdBtn: function addCicdBtn() {\n      var _this7 = this;\n\n      var data = {\n        \"category_id\": this.cicdForm.category_id,\n        \"service_name\": this.cicdForm.service_name,\n        \"develop_env\": this.cicdForm.develop_env,\n        \"test_env\": this.cicdForm.test_env,\n        \"develop_api_task\": this.cicdForm.develop_api_task,\n        \"test_api_task\": this.cicdForm.test_api_task\n      };\n      this.$axios.post(this.$api.cicdManage, data).then(function (response) {\n        if (_this7.messageShow(_this7, response)) {\n          _this7.dialogFormVisible = false;\n\n          _this7.cicdList();\n        }\n      }).catch(function (error) {\n        _this7.errorMessageShow(_this7, error.response);\n      });\n    },\n    editCicdBtn: function editCicdBtn(id) {\n      var _this8 = this;\n\n      var data = {\n        \"category_id\": this.cicdForm.category_id,\n        \"service_name\": this.cicdForm.service_name,\n        \"develop_env\": this.cicdForm.develop_env,\n        \"test_env\": this.cicdForm.test_env,\n        \"develop_api_task\": this.cicdForm.develop_api_task,\n        \"test_api_task\": this.cicdForm.test_api_task\n      };\n      this.$axios.put(this.$api.cicdManage + '/' + id, data).then(function (response) {\n        if (_this8.messageShow(_this8, response)) {\n          _this8.dialogFormVisible = false;\n          _this8.editTaskFlag = false;\n\n          _this8.cicdList();\n        }\n      }).catch(function (error) {\n        _this8.errorMessageShow(_this8, error.response);\n      });\n    },\n    cancelBtn: function cancelBtn() {\n      this.dialogFormVisible = false;\n      this.initCicdForm();\n      this.editTaskFlag = false;\n    }\n  }\n};",{"version":3,"sources":["Cicd.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"10\">\r\n          <el-col :span=\"3\"><h2>CICD配置</h2></el-col>\r\n          <el-col :span=\"3\" :offset=\"15\">\r\n            <el-select v-model=\"category\" filterable placeholder=\"根据项目筛选\" size=\"small\" v-on:change=\"filterCicd\"\r\n            style=\"padding-top:16px\">\r\n              <el-option\r\n                v-for=\"item in categorys\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-col>\r\n          <el-col :span=\"1\" style=\"padding-top:17px\">\r\n                <el-button type=\"primary\" icon=\"el-icon-refresh\" size=\"mini\" plain\r\n                            @click.native=\"refreshList\">\r\n                </el-button>\r\n          </el-col>\r\n          <el-col :span=\"1\" style=padding-top:16px>\r\n            <el-button @click.native=\"addBtn()\" type=\"primary\" icon=\"el-icon-plus\" size=\"small\" circle plain></el-button>\r\n          </el-col>\r\n        </el-row>\r\n        <el-divider></el-divider>\r\n        <el-table\r\n            :data=\"tableData\"\r\n            stripe\r\n            style=\"width: 100%\">\r\n            <el-table-column\r\n            prop=\"id\"\r\n            label=\"ID.\"\r\n            width=\"50\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"category\"\r\n            label=\"项目组\"\r\n            width=\"150\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"service_name\"\r\n            label=\"服务名称\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"develop_env\"\r\n            label=\"开发环境\"\r\n            width=\"150\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"develop_api_task\"\r\n            label=\"开发环境测试任务\"\r\n            width=\"200\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"test_env\"\r\n            label=\"测试环境\"\r\n            width=\"150\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"test_api_task\"\r\n            label=\"测试环境测试任务\"\r\n            width=\"200\">\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"300\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" plain\r\n                                @click.native=\"editCicd(tableData[scope.$index]['id'])\">Edit\r\n                    </el-button>\r\n                    <el-button type=\"success\" size=\"mini\" v-if=\"tableData[scope.$index]['status'] === 0\" plain\r\n                                @click.native=\"opCicd(tableData[scope.$index]['id'], 'enable')\">Enable\r\n                    </el-button>\r\n                    <el-button type=\"danger\" size=\"mini\" v-else plain\r\n                                @click.native=\"opCicd(tableData[scope.$index]['id'], 'disable')\">Disable\r\n                    </el-button>\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" plain\r\n                                @click.native=\"sureView(deleteTask,tableData[scope.$index]['id'],tableData[scope.$index]['id'])\">\r\n                        Delete\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <el-row type=\"flex\" justify=\"end\">\r\n          <el-col :span=\"12\" style=padding-top:24px>\r\n            <el-pagination\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"currentPage\"\r\n              :page-sizes=\"[10, 20, 50, 100]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"total\">\r\n            </el-pagination>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-dialog title=\"CICD策略配置\" :visible.sync=\"dialogFormVisible\">\r\n          <el-form :model=\"cicdForm\" :rules=\"rules\" ref=\"cicdForm\" label-width=\"150px\" class=\"demo-cicdForm\">\r\n              <el-form-item label=\"项目组\" prop=\"category_id\" size=\"small\">\r\n                  <el-select v-model=\"cicdForm.category_id\" placeholder=\"请选择项目组\">\r\n                    <el-option\r\n                      v-for=\"item in categorys\"\r\n                      :key=\"item.id\"\r\n                      :label=\"item.name\"\r\n                      :value=\"item.id\">\r\n                    </el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"服务名称\" prop=\"service_name\" size=\"small\">\r\n                  <el-input v-model=\"cicdForm.service_name\" class=\"commonwidth\" placeholder=\"network-interfaces\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"开发环境\" prop=\"develop_env\" size=\"small\">\r\n                  <el-select v-model=\"cicdForm.develop_env\" placeholder=\"请选择开发环境\">\r\n                    <el-option\r\n                      v-for=\"item in envList\"\r\n                      :key=\"item.id\"\r\n                      :label=\"item.ip\"\r\n                      :value=\"item.ip\">\r\n                    </el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"开发环境测试任务\" prop=\"develop_api_task\" size=\"small\">\r\n                  <el-select v-model=\"cicdForm.develop_api_task\" placeholder=\"请选择开发环境测试任务\">\r\n                    <el-option\r\n                      v-for=\"item in cicdTaskList\"\r\n                      :key=\"item.id\"\r\n                      :label=\"item.task_name\"\r\n                      :value=\"item.id\">\r\n                    </el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"测试环境\" prop=\"test_env\" size=\"small\">\r\n                  <el-select v-model=\"cicdForm.test_env\" placeholder=\"请选择测试环境\">\r\n                    <el-option\r\n                      v-for=\"item in envList\"\r\n                      :key=\"item.id\"\r\n                      :label=\"item.ip\"\r\n                      :value=\"item.ip\">\r\n                    </el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"测试环境测试任务\" prop=\"test_api_task\" size=\"small\">\r\n                  <el-select v-model=\"cicdForm.test_api_task\" placeholder=\"请选择测试环境测试任务\">\r\n                    <el-option\r\n                      v-for=\"item in cicdTaskList\"\r\n                      :key=\"item.id\"\r\n                      :label=\"item.task_name\"\r\n                      :value=\"item.id\">\r\n                    </el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click.native=\"cancelBtn()\">取 消</el-button>\r\n              <el-button v-if=\"editTaskFlag === true\" type=\"primary\" @click=\"editCicdBtn(cicdForm['id'])\">修 改</el-button>\r\n              <el-button v-else type=\"primary\" @click=\"addCicdBtn()\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    props: ['categorys'],\r\n    data() {\r\n      return {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        editTaskFlag: false,\r\n        dialogFormVisible: false,\r\n        cicdForm: {\r\n          id: '',\r\n          category_id: '',\r\n          service_name: '',\r\n          develop_env: '',\r\n          test_env: '',\r\n          develop_api_task: '',\r\n          test_api_task: ''\r\n        },\r\n        rules: {\r\n          category_id: [\r\n            { required: true, message: '请输入选择项目组', trigger: 'blur' },\r\n          ]\r\n        },\r\n        tableData: [],\r\n        envList: [],\r\n        cicdTaskList: [],\r\n        category: ''\r\n      }\r\n    },\r\n    mounted() {\r\n      this.cicdList(null);\r\n      this.environmentList();\r\n      this.cicdTask();\r\n    },\r\n    methods: {\r\n      environmentList(){\r\n        this.$axios.get(this.$api.environmentList, \r\n        {\r\n          params: {page: 1, size: 100, category_id: localStorage.getItem(\"category_id\")}\r\n        }).then((response) => {\r\n            this.envList = response.data['res']\r\n        })\r\n      },\r\n      cicdTask(){\r\n        this.$axios.get(this.$api.cicdTaskList, \r\n        {\r\n          params: {category_id: localStorage.getItem(\"category_id\")}\r\n        }).then((response) => {\r\n            this.cicdTaskList = response.data['res']\r\n        })\r\n      },\r\n      cicdList(category_id){\r\n        this.$axios.get(this.$api.cicdList, \r\n        {\r\n          params: {page: this.currentPage, size: this.pageSize, category_id: category_id}\r\n        }).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.tableData = response.data['res']\r\n            this.total = response.data['total']\r\n          }\r\n        })\r\n      },\r\n      filterCicd(){\r\n        this.cicdList(this.category)\r\n      },\r\n      refreshList(){\r\n          this.currentPage = 1,\r\n          this.category = null,\r\n          this.cicdList(this.category)\r\n      },\r\n      handleSizeChange(val){\r\n        this.pageSize = val;\r\n        this.cicdList(this.category)\r\n      },\r\n      handleCurrentChange(val){\r\n        this.currentPage = val;\r\n        this.cicdList(this.category)\r\n      },\r\n      initCicdForm(){\r\n        this.cicdForm.id = null,\r\n        this.cicdForm.category_id = null,\r\n        this.cicdForm.service_name = null,\r\n        this.cicdForm.develop_env = null,\r\n        this.cicdForm.test_env = null,\r\n        this.cicdForm.develop_api_task = null,\r\n        this.cicdForm.test_api_task = null\r\n        },\r\n      addBtn(){\r\n        this.initCicdForm()\r\n        this.editTaskFlag = false\r\n        this.dialogFormVisible = true\r\n      },\r\n      editCicd(id){\r\n        this.editTaskFlag = true\r\n        this.$axios.get((this.$api.cicdManage + '/' + id)).then((response) => {\r\n          this.cicdForm.id = id\r\n          this.cicdForm.category_id = response.data['res']['category_id']\r\n          this.cicdForm.service_name = response.data['res']['service_name']\r\n          this.cicdForm.develop_env = response.data['res']['develop_env']\r\n          this.cicdForm.test_env = response.data['res']['test_env']\r\n          this.cicdForm.develop_api_task = response.data['res']['develop_api_task']\r\n          this.cicdForm.test_api_task = response.data['res']['test_api_task']\r\n        })\r\n        this.dialogFormVisible = true\r\n      },\r\n      opCicd(id, operation){\r\n        this.$axios.get((this.$api.cicdOperation.replace(/OPERATION/g, operation) + '/' + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.cicdList()\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      deleteTask(id){\r\n        this.$axios.delete((this.$api.cicdManage + '/' + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.cicdList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      addCicdBtn(){\r\n        let data = {\r\n          \"category_id\": this.cicdForm.category_id,\r\n          \"service_name\": this.cicdForm.service_name,\r\n          \"develop_env\": this.cicdForm.develop_env,\r\n          \"test_env\": this.cicdForm.test_env,\r\n          \"develop_api_task\": this.cicdForm.develop_api_task,\r\n          \"test_api_task\": this.cicdForm.test_api_task\r\n        }\r\n        this.$axios.post(this.$api.cicdManage, data).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.dialogFormVisible = false;\r\n            this.cicdList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      editCicdBtn(id){\r\n        let data = {\r\n          \"category_id\": this.cicdForm.category_id,\r\n          \"service_name\": this.cicdForm.service_name,\r\n          \"develop_env\": this.cicdForm.develop_env,\r\n          \"test_env\": this.cicdForm.test_env,\r\n          \"develop_api_task\": this.cicdForm.develop_api_task,\r\n          \"test_api_task\": this.cicdForm.test_api_task\r\n        }\r\n        this.$axios.put((this.$api.cicdManage + '/' + id), data).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.dialogFormVisible = false;\r\n            this.editTaskFlag = false;\r\n            this.cicdList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      cancelBtn(){\r\n        this.dialogFormVisible = false;\r\n        this.initCicdForm();\r\n        this.editTaskFlag = false;\r\n      }\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src/components/cicd"}]}