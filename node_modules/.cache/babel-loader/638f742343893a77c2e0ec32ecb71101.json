{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js!D:\\workFiles\\deployweb\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\workFiles\\deployweb\\src\\util\\axiosConfig.js","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\util\\axiosConfig.js","mtime":1583747397561},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport router from \"../router\"; // http response 拦截器（所有接收到的请求都要从这儿过一次）\n\naxios.interceptors.response.use(function (response) {\n  if (response.data['msg'] === '登录超时，请重新登录') {\n    router.push({\n      path: '/login'\n    });\n  }\n\n  return response;\n} // error => {\n//     if(error.response.status === 401){\n//         router.go(-1)\n//         this.$notify({\n//             title: '警告',\n//             message: error.response.data['msg'],\n//             type: 'warning',\n//         });\n//     }\n//     return error\n// }\n);\nexport default axios;",{"version":3,"sources":["D:/workFiles/deployweb/src/util/axiosConfig.js"],"names":["axios","router","interceptors","response","use","data","push","path"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,kB,CACA;;AAEAD,KAAK,CAACE,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACI,UAAAD,QAAQ,EAAI;AACR,MAAGA,QAAQ,CAACE,IAAT,CAAc,KAAd,MAAyB,YAA5B,EAAyC;AAACJ,IAAAA,MAAM,CAACK,IAAP,CAAY;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAZ;AAA+B;;AACzE,SAAOJ,QAAP;AACH,CAJL,CAKI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfJ;AAkBA,eAAeH,KAAf","sourcesContent":["import axios from 'axios'\r\nimport router from \"../router\";\r\n// http response 拦截器（所有接收到的请求都要从这儿过一次）\r\n\r\naxios.interceptors.response.use(\r\n    response => {\r\n        if(response.data['msg'] === '登录超时，请重新登录'){router.push({path: '/login'});}\r\n        return response\r\n    },\r\n    // error => {\r\n    //     if(error.response.status === 401){\r\n    //         router.go(-1)\r\n    //         this.$notify({\r\n    //             title: '警告',\r\n    //             message: error.response.data['msg'],\r\n    //             type: 'warning',\r\n    //         });\r\n    //     }\r\n    //     return error\r\n    // }\r\n);\r\n\r\nexport default axios;\r\n"]}]}