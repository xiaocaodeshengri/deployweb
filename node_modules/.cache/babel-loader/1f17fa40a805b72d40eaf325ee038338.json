{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js!D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\Header.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\Header.vue","mtime":1583747397514},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as types from '@/store/types';\nexport default {\n  inject: ['reload'],\n  props: ['categorys'],\n  data: function data() {\n    return {\n      topoFormVisible: false,\n      dialogFormVisible: false,\n      registerFormVisible: false,\n      username: null,\n      activeIndex: '1',\n      links: [],\n      topos: [],\n      passwordForm: {\n        password: '',\n        passwordConfirm: ''\n      },\n      rules: {\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        passwordConfirm: [{\n          required: true,\n          message: '请再次输入密码',\n          trigger: 'blur'\n        }]\n      },\n      registerForm: {\n        username: '',\n        name: '',\n        password: '',\n        passwordConfirm: '',\n        email: '',\n        category_id: null\n      },\n      registerRules: {\n        username: [{\n          required: true,\n          message: '请输入用户登录名称',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入用户姓名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        passwordConfirm: [{\n          required: true,\n          message: '请再次输入密码',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入用户电子邮件',\n          trigger: 'blur'\n        }],\n        category_id: [{\n          required: true,\n          message: '请选择项目组',\n          trigger: 'change'\n        }]\n      },\n      topoForm: {\n        name: ''\n      },\n      topoRules: {\n        name: [{\n          required: true,\n          message: '请输入环境拓扑图名称',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.linkList();\n    this.topoList();\n    this.getUsername();\n  },\n  methods: {\n    handleSelect: function handleSelect(key, keyPath) {\n      console.log(key, keyPath);\n    },\n    initPasswordForm: function initPasswordForm() {\n      this.passwordForm.password = null;\n      this.passwordForm.passwordConfirm = null;\n    },\n    initRegisterForm: function initRegisterForm() {\n      this.registerForm.username = null;\n      this.registerForm.name = null;\n      this.registerForm.password = null;\n      this.registerForm.passwordConfirm = null;\n      this.registerForm.email = null;\n      this.registerForm.category_id = null;\n    },\n    linkList: function linkList() {\n      var _this = this;\n\n      this.$axios.get(this.$api.linkList, {\n        params: {\n          page: 1,\n          size: 100,\n          category_id: 17\n        }\n      }).then(function (response) {\n        _this.links = response.data['res'];\n      });\n    },\n    topoList: function topoList() {\n      var _this2 = this;\n\n      this.$axios.get(this.$api.topoList).then(function (response) {\n        _this2.topos = response.data['res'];\n      });\n    },\n    getUsername: function getUsername() {\n      this.username = localStorage.getItem(\"username\");\n    },\n    logout: function logout() {\n      var _this3 = this;\n\n      this.$axios.get(this.$api.logoutApi).then(function (response) {\n        if (_this3.messageShow(_this3, response)) {\n          _this3.$store.commit(types.LOGOUT);\n\n          _this3.$router.push('/');\n\n          _this3.reload();\n        }\n      });\n    },\n    changePassword: function changePassword() {\n      this.initPasswordForm();\n      this.dialogFormVisible = true;\n    },\n    register: function register() {\n      this.registerFormVisible = true;\n    },\n    cancelBtn: function cancelBtn() {\n      this.initPasswordForm();\n      this.dialogFormVisible = false;\n    },\n    changePasswordBtn: function changePasswordBtn() {\n      var _this4 = this;\n\n      var data = {\n        \"username\": this.username,\n        \"password\": this.passwordForm.password,\n        \"password_confirm\": this.passwordForm.passwordConfirm\n      };\n      this.$axios.put(this.$api.changePassword, data).then(function (response) {\n        if (_this4.messageShow(_this4, response)) {\n          _this4.dialogFormVisible = false;\n\n          _this4.$router.push({\n            path: '/login'\n          });\n        }\n      }).catch(function (error) {\n        _this4.errorMessageShow(_this4, error.response);\n      });\n    },\n    cancelRegisterBtn: function cancelRegisterBtn() {\n      this.initRegisterForm();\n      this.registerFormVisible = false;\n    },\n    registerBtn: function registerBtn() {\n      var _this5 = this;\n\n      var data = {\n        \"username\": this.registerForm.username,\n        \"name\": this.registerForm.name,\n        \"password\": this.registerForm.password,\n        \"password_confirm\": this.registerForm.passwordConfirm,\n        \"email\": this.registerForm.email,\n        \"category_id\": this.registerForm.category_id\n      };\n      this.$axios.post(this.$api.userManage, data).then(function (response) {\n        if (_this5.messageShow(_this5, response)) {\n          _this5.registerFormVisible = false;\n        }\n      }).catch(function (error) {\n        _this5.errorMessageShow(_this5, error.response);\n      });\n    },\n    newTopo: function newTopo() {\n      this.topoFormVisible = true;\n    },\n    cancelTopoBtn: function cancelTopoBtn() {\n      this.topoForm.name = null;\n      this.topoFormVisible = false;\n    },\n    topoBtn: function topoBtn() {\n      var _this6 = this;\n\n      var data = {\n        \"name\": this.topoForm.name\n      };\n      this.$axios.post(this.$api.topoList, data).then(function (response) {\n        if (_this6.messageShow(_this6, response)) {\n          _this6.topoFormVisible = false;\n          var url = '#/topo/' + response.data['res']['id'];\n          window.open(url, '_blank');\n        }\n      }).catch(function (error) {\n        _this6.errorMessageShow(_this6, error.response);\n      });\n    }\n  }\n};",{"version":3,"sources":["Header.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n      <el-row>\r\n          <el-col :span=\"10\" :offset=\"14\">\r\n          <el-menu :default-active=\"activeIndex\" :router=\"true\" class=\"el-menu-demo\" mode=\"horizontal\">\r\n                  <el-menu-item index=\"/\">首页</el-menu-item>\r\n                  <el-menu-item index=\"/about\">关于</el-menu-item>\r\n                  <el-submenu index=\"1\"><template slot=\"title\">新建</template>\r\n                      <el-menu-item index=\"/management/plans/create\">计划</el-menu-item>\r\n                  </el-submenu>\r\n                  <el-submenu index=\"2\"><template slot=\"title\">环境链接</template>\r\n                      <el-menu-item v-for=\"link in links\" v-bind:key=\"link.linkName\">\r\n                        <a :href=\"link.url\" target=\"_blank\">{{ link.name }}</a>\r\n                      </el-menu-item>\r\n                  </el-submenu>\r\n                  <el-submenu index=\"3\"><template slot=\"title\">环境拓扑</template>\r\n                      <el-menu-item @click.native=\"newTopo()\">新建</el-menu-item>\r\n                      <hr>\r\n                      <el-menu-item v-for=\"topo in topos\" v-bind:key=\"topo.id\">\r\n                        <a :href=\"topo.url\" target=\"_blank\">{{ topo.name }}</a>\r\n                      </el-menu-item>\r\n                  </el-submenu>\r\n                  <el-submenu v-if=\"username != null\" index=\"4\"><template slot=\"title\">{{ username }}</template>\r\n                      <el-menu-item @click.native=\"logout()\">Logout</el-menu-item>\r\n                      <el-menu-item @click.native=\"changePassword()\">修改密码</el-menu-item>\r\n                  </el-submenu>\r\n                  <el-submenu v-else index=\"4\"><template slot=\"title\">Login</template>\r\n                      <el-menu-item index=\"/login\">Login</el-menu-item>\r\n                      <el-menu-item @click.native=\"register()\">Register</el-menu-item>\r\n                  </el-submenu>\r\n          </el-menu>\r\n          </el-col>\r\n      </el-row>\r\n\r\n        <el-dialog title=\"修改密码\" :visible.sync=\"dialogFormVisible\" width=\"30%\">\r\n          <el-form :model=\"passwordForm\" :rules=\"rules\" ref=\"passwordForm\" label-width=\"100px\">\r\n              <el-form-item label=\"密码\" prop=\"password\" size=\"small\">\r\n                  <el-input v-model=\"passwordForm.password\" class=\"password\" type=\"password\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"确认密码\" prop=\"passwordConfirm\" size=\"small\">\r\n                  <el-input v-model=\"passwordForm.passwordConfirm\" class=\"password\" type=\"password\"></el-input>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"cancelBtn()\">取 消</el-button>\r\n              <el-button type=\"primary\" @click=\"changePasswordBtn()\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-dialog title=\"用户注册\" :visible.sync=\"registerFormVisible\" width=\"30%\">\r\n          <el-form :model=\"registerForm\" :rules=\"registerRules\" ref=\"registerForm\" label-width=\"100px\">\r\n              <el-form-item label=\"登录名称\" prop=\"username\" size=\"small\">\r\n                  <el-input v-model=\"registerForm.username\" class=\"register\" placeholder=\"请输入登录名称，如：zhangsan\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"用户姓名\" prop=\"name\" size=\"small\">\r\n                  <el-input v-model=\"registerForm.name\" class=\"register\" placeholder=\"请输入显示名称，如：张三\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"密码\" prop=\"password\" size=\"small\">\r\n                  <el-input v-model=\"registerForm.password\" class=\"register\" type=\"password\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"确认密码\" prop=\"passwordConfirm\" size=\"small\">\r\n                  <el-input v-model=\"registerForm.passwordConfirm\" class=\"register\" type=\"password\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"电子邮件\" prop=\"email\" size=\"small\">\r\n                  <el-input v-model=\"registerForm.email\" class=\"register\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"项目\" prop=\"category_id\" size=\"small\">\r\n                  <el-select v-model=\"registerForm.category_id\" placeholder=\"请选择项目\">\r\n                    <el-option\r\n                      v-for=\"item in categorys\"\r\n                      :key=\"item.id\"\r\n                      :label=\"item.name\"\r\n                      :value=\"item.id\">\r\n                    </el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"cancelRegisterBtn()\">取 消</el-button>\r\n              <el-button type=\"primary\" @click=\"registerBtn()\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-dialog title=\"新建网络拓扑\" :visible.sync=\"topoFormVisible\" width=\"30%\">\r\n          <el-form :model=\"topoForm\" :rules=\"topoRules\" ref=\"topoForm\" label-width=\"100px\">\r\n              <el-form-item label=\"拓扑名称\" prop=\"name\" size=\"small\">\r\n                  <el-input v-model=\"topoForm.name\" class=\"register\" placeholder=\"请输入拓扑名称\"></el-input>\r\n              </el-form-item>\r\n          </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"cancelTopoBtn()\">取 消</el-button>\r\n              <el-button type=\"primary\" @click=\"topoBtn()\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import * as types from '@/store/types'\r\n  export default {\r\n    inject: ['reload'],\r\n    props: ['categorys'],\r\n    data() {\r\n      return {\r\n        topoFormVisible: false,\r\n        dialogFormVisible: false,\r\n        registerFormVisible: false,\r\n        username: null,\r\n        activeIndex: '1',\r\n        links: [],\r\n        topos: [],\r\n        passwordForm: {\r\n          password: '',\r\n          passwordConfirm: ''\r\n        },\r\n        rules: {\r\n          password: [\r\n            { required: true, message: '请输入密码', trigger: 'blur' }\r\n          ],\r\n          passwordConfirm: [\r\n            { required: true, message: '请再次输入密码', trigger: 'blur' }\r\n          ]\r\n        },\r\n        registerForm: {\r\n          username: '',\r\n          name: '',\r\n          password: '',\r\n          passwordConfirm: '',\r\n          email: '',\r\n          category_id: null\r\n        },\r\n        registerRules: {\r\n          username: [\r\n            { required: true, message: '请输入用户登录名称', trigger: 'blur' }\r\n          ],\r\n          name: [\r\n            { required: true, message: '请输入用户姓名', trigger: 'blur' }\r\n          ],\r\n          password: [\r\n            { required: true, message: '请输入密码', trigger: 'blur' }\r\n          ],\r\n          passwordConfirm: [\r\n            { required: true, message: '请再次输入密码', trigger: 'blur' }\r\n          ],\r\n          email: [\r\n            { required: true, message: '请输入用户电子邮件', trigger: 'blur' }\r\n          ],\r\n          category_id: [\r\n            { required: true, message: '请选择项目组', trigger: 'change' }\r\n          ]\r\n        },\r\n        topoForm: {\r\n          name: ''\r\n        },\r\n        topoRules: {\r\n          name: [\r\n            { required: true, message: '请输入环境拓扑图名称', trigger: 'blur' }\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    mounted() {\r\n      this.linkList();\r\n      this.topoList();\r\n      this.getUsername()\r\n    },\r\n    methods: {\r\n      handleSelect(key, keyPath) {\r\n        console.log(key, keyPath);\r\n      },\r\n      initPasswordForm(){\r\n        this.passwordForm.password = null\r\n        this.passwordForm.passwordConfirm = null\r\n      },\r\n      initRegisterForm(){\r\n        this.registerForm.username = null\r\n        this.registerForm.name = null\r\n        this.registerForm.password = null\r\n        this.registerForm.passwordConfirm = null\r\n        this.registerForm.email = null\r\n        this.registerForm.category_id = null\r\n      },\r\n      linkList(){\r\n        this.$axios.get(this.$api.linkList, \r\n        {\r\n          params: {page: 1, size: 100, category_id: 17}\r\n        }).then((response) => {\r\n            this.links = response.data['res']\r\n        })\r\n      },\r\n      topoList(){\r\n        this.$axios.get(this.$api.topoList).then((response) => {\r\n          this.topos = response.data['res']\r\n        })\r\n      },\r\n      getUsername(){\r\n        this.username = localStorage.getItem(\"username\")\r\n      },\r\n      logout(){\r\n        this.$axios.get(this.$api.logoutApi).then((response) => {\r\n          if(this.messageShow(this, response)){\r\n            this.$store.commit(types.LOGOUT);\r\n            this.$router.push('/');\r\n            this.reload()\r\n          }\r\n        })\r\n      },\r\n      changePassword(){\r\n        this.initPasswordForm()\r\n        this.dialogFormVisible = true\r\n      },\r\n      register(){\r\n        this.registerFormVisible = true\r\n      },\r\n      cancelBtn(){\r\n        this.initPasswordForm()\r\n        this.dialogFormVisible = false\r\n      },\r\n      changePasswordBtn(){\r\n        let data = {\r\n          \"username\": this.username,\r\n          \"password\": this.passwordForm.password,\r\n          \"password_confirm\": this.passwordForm.passwordConfirm\r\n        }\r\n        this.$axios.put(this.$api.changePassword, data).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.dialogFormVisible = false;\r\n            this.$router.push({path: '/login'});\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      cancelRegisterBtn(){\r\n        this.initRegisterForm()\r\n        this.registerFormVisible = false\r\n      },\r\n      registerBtn(){\r\n        let data = {\r\n          \"username\": this.registerForm.username,\r\n          \"name\": this.registerForm.name,\r\n          \"password\": this.registerForm.password,\r\n          \"password_confirm\": this.registerForm.passwordConfirm,\r\n          \"email\": this.registerForm.email,\r\n          \"category_id\": this.registerForm.category_id\r\n        }\r\n        this.$axios.post(this.$api.userManage, data).then(response => {\r\n          if (this.messageShow(this, response)){\r\n            this.registerFormVisible = false;\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      newTopo(){\r\n        this.topoFormVisible = true\r\n      },\r\n      cancelTopoBtn(){\r\n        this.topoForm.name = null\r\n        this.topoFormVisible = false\r\n      },\r\n      topoBtn(){\r\n        let data = {\r\n          \"name\": this.topoForm.name\r\n        }\r\n        this.$axios.post(this.$api.topoList, data).then(response => {\r\n          if (this.messageShow(this, response)){\r\n            this.topoFormVisible = false;\r\n            var url = '#/topo/' + response.data['res']['id']\r\n            window.open(url, '_blank')\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src/components"}]}