{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js!D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\qr\\Require.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\qr\\Require.vue","mtime":1583747397543},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"D:\\\\workFiles\\\\deployweb\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  inject: ['reload'],\n  data: function data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      tableData: [],\n      filterInput: '',\n      filterTag: '',\n      resolver: '',\n      record_type: '',\n      p_class: '',\n      status_code: '',\n      users: [],\n      record_types: [{\n        key: '环境问题',\n        value: '环境问题'\n      }, {\n        key: '脚本问题',\n        value: '脚本问题'\n      }, {\n        key: '版本问题',\n        value: '版本问题'\n      }, {\n        key: '测试数据有误',\n        value: '测试数据有误'\n      }, {\n        key: '其它',\n        value: '其它'\n      }],\n      p_classes: [{\n        key: 'P1',\n        value: 'P1'\n      }, {\n        key: 'P2',\n        value: 'P2'\n      }, {\n        key: 'P3',\n        value: 'P3'\n      }, {\n        key: 'P4',\n        value: 'P4'\n      }],\n      status_codes: [{\n        key: '0',\n        value: '未确认'\n      }, {\n        key: '1',\n        value: '已确认'\n      }, {\n        key: '2',\n        value: '已关闭'\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.requireList();\n    this.getAllUsers();\n  },\n  methods: {\n    editRequire: function editRequire(id) {\n      this.$router.push('/q_r/requires/' + id + '/edit');\n    },\n    answerRequire: function answerRequire(id) {\n      console.log(id);\n    },\n    closeRequire: function closeRequire(id) {\n      var _this = this;\n\n      this.$axios.get(this.$api.requireOperation.replace(/OPERATION/g, 'close') + '/' + id).then(function (response) {\n        if (_this.messageShow(_this, response)) {\n          _this.reload();\n        }\n      }).catch(function (error) {\n        _this.errorMessageShow(_this, error.response);\n      });\n    },\n    reactiveRequire: function reactiveRequire(id) {\n      var _this2 = this;\n\n      this.$axios.get(this.$api.requireOperation.replace(/OPERATION/g, 'reactive') + '/' + id).then(function (response) {\n        if (_this2.messageShow(_this2, response)) {\n          _this2.reload();\n        }\n      }).catch(function (error) {\n        _this2.errorMessageShow(_this2, error.response);\n      });\n    },\n    deleteRequire: function deleteRequire(id) {\n      var _this3 = this;\n\n      this.$axios.delete(this.$api.requireManage + '/' + id).then(function (response) {\n        if (_this3.messageShow(_this3, response)) {\n          _this3.requireList();\n        }\n      }).catch(function (error) {\n        _this3.errorMessageShow(_this3, error.response);\n      });\n    },\n    requireList: function requireList() {\n      var _this4 = this;\n\n      var paramsData = _defineProperty({\n        page: this.currentPage,\n        size: this.pageSize,\n        record_type: this.record_type,\n        resolver: this.resolver,\n        p_class: this.p_class\n      }, \"resolver\", this.resolver);\n\n      if (this.filterTag === 'resolver') {\n        paramsData.resolver = this.filterInput;\n      } else if (this.filterTag === 'record_type') {\n        paramsData.record_type = this.filterInput;\n      } else if (this.filterTag === 'p_class') {\n        paramsData.p_class = this.filterInput;\n      } else if (this.filterTag === 'status_code') {\n        paramsData.status_code = this.filterInput;\n      }\n\n      this.$axios.get(this.$api.requireList, {\n        params: paramsData\n      }).then(function (response) {\n        _this4.tableData = response.data['res'];\n        _this4.total = response.data['total'];\n      }).catch(function (error) {\n        _this4.errorMessageShow(_this4, error.response);\n      });\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.requireList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.requireList();\n    },\n    gotoRequireCreate: function gotoRequireCreate() {\n      this.$router.push('/q_r/requires/create');\n    },\n    querySearch: function querySearch(queryString, cb) {\n      this.initFilter();\n\n      if (this.filterTag === 'resolver') {\n        var filters = this.users;\n      } else if (this.filterTag === 'record_type') {\n        var filters = this.record_types;\n      } else if (this.filterTag === 'p_class') {\n        var filters = this.p_classes;\n      } else if (this.filterTag === 'status_code') {\n        var filters = this.status_codes;\n      }\n\n      var results = queryString ? filters.filter(this.createFilter(queryString)) : filters;\n      cb(results);\n    },\n    createFilter: function createFilter(queryString) {\n      return function (filters) {\n        return filters.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    getAllUsers: function getAllUsers() {\n      var _this5 = this;\n\n      this.$axios.get(this.$api.userList, {\n        params: {\n          page: 1,\n          size: 100\n        }\n      }).then(function (response) {\n        _this5.users = response.data['res'];\n      });\n    },\n    initFilter: function initFilter() {\n      this.resolver = null;\n      this.p_class = null;\n      this.status_code = null;\n      this.record_type = null;\n    },\n    refreshList: function refreshList() {\n      this.filterTag = null;\n      this.filterInput = null;\n      this.initFilter();\n      this.requireList();\n    },\n    filterBtn: function filterBtn() {\n      this.requireList();\n    }\n  }\n};",{"version":3,"sources":["Require.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"10\">\r\n          <el-col :span=\"3\"><h2>需求记录</h2></el-col>\r\n          <el-col :span=\"6\" :offset=\"11\" style=\"padding-top:18px\">\r\n            <el-autocomplete placeholder=\"请输入内容\" v-model=\"filterInput\" size=\"small\"\r\n            :fetch-suggestions=\"querySearch\"\r\n            :trigger-on-focus=\"true\">\r\n              <el-select v-model=\"filterTag\" slot=\"prepend\" placeholder=\"请选择\" class=\"select-inside\">\r\n                <el-option label=\"类型\" value=\"record_type\"></el-option>\r\n                <el-option label=\"级别\" value=\"p_class\"></el-option>\r\n                <el-option label=\"状态\" value=\"status_code\"></el-option>\r\n                <el-option label=\"指派人\" value=\"resolver\"></el-option>\r\n              </el-select>\r\n              <el-button slot=\"append\" icon=\"el-icon-search\" @click.native=\"filterBtn\"></el-button>\r\n            </el-autocomplete>\r\n          </el-col>\r\n          <el-col :span=\"1\" style=\"padding-top:18px\">\r\n                <el-button type=\"primary\" icon=\"el-icon-refresh\" size=\"mini\" plain\r\n                            @click.native=\"refreshList\">\r\n                </el-button>\r\n          </el-col>\r\n          <el-col :span=\"1\" style=padding-top:17px>\r\n            <el-button @click.native=\"gotoRequireCreate\" type=\"primary\" icon=\"el-icon-plus\" size=\"small\" circle plain></el-button>\r\n          </el-col>\r\n        </el-row>\r\n        <el-divider></el-divider>\r\n        <el-table\r\n            :data=\"tableData\"\r\n            stripe\r\n            style=\"width: 100%\">\r\n            <el-table-column\r\n            type=\"index\"\r\n            label=\"No.\"\r\n            width=\"50\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"title\"\r\n            label=\"标题\"\r\n            width=\"350\">\r\n            <template slot-scope=\"scope\">\r\n              <a :href=\"'#/q_r/requires/' + scope.row.id + '/detail'\">{{ scope.row.title }}</a>\r\n            </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"record_type\"\r\n            label=\"类型\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"p_class\"\r\n            label=\"级别\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"questioner\"\r\n            label=\"提出者\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"resolver\"\r\n            label=\"指派\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"status\"\r\n            label=\"状态\">\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"300\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" plain\r\n                                @click.native=\"editRequire(tableData[scope.$index]['id'])\">Edit\r\n                    </el-button>\r\n                    <el-button type=\"warning\" size=\"mini\" v-if=\"tableData[scope.$index]['status_code'] === 0\" plain\r\n                                :disabled=\"true\">Close\r\n                    </el-button>\r\n                    <el-button type=\"warning\" size=\"mini\" v-else-if=\"tableData[scope.$index]['status_code'] === 1\" plain\r\n                                @click.native=\"closeRequire(tableData[scope.$index]['id'])\">Close\r\n                    </el-button>\r\n                    <el-button type=\"info\" size=\"mini\" v-else plain\r\n                                @click.native=\"reactiveRequire(tableData[scope.$index]['id'])\">Reactive\r\n                    </el-button>\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" plain\r\n                                @click.native=\"sureView(deleteRequire,tableData[scope.$index]['id'],tableData[scope.$index]['title'])\">\r\n                        Delete\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <el-row type=\"flex\" justify=\"end\">\r\n          <el-col :span=\"12\" style=padding-top:24px>\r\n            <el-pagination\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"currentPage\"\r\n              :page-sizes=\"[10, 20, 50, 100]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"total\">\r\n            </el-pagination>\r\n          </el-col>\r\n        </el-row>\r\n        \r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    inject: ['reload'],\r\n    data() {\r\n      return {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        tableData: [],\r\n        filterInput: '',\r\n        filterTag: '',\r\n        resolver: '',\r\n        record_type: '',\r\n        p_class: '',\r\n        status_code: '',\r\n        users: [],\r\n        record_types: [\r\n          {key: '环境问题', value: '环境问题'},\r\n          {key: '脚本问题', value: '脚本问题'},\r\n          {key: '版本问题', value: '版本问题'},\r\n          {key: '测试数据有误', value: '测试数据有误'},\r\n          {key: '其它', value: '其它'}\r\n        ],\r\n        p_classes: [\r\n          {key: 'P1', value: 'P1'},\r\n          {key: 'P2', value: 'P2'},\r\n          {key: 'P3', value: 'P3'},\r\n          {key: 'P4', value: 'P4'}\r\n        ],\r\n        status_codes: [\r\n          {key: '0', value: '未确认'},\r\n          {key: '1', value: '已确认'},\r\n          {key: '2', value: '已关闭'}\r\n        ]\r\n      }\r\n    },\r\n    mounted() {\r\n      this.requireList();\r\n      this.getAllUsers();\r\n    },\r\n    methods: {\r\n      editRequire(id){\r\n        this.$router.push('/q_r/requires/' + id +'/edit')\r\n      },\r\n      answerRequire(id){\r\n        console.log(id)\r\n      },\r\n      closeRequire(id){\r\n        this.$axios.get((this.$api.requireOperation.replace(/OPERATION/g, 'close') + '/' + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.reload();\r\n          }\r\n        }).catch((error) => {\r\n            this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      reactiveRequire(id){\r\n        this.$axios.get((this.$api.requireOperation.replace(/OPERATION/g, 'reactive') + '/' + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.reload();\r\n          }\r\n        }).catch((error) => {\r\n            this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      deleteRequire(id){\r\n        this.$axios.delete((this.$api.requireManage + '/' + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.requireList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      requireList(){\r\n        let paramsData = {\r\n          page: this.currentPage,\r\n          size: this.pageSize,\r\n          record_type: this.record_type,\r\n          resolver: this.resolver,\r\n          p_class: this.p_class,\r\n          resolver: this.resolver\r\n        }\r\n        if (this.filterTag === 'resolver'){\r\n          paramsData.resolver = this.filterInput;\r\n        }else if (this.filterTag === 'record_type'){\r\n          paramsData.record_type = this.filterInput;\r\n        }else if (this.filterTag === 'p_class'){\r\n          paramsData.p_class = this.filterInput;\r\n        }else if (this.filterTag === 'status_code'){\r\n          paramsData.status_code = this.filterInput;\r\n        }\r\n        this.$axios.get(this.$api.requireList,\r\n        {\r\n          params: paramsData\r\n        }).then((response) => {\r\n            this.tableData = response.data['res']\r\n            this.total = response.data['total']\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      handleSizeChange(val){\r\n        this.pageSize = val;\r\n        this.requireList()\r\n      },\r\n      handleCurrentChange(val){\r\n        this.currentPage = val;\r\n        this.requireList()\r\n      },\r\n      gotoRequireCreate(){\r\n        this.$router.push('/q_r/requires/create')\r\n      },\r\n      querySearch(queryString, cb) {\r\n        this.initFilter()\r\n        if (this.filterTag === 'resolver'){\r\n          var filters = this.users;\r\n        }else if (this.filterTag === 'record_type'){\r\n          var filters = this.record_types;\r\n        }else if (this.filterTag === 'p_class'){\r\n          var filters = this.p_classes;\r\n        }else if (this.filterTag === 'status_code'){\r\n          var filters = this.status_codes;\r\n        }\r\n        var results = queryString ? filters.filter(this.createFilter(queryString)) : filters;\r\n        cb(results);\r\n      },\r\n      createFilter(queryString) {\r\n        return (filters) => {\r\n          return (filters.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\r\n        };\r\n      },\r\n      getAllUsers(){\r\n        this.$axios.get(this.$api.userList, \r\n        {\r\n          params: {page: 1, size: 100}\r\n        }).then((response) => {\r\n          this.users = response.data['res']\r\n        })\r\n      },\r\n      initFilter(){\r\n        this.resolver = null\r\n        this.p_class = null\r\n        this.status_code = null\r\n        this.record_type = null\r\n      },\r\n      refreshList(){\r\n        this.filterTag = null\r\n        this.filterInput = null\r\n        this.initFilter()\r\n        this.requireList()\r\n      },\r\n      filterBtn(){\r\n        this.requireList()\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.select-inside {\r\n  width: 100px;\r\n}\r\n</style>"],"sourceRoot":"src/components/qr"}]}