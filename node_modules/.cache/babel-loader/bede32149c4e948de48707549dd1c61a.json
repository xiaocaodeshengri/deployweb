{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js!D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\environment\\Product.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\environment\\Product.vue","mtime":1583747397524},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  inject: ['reload'],\n  props: ['categorys'],\n  data: function data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      dialogFormVisible: false,\n      dialogRegionFormVisible: false,\n      editFlag: false,\n      category: '',\n      tableData: [],\n      tableHead: [],\n      productForm: {\n        id: '',\n        category_id: null,\n        product: '',\n        function: '',\n        region: []\n      },\n      rules: {\n        category_id: [{\n          required: true,\n          message: '请选择所属项目',\n          trigger: 'change'\n        }],\n        product: [{\n          required: true,\n          message: '请输入产品名称',\n          trigger: 'blur'\n        }],\n        function: [{\n          required: true,\n          message: '请输入产品二级功能',\n          trigger: 'blur'\n        }],\n        region: [{\n          required: true,\n          message: '请选择开通地域',\n          trigger: 'blur'\n        }]\n      },\n      regionForm: {\n        name: '',\n        region: ''\n      },\n      regionRules: {\n        name: [{\n          required: true,\n          message: '请输入地域名称',\n          trigger: 'blur'\n        }],\n        region: [{\n          required: true,\n          message: '请输入输入地域英文表示字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.regionList();\n    this.productList();\n  },\n  methods: {\n    regionList: function regionList() {\n      var _this = this;\n\n      this.$axios.get(this.$api.regionList, {\n        params: {\n          page: 1,\n          size: 100\n        }\n      }).then(function (response) {\n        _this.tableHead = response.data['res'];\n      });\n    },\n    productList: function productList(category) {\n      var _this2 = this;\n\n      this.$axios.get(this.$api.productList, {\n        params: {\n          page: this.currentPage,\n          size: this.pageSize,\n          category_id: category\n        }\n      }).then(function (response) {\n        _this2.tableData = response.data['res'];\n        _this2.total = response.data['total'];\n      });\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.productList(this.category);\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.productList(this.category);\n    },\n    filterProduct: function filterProduct() {\n      this.productList(this.category);\n    },\n    refreshList: function refreshList() {\n      this.currentPage = 1, this.category = null, this.productList(this.category);\n    },\n    editProduct: function editProduct(row) {\n      var _this3 = this;\n\n      this.$axios.get(this.$api.productManage + '/' + row.id).then(function (response) {\n        _this3.productForm = response.data['res'];\n      });\n      this.dialogFormVisible = true;\n      this.editFlag = true;\n    },\n    editProductBtn: function editProductBtn(id) {\n      var _this4 = this;\n\n      var data = {\n        'category_id': this.productForm.category_id,\n        'product': this.productForm.product,\n        'function': this.productForm.function,\n        'region': this.productForm.region\n      };\n      this.$axios.put(this.$api.productManage + '/' + id, data).then(function (response) {\n        if (_this4.messageShow(_this4, response)) {\n          _this4.productList(_this4.category);\n\n          _this4.dialogFormVisible = false;\n          _this4.editFlag = false;\n        }\n      }).catch(function (error) {\n        _this4.errorMessageShow(_this4, error.response);\n      });\n    },\n    addBtn: function addBtn() {\n      this.initForm();\n      this.editFlag = false;\n      this.dialogFormVisible = true;\n    },\n    addRegionBtn: function addRegionBtn() {\n      this.initRegionForm();\n      this.dialogRegionFormVisible = true;\n    },\n    addProductBtn: function addProductBtn() {\n      var _this5 = this;\n\n      var data = {\n        'category_id': this.productForm.category_id,\n        'product': this.productForm.product,\n        'function': this.productForm.function,\n        'region': this.productForm.region\n      };\n      this.$axios.post(this.$api.productManage, data).then(function (response) {\n        if (_this5.messageShow(_this5, response)) {\n          _this5.productList(_this5.category);\n\n          _this5.dialogFormVisible = false;\n        }\n      }).catch(function (error) {\n        _this5.errorMessageShow(_this5, error.response);\n      });\n    },\n    addRegion: function addRegion() {\n      var _this6 = this;\n\n      var data = {\n        'name': this.regionForm.name,\n        'region': this.regionForm.region\n      };\n      this.$axios.post(this.$api.regionManage, data).then(function (response) {\n        if (_this6.messageShow(_this6, response)) {\n          _this6.dialogFormVisible = false;\n\n          _this6.reload();\n        }\n      }).catch(function (error) {\n        _this6.errorMessageShow(_this6, error.response);\n      });\n    },\n    initForm: function initForm() {\n      this.productForm.category_id = null, this.productForm.product = null, this.productForm.function = null, this.productForm.region = [];\n    },\n    initRegionForm: function initRegionForm() {\n      this.regionForm.name = '', this.regionForm.region = '';\n    },\n    cancleBtn: function cancleBtn() {\n      this.initForm();\n      this.editFlag = false;\n      this.dialogFormVisible = false;\n    },\n    cancleRegionBtn: function cancleRegionBtn() {\n      this.initRegionForm();\n      this.dialogRegionFormVisible = false;\n    },\n    deleteProduct: function deleteProduct(id) {\n      var _this7 = this;\n\n      this.$axios.delete(this.$api.productManage + '/' + id).then(function (response) {\n        if (_this7.messageShow(_this7, response)) {\n          _this7.productList(_this7.category);\n        }\n      }).catch(function (error) {\n        _this7.errorMessageShow(_this7, error.response);\n      });\n    }\n  }\n};",{"version":3,"sources":["Product.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"10\">\r\n          <el-col :span=\"3\"><h2>产品开通信息</h2></el-col>\r\n          <el-col :span=\"3\" :offset=\"15\">\r\n            <el-select v-model=\"category\" filterable placeholder=\"根据项目筛选\" size=\"small\" v-on:change=\"filterProduct\"\r\n            style=\"padding-top:17px\">\r\n              <el-option\r\n                v-for=\"item in categorys\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>          \r\n          </el-col>\r\n          <el-col :span=\"1\" style=\"padding-top:17px\">\r\n                <el-button type=\"primary\" icon=\"el-icon-refresh\" size=\"mini\" plain\r\n                            @click.native=\"refreshList\">\r\n                </el-button>\r\n          </el-col>\r\n          <!-- <el-col :span=\"1\" style=padding-top:16px>\r\n            <el-button @click.native=\"addBtn()\" type=\"primary\" icon=\"el-icon-plus\" size=\"small\" circle plain></el-button>\r\n          </el-col> -->\r\n          <el-col :span=\"1\" style=padding-top:16px>\r\n            <el-dropdown>\r\n            <span split-button class=\"el-dropdown-link icon-warp\">\r\n                <i class=\"el-icon-circle-plus-outline\"></i>\r\n            </span>\r\n            <el-dropdown-menu slot=\"dropdown\">\r\n                <el-dropdown-item @click.native=\"addBtn()\">产品</el-dropdown-item>\r\n                <el-dropdown-item @click.native=\"addRegionBtn()\">地域</el-dropdown-item>\r\n            </el-dropdown-menu>\r\n            </el-dropdown>\r\n          </el-col>\r\n        </el-row>\r\n        <el-divider></el-divider>\r\n        <el-table\r\n            :data=\"tableData\"\r\n            stripe\r\n            style=\"width: 100%\"\r\n            @row-dblclick=\"editProduct\">\r\n            <el-table-column\r\n            type=\"index\"\r\n            label=\"No.\"\r\n            width=\"50\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"category\"\r\n            label=\"项目组\"\r\n            width=\"100\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"product\"\r\n            label=\"产品\"\r\n            width=\"120\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"function\"\r\n            label=\"功能\"\r\n            width=\"120\">\r\n            </el-table-column>\r\n            <el-table-column label=\"地域\">\r\n                <template v-for=\"(item,index) in tableHead\">\r\n                    <el-table-column :prop=\"item.region\" :label=\"item.name\" :key=\"index\" width=\"100\"></el-table-column>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n            fixed=\"right\"\r\n            label=\"操作\"\r\n            width=\"50\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" circle plain\r\n                                @click.native=\"sureView(deleteProduct,tableData[scope.$index]['id'],tableData[scope.$index]['function'])\">\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <el-row type=\"flex\" justify=\"end\">\r\n          <el-col :span=\"12\" style=padding-top:24px>\r\n            <el-pagination\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"currentPage\"\r\n              :page-sizes=\"[10, 20, 50, 100]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"total\">\r\n            </el-pagination>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-dialog title=\"产品配置\" :visible.sync=\"dialogFormVisible\">\r\n          <el-form :model=\"productForm\" :rules=\"rules\" ref=\"productForm\" label-width=\"150px\" class=\"demo-productForm\">\r\n              <el-form-item label=\"项目\" prop=\"category_id\" size=\"small\">\r\n                <el-select v-model=\"productForm.category_id\" placeholder=\"请选择项目\">\r\n                  <el-option\r\n                    v-for=\"item in categorys\"\r\n                    :key=\"item.id\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.id\">\r\n                  </el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"产品名称\" prop=\"product\" size=\"small\">\r\n                  <el-input v-model=\"productForm.product\" class=\"commonwidth\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"二级功能\" prop=\"function\" size=\"small\">\r\n                  <el-input v-model=\"productForm.function\" class=\"commonwidth\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"开通地域\" prop=\"region\" size=\"small\">\r\n                  <template>\r\n                      <el-checkbox-group v-model=\"productForm.region\">\r\n                          <template v-for=\"(item,index) in tableHead\">\r\n                              <el-checkbox :value=\"item.region\" :label=\"item.region\" :key=\"index\"></el-checkbox>\r\n                          </template>\r\n                      </el-checkbox-group>\r\n                  </template>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"cancleBtn()\">取 消</el-button>\r\n              <el-button v-if=\"editFlag === true\" type=\"primary\" @click=\"editProductBtn(productForm['id'])\">修 改</el-button>\r\n              <el-button v-else type=\"primary\" @click=\"addProductBtn()\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-dialog title=\"添加地域\" :visible.sync=\"dialogRegionFormVisible\" width=\"30%\">\r\n          <el-form :model=\"regionForm\" :rules=\"regionRules\" ref=\"regionForm\" label-width=\"150px\" class=\"demo-regionForm\">\r\n              <el-form-item label=\"地域名称\" prop=\"name\" size=\"small\">\r\n                  <el-input v-model=\"regionForm.name\" class=\"small-size\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"地域英文字符\" prop=\"region\" size=\"small\">\r\n                  <el-input v-model=\"regionForm.region\" class=\"small-size\"></el-input>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"cancleRegionBtn()\">取 消</el-button>\r\n              <el-button type=\"primary\" @click=\"addRegion()\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    inject: ['reload'],\r\n    props: ['categorys'],\r\n    data() {\r\n      return {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        dialogFormVisible: false,\r\n        dialogRegionFormVisible: false,\r\n        editFlag: false,\r\n        category: '',\r\n        tableData: [],\r\n        tableHead: [],\r\n        productForm: {\r\n            id: '',\r\n            category_id: null,\r\n            product: '',\r\n            function: '',\r\n            region: []\r\n        },\r\n        rules: {\r\n            category_id: [\r\n                { required: true, message: '请选择所属项目', trigger: 'change' },\r\n            ],\r\n            product: [\r\n                { required: true, message: '请输入产品名称', trigger: 'blur' }\r\n            ],\r\n            function: [\r\n                { required: true, message: '请输入产品二级功能', trigger: 'blur' }\r\n            ],\r\n            region: [\r\n                { required: true, message: '请选择开通地域', trigger: 'blur' }\r\n            ]\r\n        },\r\n        regionForm: {\r\n            name: '',\r\n            region: ''\r\n        },\r\n        regionRules: {\r\n            name: [\r\n                { required: true, message: '请输入地域名称', trigger: 'blur' }\r\n            ],\r\n            region: [\r\n                { required: true, message: '请输入输入地域英文表示字符', trigger: 'blur' }\r\n            ]\r\n        },\r\n      }\r\n    },\r\n    mounted() {\r\n      this.regionList();\r\n      this.productList();\r\n    },\r\n    methods: {\r\n        regionList(){\r\n            this.$axios.get(this.$api.regionList,{\r\n                params: {page: 1, size: 100}\r\n            }).then((response) =>{\r\n                this.tableHead = response.data['res']\r\n            })\r\n        },\r\n        productList(category){\r\n            this.$axios.get(this.$api.productList, {\r\n                params: {page: this.currentPage, size: this.pageSize, category_id: category}\r\n            }).then((response) => {\r\n                this.tableData = response.data['res']\r\n                this.total = response.data['total']\r\n            })\r\n        },\r\n        handleSizeChange(val){\r\n            this.pageSize = val;\r\n            this.productList(this.category)\r\n        },\r\n        handleCurrentChange(val){\r\n            this.currentPage = val;\r\n            this.productList(this.category)\r\n        },\r\n        filterProduct(){\r\n            this.productList(this.category)\r\n        },\r\n        refreshList(){\r\n            this.currentPage = 1,\r\n            this.category = null,\r\n            this.productList(this.category)\r\n        },\r\n        editProduct(row){\r\n            this.$axios.get((this.$api.productManage + '/' + row.id)).then((response) => {\r\n                this.productForm = response.data['res']\r\n            })\r\n            this.dialogFormVisible = true\r\n            this.editFlag = true\r\n        },\r\n        editProductBtn(id){\r\n            let data = {\r\n                'category_id': this.productForm.category_id,\r\n                'product': this.productForm.product,\r\n                'function': this.productForm.function,\r\n                'region': this.productForm.region\r\n            }\r\n            this.$axios.put((this.$api.productManage + '/' + id), data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                    this.productList(this.category)\r\n                    this.dialogFormVisible = false\r\n                    this.editFlag = false\r\n                }\r\n                }).catch((error) => {\r\n                    this.errorMessageShow(this, error.response);\r\n            })\r\n        },\r\n        addBtn(){\r\n            this.initForm()\r\n            this.editFlag = false\r\n            this.dialogFormVisible = true\r\n        },\r\n        addRegionBtn(){\r\n            this.initRegionForm()\r\n            this.dialogRegionFormVisible = true\r\n        },\r\n        addProductBtn(){\r\n            let data = {\r\n                'category_id': this.productForm.category_id,\r\n                'product': this.productForm.product,\r\n                'function': this.productForm.function,\r\n                'region': this.productForm.region\r\n            }\r\n            this.$axios.post(this.$api.productManage, data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                    this.productList(this.category)\r\n                    this.dialogFormVisible = false\r\n                }\r\n                }).catch((error) => {\r\n                    this.errorMessageShow(this, error.response);\r\n            })\r\n        },\r\n        addRegion(){\r\n            let data = {\r\n                'name': this.regionForm.name,\r\n                'region': this.regionForm.region\r\n            }\r\n            this.$axios.post(this.$api.regionManage, data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                    this.dialogFormVisible = false\r\n                    this.reload()\r\n                }\r\n                }).catch((error) => {\r\n                    this.errorMessageShow(this, error.response);\r\n            })\r\n        },\r\n        initForm(){\r\n            this.productForm.category_id = null,\r\n            this.productForm.product = null,\r\n            this.productForm.function = null,\r\n            this.productForm.region = []\r\n        },\r\n        initRegionForm(){\r\n            this.regionForm.name = '',\r\n            this.regionForm.region = ''\r\n        },\r\n        cancleBtn(){\r\n            this.initForm()\r\n            this.editFlag = false\r\n            this.dialogFormVisible = false\r\n        },\r\n        cancleRegionBtn(){\r\n            this.initRegionForm()\r\n            this.dialogRegionFormVisible = false\r\n        },\r\n        deleteProduct(id){\r\n            this.$axios.delete((this.$api.productManage + '/' + id)).then((response) => {\r\n            if (this.messageShow(this, response)){\r\n                this.productList(this.category);\r\n            }\r\n            }).catch((error) => {\r\n            this.errorMessageShow(this, error.response);\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>"],"sourceRoot":"src/components/environment"}]}