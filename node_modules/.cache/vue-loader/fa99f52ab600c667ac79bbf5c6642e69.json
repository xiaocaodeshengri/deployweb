{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\settings\\Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\settings\\Task.vue","mtime":1583747397547},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      editTaskFlag: false,\n      dialogFormVisible: false,\n      taskForm: {\n        id: '',\n        title: '',\n        task_url: '',\n        email: '',\n        cron: ''\n      },\n      rules: {\n        title: [\n          { required: true, message: '请输入任务名称', trigger: 'blur' },\n          { min: 1, max: 60, message: '长度在 1 到 60 个字符', trigger: 'blur' }\n        ],\n        task_url: [\n          { required: true, message: '请输入任务URL', trigger: 'blur' },\n          { min: 1, max: 128, message: '长度在 1 到 128 个字符', trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: '请输入电子邮件', trigger: 'blur' },\n          { min: 1, max: 254, message: '长度在 1 到 254 个字符', trigger: 'blur' }\n        ],\n        cron: [\n          { required: true, message: '请输入CRON定时任务时间', trigger: 'blur' },\n          { min: 1, max: 30, message: '长度在 1 到 30 个字符', trigger: 'blur' }\n        ]\n      },\n      tableData: []\n    }\n  },\n  mounted() {\n    this.taskList();\n  },\n  methods: {\n    taskList(){\n      this.$axios.get(this.$api.taskList, \n      {\n        params: {page: this.currentPage, size: this.pageSize}\n      }).then((response) => {\n        if (this.messageShow(this, response)){\n          this.tableData = response.data['res']\n          this.total = response.data['total']\n        }\n      })\n    },\n    handleSizeChange(val){\n      this.pageSize = val;\n      this.taskList()\n    },\n    handleCurrentChange(val){\n      this.currentPage = val;\n      this.taskList()\n    },\n    initTaskForm(){\n      this.taskForm.id = null,\n      this.taskForm.title = null,\n      this.taskForm.task_url = null,\n      this.taskForm.email = null,\n      this.taskForm.cron = null\n    },\n    addBtn(){\n      this.initTaskForm()\n      this.editTaskFlag = false\n      this.dialogFormVisible = true\n    },\n    editTask(id){\n      this.editTaskFlag = true\n      this.$axios.get((this.$api.taskManage + '/' + id)).then((response) => {\n        this.taskForm.id = id\n        this.taskForm.title = response.data['res']['title']\n        this.taskForm.task_url = response.data['res']['task_url']\n        this.taskForm.email = response.data['res']['email']\n        this.taskForm.cron = response.data['res']['cron']\n      })\n      this.dialogFormVisible = true\n    },\n    opTask(id, operation){\n      this.$axios.get((this.$api.taskOperation.replace(/OPERATION/g, operation) + '/' + id)).then((response) => {\n        if (this.messageShow(this, response)){\n          this.taskList()\n        }\n      }).catch((error) => {\n        this.errorMessageShow(this, error.response);\n      })\n    },\n    deleteTask(id){\n      this.$axios.delete((this.$api.taskManage + '/' + id)).then((response) => {\n        if (this.messageShow(this, response)){\n          this.taskList();\n        }\n      }).catch((error) => {\n        this.errorMessageShow(this, error.response);\n      })\n    },\n    addTaskBtn(){\n      let data = {\n        \"title\": this.taskForm.title,\n        \"task_url\": this.taskForm.task_url,\n        \"email\": this.taskForm.email,\n        \"cron\": this.taskForm.cron\n      }\n      this.$axios.post(this.$api.taskManage, data).then((response) => {\n        if (this.messageShow(this, response)){\n          this.dialogFormVisible = false;\n          this.taskList();\n        }\n      }).catch((error) => {\n        this.errorMessageShow(this, error.response);\n      })\n    },\n    editTaskBtn(id){\n      let data = {\n        \"title\": this.taskForm.title,\n        \"task_url\": this.taskForm.task_url,\n        \"email\": this.taskForm.email,\n        \"cron\": this.taskForm.cron\n      }\n      this.$axios.put((this.$api.taskManage + '/' + id), data).then((response) => {\n        if (this.messageShow(this, response)){\n          this.dialogFormVisible = false;\n          this.editTaskFlag = false;\n          this.taskList();\n        }\n      }).catch((error) => {\n        this.errorMessageShow(this, error.response);\n      })\n    },\n    cancelBtn(){\n      this.dialogFormVisible = false;\n      this.initTaskForm();\n      this.editTaskFlag = false;\n    }\n  }\n}\n",{"version":3,"sources":["Task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Task.vue","sourceRoot":"src/components/settings","sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"10\">\r\n          <el-col :span=\"3\"><h2>定时任务</h2></el-col>\r\n          <el-col :span=\"3\" :offset=\"18\" style=padding-top:18px>\r\n            <el-button @click.native=\"addBtn()\" type=\"primary\" icon=\"el-icon-plus\" size=\"small\" circle plain></el-button>\r\n          </el-col>\r\n        </el-row>\r\n        <el-divider></el-divider>\r\n        <el-table\r\n            :data=\"tableData\"\r\n            stripe\r\n            style=\"width: 100%\">\r\n            <el-table-column\r\n            type=\"index\"\r\n            label=\"No.\"\r\n            width=\"50\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"title\"\r\n            label=\"标题\"\r\n            width=\"150\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"task_url\"\r\n            label=\"URL\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"email\"\r\n            label=\"Emails\"\r\n            width=\"280\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"cron\"\r\n            label=\"CRON\">\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"360\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" plain\r\n                                @click.native=\"editTask(tableData[scope.$index]['id'])\">Edit\r\n                    </el-button>\r\n                    <el-button type=\"info\" size=\"mini\" plain\r\n                                @click.native=\"opTask(tableData[scope.$index]['id'], 'run')\">Run\r\n                    </el-button>\r\n                    <el-button type=\"success\" size=\"mini\" v-if=\"tableData[scope.$index]['status'] === 0\" plain\r\n                                @click.native=\"opTask(tableData[scope.$index]['id'], 'start')\">Start\r\n                    </el-button>\r\n                    <el-button type=\"danger\" size=\"mini\" v-else plain\r\n                                @click.native=\"opTask(tableData[scope.$index]['id'], 'stop')\">Stop\r\n                    </el-button>\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" plain\r\n                                @click.native=\"sureView(deleteTask,tableData[scope.$index]['id'],tableData[scope.$index]['title'])\">\r\n                        Delete\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <el-row type=\"flex\" justify=\"end\">\r\n          <el-col :span=\"12\" style=padding-top:24px>\r\n            <el-pagination\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"currentPage\"\r\n              :page-sizes=\"[10, 20, 50, 100]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"total\">\r\n            </el-pagination>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-dialog title=\"定时任务配置\" :visible.sync=\"dialogFormVisible\">\r\n          <el-form :model=\"taskForm\" :rules=\"rules\" ref=\"taskForm\" label-width=\"150px\" class=\"demo-taskForm\">\r\n              <el-form-item label=\"定时任务名称\" prop=\"title\" size=\"small\">\r\n                  <el-input v-model=\"taskForm.title\" class=\"commonwidth\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"任务URL\" prop=\"task_url\" size=\"small\">\r\n                  <el-input v-model=\"taskForm.task_url\" class=\"commonwidth\" placeholder=\"/api/taskx/\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"电子邮件\" prop=\"email\" size=\"small\">\r\n                  <el-input type=\"textarea\" v-model=\"taskForm.email\" class=\"commonwidth\" placeholder=\"邮箱用`,`隔开\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"时间设定\" prop=\"cron\" size=\"small\">\r\n                  <el-input v-model=\"taskForm.cron\" class=\"commonwidth\" placeholder=\"分 时 日 月 星期\"></el-input>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click.native=\"cancelBtn()\">取 消</el-button>\r\n              <el-button v-if=\"editTaskFlag === true\" type=\"primary\" @click=\"editTaskBtn(taskForm['id'])\">修 改</el-button>\r\n              <el-button v-else type=\"primary\" @click=\"addTaskBtn()\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        editTaskFlag: false,\r\n        dialogFormVisible: false,\r\n        taskForm: {\r\n          id: '',\r\n          title: '',\r\n          task_url: '',\r\n          email: '',\r\n          cron: ''\r\n        },\r\n        rules: {\r\n          title: [\r\n            { required: true, message: '请输入任务名称', trigger: 'blur' },\r\n            { min: 1, max: 60, message: '长度在 1 到 60 个字符', trigger: 'blur' }\r\n          ],\r\n          task_url: [\r\n            { required: true, message: '请输入任务URL', trigger: 'blur' },\r\n            { min: 1, max: 128, message: '长度在 1 到 128 个字符', trigger: 'blur' }\r\n          ],\r\n          email: [\r\n            { required: true, message: '请输入电子邮件', trigger: 'blur' },\r\n            { min: 1, max: 254, message: '长度在 1 到 254 个字符', trigger: 'blur' }\r\n          ],\r\n          cron: [\r\n            { required: true, message: '请输入CRON定时任务时间', trigger: 'blur' },\r\n            { min: 1, max: 30, message: '长度在 1 到 30 个字符', trigger: 'blur' }\r\n          ]\r\n        },\r\n        tableData: []\r\n      }\r\n    },\r\n    mounted() {\r\n      this.taskList();\r\n    },\r\n    methods: {\r\n      taskList(){\r\n        this.$axios.get(this.$api.taskList, \r\n        {\r\n          params: {page: this.currentPage, size: this.pageSize}\r\n        }).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.tableData = response.data['res']\r\n            this.total = response.data['total']\r\n          }\r\n        })\r\n      },\r\n      handleSizeChange(val){\r\n        this.pageSize = val;\r\n        this.taskList()\r\n      },\r\n      handleCurrentChange(val){\r\n        this.currentPage = val;\r\n        this.taskList()\r\n      },\r\n      initTaskForm(){\r\n        this.taskForm.id = null,\r\n        this.taskForm.title = null,\r\n        this.taskForm.task_url = null,\r\n        this.taskForm.email = null,\r\n        this.taskForm.cron = null\r\n      },\r\n      addBtn(){\r\n        this.initTaskForm()\r\n        this.editTaskFlag = false\r\n        this.dialogFormVisible = true\r\n      },\r\n      editTask(id){\r\n        this.editTaskFlag = true\r\n        this.$axios.get((this.$api.taskManage + '/' + id)).then((response) => {\r\n          this.taskForm.id = id\r\n          this.taskForm.title = response.data['res']['title']\r\n          this.taskForm.task_url = response.data['res']['task_url']\r\n          this.taskForm.email = response.data['res']['email']\r\n          this.taskForm.cron = response.data['res']['cron']\r\n        })\r\n        this.dialogFormVisible = true\r\n      },\r\n      opTask(id, operation){\r\n        this.$axios.get((this.$api.taskOperation.replace(/OPERATION/g, operation) + '/' + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.taskList()\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      deleteTask(id){\r\n        this.$axios.delete((this.$api.taskManage + '/' + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.taskList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      addTaskBtn(){\r\n        let data = {\r\n          \"title\": this.taskForm.title,\r\n          \"task_url\": this.taskForm.task_url,\r\n          \"email\": this.taskForm.email,\r\n          \"cron\": this.taskForm.cron\r\n        }\r\n        this.$axios.post(this.$api.taskManage, data).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.dialogFormVisible = false;\r\n            this.taskList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      editTaskBtn(id){\r\n        let data = {\r\n          \"title\": this.taskForm.title,\r\n          \"task_url\": this.taskForm.task_url,\r\n          \"email\": this.taskForm.email,\r\n          \"cron\": this.taskForm.cron\r\n        }\r\n        this.$axios.put((this.$api.taskManage + '/' + id), data).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.dialogFormVisible = false;\r\n            this.editTaskFlag = false;\r\n            this.taskList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      cancelBtn(){\r\n        this.dialogFormVisible = false;\r\n        this.initTaskForm();\r\n        this.editTaskFlag = false;\r\n      }\r\n    }\r\n  }\r\n</script>"]}]}