{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\environment\\Rack.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\environment\\Rack.vue","mtime":1583747397525},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: ['categorys'],\n  data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      editRackFlag: false,\n      dialogFormVisible: false,\n      dialog: false,\n      tableDeviceData: [],\n      selectedRack: '',\n      rackForm: {\n        id: '',\n        name: '',\n        category: '',\n        location: '',\n        remark: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入机柜名称', trigger: 'blur' },\n          { min: 1, max: 60, message: '长度在 1 到 60 个字符', trigger: 'blur' }\n        ],\n        category: [\n          { required: true, message: '请输入所属项目组', trigger: 'blur' },\n          { min: 1, max: 15, message: '长度在 1 到 15 个字符', trigger: 'blur' }\n        ],\n        location: [\n          { required: true, message: '请输入机柜位置', trigger: 'blur' },\n          { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\n        ],\n        remark: [\n          { required: false, message: '请输入备注', trigger: 'blur' }\n        ]\n      },\n      tableRackData: []\n    }\n  },\n  mounted() {\n    this.rackList();\n  },\n  methods: {\n    getRole(num){\n      this.role = localStorage.getItem(\"role\")\n      if(this.role >= num){\n        return true\n      }else{\n        return false\n      }\n    },\n    rackList(){\n      this.$axios.get(this.$api.rackList, \n      {\n        params: {page: this.currentPage, size: this.pageSize}\n      }).then((response) => {\n          this.tableRackData = response.data['res']\n          this.total = response.data['total']\n      })\n    },\n    handleSizeChange(val){\n      this.pageSize = val;\n      this.rackList()\n    },\n    handleCurrentChange(val){\n      this.currentPage = val;\n      this.rackList()\n    },\n    initRackForm(){\n      this.rackForm.name = null,\n      this.rackForm.category = null,\n      this.rackForm.location = null,\n      this.rackForm.remark = null\n    },\n    addBtn(){\n      this.initRackForm()\n      this.editRackFlag = false\n      this.dialogFormVisible = true\n    },\n    editRack(id){\n      this.editRackFlag = true\n      this.$axios.get((this.$api.rackManage + '/' + id)).then((response) => {\n        this.rackForm.id = id\n        this.rackForm.name = response.data['res']['name']\n        this.rackForm.category = response.data['res']['category']\n        this.rackForm.location = response.data['res']['location']\n        this.rackForm.remark = response.data['res']['remark']\n      })\n      this.dialogFormVisible = true\n    },\n    deleteRack(id){\n      this.$axios.delete((this.$api.rackManage + '/' + id)).then((response) => {\n        if (this.messageShow(this, response)){\n          this.rackList();\n        }\n      }).catch((error) => {\n        this.errorMessageShow(this, error.response);\n      })\n    },\n    addRackBtn(){\n      let data = {\n        \"name\": this.rackForm.name,\n        \"category\": this.rackForm.category,\n        \"location\": this.rackForm.location,\n        \"remark\": this.rackForm.remark\n      }\n      this.$axios.post(this.$api.rackManage, data).then((response) => {\n        if (this.messageShow(this, response)){\n          this.dialogFormVisible = false;\n          this.rackList();\n        }\n      }).catch((error) => {\n        this.errorMessageShow(this, error.response);\n      })\n    },\n    editRackBtn(id){\n      let data = {\n        \"name\": this.rackForm.name,\n        \"category\": this.rackForm.category,\n        \"location\": this.rackForm.location,\n        \"remark\": this.rackForm.remark\n      }\n      this.$axios.put((this.$api.rackManage + '/' + id), data).then((response) => {\n        if (this.messageShow(this, response)){\n          this.dialogFormVisible = false;\n          this.editRackFlag = false;\n          this.rackList();\n        }\n      }).catch((error) => {\n        this.errorMessageShow(this, error.response);\n      })\n    },\n    cancelBtn(){\n      this.dialogFormVisible = false;\n      this.initRackForm();\n      this.editRackFlag = false;\n    },\n    querySearch(queryString, cb) {\n      var categorys = this.categorys;\n      var results = queryString ? categorys.filter(this.createFilter(queryString)) : categorys;\n      cb(results);\n    },\n    createFilter(queryString) {\n      return (category) => {\n        return (category.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n      };\n    },\n    rackDeviceInfo(row, column, event){\n      this.$axios.get(this.$api.deviceList, \n      {\n        params: {page: 1, size: 30, rack_id: row.id}\n      }).then((response) => {\n          this.tableDeviceData = response.data['res']\n      })\n      this.selectedRack = row.name\n      this.dialog = true\n    }\n  }\n}\n",{"version":3,"sources":["Rack.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Rack.vue","sourceRoot":"src/components/environment","sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"10\">\r\n          <el-col :span=\"3\"><h2>机柜信息</h2></el-col>\r\n          <el-col :span=\"3\" :offset=\"18\" style=padding-top:18px>\r\n            <el-button @click.native=\"addBtn()\" type=\"primary\" icon=\"el-icon-plus\" size=\"small\" circle plain></el-button>\r\n          </el-col>\r\n        </el-row>\r\n        <el-divider></el-divider>\r\n        <el-table\r\n            :data=\"tableRackData\"\r\n            stripe\r\n            style=\"width: 100%\"\r\n            @row-dblclick=\"rackDeviceInfo\">\r\n            <el-table-column\r\n            type=\"index\"\r\n            label=\"No.\"\r\n            width=\"50\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"name\"\r\n            label=\"名称\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"category\"\r\n            label=\"项目组\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"location\"\r\n            label=\"机柜位置\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"remark\"\r\n            label=\"备注\">\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"200\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" circle plain\r\n                                @click.native=\"editRack(tableRackData[scope.$index]['id'])\">\r\n                    </el-button>\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" circle plain  v-if=\"getRole(9)\"\r\n                                @click.native=\"sureView(deleteRack,tableRackData[scope.$index]['id'],tableRackData[scope.$index]['name'])\">\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <el-row type=\"flex\" justify=\"end\">\r\n          <el-col :span=\"12\" style=padding-top:24px>\r\n            <el-pagination\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"currentPage\"\r\n              :page-sizes=\"[10, 20, 50, 100]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"total\">\r\n            </el-pagination>\r\n          </el-col>\r\n        </el-row>\r\n        \r\n        <el-dialog title=\"机柜配置\" :visible.sync=\"dialogFormVisible\">\r\n          <el-form :model=\"rackForm\" :rules=\"rules\" ref=\"rackForm\" label-width=\"150px\" class=\"demo-rackForm\">\r\n              <el-form-item label=\"名称\" prop=\"name\" size=\"small\">\r\n                  <el-input v-model=\"rackForm.name\" class=\"commonwidth\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"项目组\" prop=\"category\" size=\"small\">\r\n                  <!-- <el-input v-model=\"rackForm.category\" class=\"commonwidth\"></el-input> -->\r\n                    <el-autocomplete\r\n                    class=\"inline-input\"\r\n                    v-model=\"rackForm.category\"\r\n                    :fetch-suggestions=\"querySearch\"\r\n                    placeholder=\"请输入所属项目组\"\r\n                    :trigger-on-focus=\"true\"\r\n                    >\r\n                    </el-autocomplete>\r\n              </el-form-item>\r\n              <el-form-item label=\"机柜位置\" prop=\"location\" size=\"small\">\r\n                  <el-input v-model=\"rackForm.location\" class=\"commonwidth\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"备注\" prop=\"remark\" size=\"small\">\r\n                  <el-input type=\"textarea\" v-model=\"rackForm.remark\" class=\"commonwidth\"></el-input>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"cancelBtn()\">取 消</el-button>\r\n              <el-button v-if=\"editRackFlag === true\" type=\"primary\" @click=\"editRackBtn(rackForm['id'])\">确 定</el-button>\r\n              <el-button v-else type=\"primary\" @click=\"addRackBtn()\">新 建</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-drawer\r\n        :title=\"selectedRack\"\r\n        :visible.sync=\"dialog\"\r\n        direction=\"rtl\"\r\n        custom-class=\"demo-drawer\"\r\n        ref=\"drawer\"\r\n        size=\"50%\">\r\n            <el-table :data=\"tableDeviceData\" stripe style=\"width: 100%\">\r\n                <el-table-column\r\n                type=\"index\"\r\n                label=\"No.\"\r\n                width=\"50\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                prop=\"name\"\r\n                label=\"名称\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                prop=\"category\"\r\n                label=\"项目组\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                prop=\"u_location\"\r\n                label=\"位置\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                prop=\"mgt_ip\"\r\n                label=\"管理IP\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                prop=\"device_type\"\r\n                label=\"设备类型\">\r\n                </el-table-column>\r\n            </el-table>\r\n        </el-drawer>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    props: ['categorys'],\r\n    data() {\r\n      return {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        editRackFlag: false,\r\n        dialogFormVisible: false,\r\n        dialog: false,\r\n        tableDeviceData: [],\r\n        selectedRack: '',\r\n        rackForm: {\r\n          id: '',\r\n          name: '',\r\n          category: '',\r\n          location: '',\r\n          remark: ''\r\n        },\r\n        rules: {\r\n          name: [\r\n            { required: true, message: '请输入机柜名称', trigger: 'blur' },\r\n            { min: 1, max: 60, message: '长度在 1 到 60 个字符', trigger: 'blur' }\r\n          ],\r\n          category: [\r\n            { required: true, message: '请输入所属项目组', trigger: 'blur' },\r\n            { min: 1, max: 15, message: '长度在 1 到 15 个字符', trigger: 'blur' }\r\n          ],\r\n          location: [\r\n            { required: true, message: '请输入机柜位置', trigger: 'blur' },\r\n            { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\r\n          ],\r\n          remark: [\r\n            { required: false, message: '请输入备注', trigger: 'blur' }\r\n          ]\r\n        },\r\n        tableRackData: []\r\n      }\r\n    },\r\n    mounted() {\r\n      this.rackList();\r\n    },\r\n    methods: {\r\n      getRole(num){\r\n        this.role = localStorage.getItem(\"role\")\r\n        if(this.role >= num){\r\n          return true\r\n        }else{\r\n          return false\r\n        }\r\n      },\r\n      rackList(){\r\n        this.$axios.get(this.$api.rackList, \r\n        {\r\n          params: {page: this.currentPage, size: this.pageSize}\r\n        }).then((response) => {\r\n            this.tableRackData = response.data['res']\r\n            this.total = response.data['total']\r\n        })\r\n      },\r\n      handleSizeChange(val){\r\n        this.pageSize = val;\r\n        this.rackList()\r\n      },\r\n      handleCurrentChange(val){\r\n        this.currentPage = val;\r\n        this.rackList()\r\n      },\r\n      initRackForm(){\r\n        this.rackForm.name = null,\r\n        this.rackForm.category = null,\r\n        this.rackForm.location = null,\r\n        this.rackForm.remark = null\r\n      },\r\n      addBtn(){\r\n        this.initRackForm()\r\n        this.editRackFlag = false\r\n        this.dialogFormVisible = true\r\n      },\r\n      editRack(id){\r\n        this.editRackFlag = true\r\n        this.$axios.get((this.$api.rackManage + '/' + id)).then((response) => {\r\n          this.rackForm.id = id\r\n          this.rackForm.name = response.data['res']['name']\r\n          this.rackForm.category = response.data['res']['category']\r\n          this.rackForm.location = response.data['res']['location']\r\n          this.rackForm.remark = response.data['res']['remark']\r\n        })\r\n        this.dialogFormVisible = true\r\n      },\r\n      deleteRack(id){\r\n        this.$axios.delete((this.$api.rackManage + '/' + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.rackList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      addRackBtn(){\r\n        let data = {\r\n          \"name\": this.rackForm.name,\r\n          \"category\": this.rackForm.category,\r\n          \"location\": this.rackForm.location,\r\n          \"remark\": this.rackForm.remark\r\n        }\r\n        this.$axios.post(this.$api.rackManage, data).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.dialogFormVisible = false;\r\n            this.rackList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      editRackBtn(id){\r\n        let data = {\r\n          \"name\": this.rackForm.name,\r\n          \"category\": this.rackForm.category,\r\n          \"location\": this.rackForm.location,\r\n          \"remark\": this.rackForm.remark\r\n        }\r\n        this.$axios.put((this.$api.rackManage + '/' + id), data).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.dialogFormVisible = false;\r\n            this.editRackFlag = false;\r\n            this.rackList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      cancelBtn(){\r\n        this.dialogFormVisible = false;\r\n        this.initRackForm();\r\n        this.editRackFlag = false;\r\n      },\r\n      querySearch(queryString, cb) {\r\n        var categorys = this.categorys;\r\n        var results = queryString ? categorys.filter(this.createFilter(queryString)) : categorys;\r\n        cb(results);\r\n      },\r\n      createFilter(queryString) {\r\n        return (category) => {\r\n          return (category.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\r\n        };\r\n      },\r\n      rackDeviceInfo(row, column, event){\r\n        this.$axios.get(this.$api.deviceList, \r\n        {\r\n          params: {page: 1, size: 30, rack_id: row.id}\r\n        }).then((response) => {\r\n            this.tableDeviceData = response.data['res']\r\n        })\r\n        this.selectedRack = row.name\r\n        this.dialog = true\r\n      }\r\n    }\r\n  }\r\n</script>"]}]}