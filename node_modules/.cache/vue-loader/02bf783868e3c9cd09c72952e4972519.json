{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\deploy\\DeployDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\deploy\\DeployDetail.vue","mtime":1583747397518},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport '@ckeditor/ckeditor5-build-decoupled-document/build/translations/zh-cn'\r\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document'\r\n\r\nexport default {\r\n    inject: ['reload'],\r\n    data(){\r\n        return{\r\n            editor: DecoupledEditor,\r\n            editorConfig: {\r\n                language: 'zh-cn',\r\n                fontSize: {\r\n                    options: [8, 10, 'default', 14, 16, 18, 20, 22, 24, 26, 28, 32, 48]\r\n                },\r\n                fontFamily:{\r\n                    options: ['宋体', '仿宋', '微软雅黑', '黑体', '仿宋_GB2312', '楷体', '隶书', '幼圆']\r\n                }\r\n            },\r\n            dialog: false,\r\n            loading: false,\r\n            activeNames: ['1'],\r\n            deploy: {\r\n                title: \"\",\r\n                body: \"\",\r\n                timestamp: \"\",\r\n                category: \"\",\r\n                post_author: \"\",\r\n                deploy_uco: \"\",\r\n                deploy_uca: \"\",\r\n                deploy_ucs: \"\",\r\n                deploy_links: \"\",\r\n                environment: \"\",\r\n                deploy_sql: \"\",\r\n                deploy_describe: \"\",\r\n                version: \"\",\r\n                api_task_id: \"\",\r\n                api_test_report: \"\"\r\n            },\r\n            fileList: [],\r\n            tableData: [],\r\n            commentForm: {\r\n                author: '',\r\n                site: '',\r\n                body: '',\r\n                bug_id: '',\r\n                environment_id: null\r\n            },\r\n            rules: {\r\n                author: [\r\n                    { required: true, message: '请输入责任人', trigger: 'blur' },\r\n                ],\r\n                site: [\r\n                    { required: true, message: '请输入下载链接', trigger: 'blur' }\r\n                ],\r\n                body: [\r\n                    { required: true, message: '请输入再次部署原因', trigger: 'blur' },\r\n                ],\r\n                bug_id: [\r\n                    { required: false, message: '请填写对应禅道BUG ID', trigger: 'blur' }\r\n                ],\r\n                environment_id: [\r\n                    { required: true, message: '请选择部署环境', trigger: 'change' }\r\n                ]\r\n            },\r\n            environments: [{\r\n                value: 2,\r\n                label: 'yfb-uco'\r\n                }, {\r\n                value: 3,\r\n                label: 'UCA-LF'\r\n                }, {\r\n                value: 5,\r\n                label: 'UCA-TJ'\r\n                }, {\r\n                value: 6,\r\n                label: 'UCA-BJ'\r\n                }, {\r\n                value: 7,\r\n                label: 'CVM-TJ'\r\n                }, {\r\n                value: 8,\r\n                label: 'CVM-BJ'\r\n                }, {\r\n                value: 10,\r\n                label: 'CVM-LF'\r\n                }, {\r\n                value: 11,\r\n                label: 'CVK-TJ'\r\n                }, {\r\n                value: 13,\r\n                label: 'CVK-BJ'\r\n                }, {\r\n                value: 15,\r\n                label: 'CVK-LF'\r\n                }, {\r\n                value: 17,\r\n                label: 'VCFC-TJ'\r\n                }, {\r\n                value: 18,\r\n                label: 'VCFC-BJ'\r\n                }, {\r\n                value: 19,\r\n                label: 'VCFC-LF'\r\n            }],\r\n        }\r\n    },\r\n    mounted() {\r\n        this.initDeployDetial();\r\n        this.getComments();\r\n    },\r\n    methods: {\r\n        editorOnReady(editor){\r\n            editor.ui.getEditableElement().parentElement.insertBefore(\r\n                editor.ui.view.toolbar.element,\r\n                editor.ui.getEditableElement()\r\n            );\r\n            editor.plugins.get('FileRepository').createUploadAdapter = function(loader){\r\n                let val = editor.getData();\r\n                return{\r\n                    upload: async function(){\r\n                        return await loader.file.then(f => {\r\n                            const F = new FileReader();\r\n                            F.readAsArrayBuffer(f);\r\n                            return new Promise(resolve => {\r\n                                F.onload = function(){\r\n                                    resolve(F.result)\r\n                                };\r\n                            })\r\n                        }).then(bufAsArray => {\r\n                            return{\r\n                                default: ''\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n        }, \r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        },\r\n        initDeployDetial(){\r\n            let id = this.$route.params.id\r\n            this.$axios.get((this.$api.deployManage + '/' + id)).then((response) => {\r\n                this.deploy.title = response.data['res']['title']\r\n                this.deploy.category = response.data['res']['category']\r\n                this.deploy.version = response.data['res']['version']\r\n                this.deploy.post_author = response.data['res']['post_author']\r\n                this.deploy.deploy_uco = response.data['res']['deploy_uco']\r\n                this.deploy.deploy_uca = response.data['res']['deploy_uca']\r\n                this.deploy.deploy_ucs = response.data['res']['deploy_ucs']\r\n                this.deploy.deploy_sql = response.data['res']['deploy_sql']\r\n                this.deploy.deploy_links = response.data['res']['deploy_links']\r\n                this.deploy.environment = response.data['res']['environment_name']\r\n                this.deploy.deploy_describe = response.data['res']['deploy_describe']\r\n                this.deploy.body = response.data['res']['body']\r\n                this.deploy.api_task_id = response.data['res']['api_task_id']\r\n                this.deploy.api_test_report = response.data['res']['api_test_report']\r\n                this.deploy.timestamp = response.data['res']['timestamp']\r\n                this.fileList = response.data['fileList']\r\n            })\r\n        },\r\n        goBack(){\r\n            this.$router.go(-1);\r\n        },\r\n        beginDeploy(){\r\n            let post_id = this.$route.params.id\r\n            this.$axios.get((this.$api.postDeploy + post_id)).then((response) => {\r\n                this.$notify({\r\n                    title: '开始部署',\r\n                    message: '正在进行部署，部署完成后会有邮件通知',\r\n                    type: 'success',\r\n                })\r\n                this.messageShow(this, response);\r\n            }).catch((error) =>{\r\n                this.errorMessageShow(this, error.response);\r\n            })\r\n        },\r\n        getComments(){\r\n            let deploy_id = this.$route.params.id\r\n            this.$axios.get(this.$api.commentList.replace(/DEPLOY_ID/g, deploy_id),{\r\n                params: {page: 1, size: 100}\r\n            }).then(response => {\r\n                this.tableData = response.data['res']\r\n            })\r\n        },\r\n        addComment(){\r\n            this.dialog = true\r\n            this.commentForm.author = localStorage.getItem(\"name\")\r\n        },\r\n        commentDeploy(id){\r\n            this.$axios.get((this.$api.commentDeploy + id)).then((response) => {\r\n                this.$notify({\r\n                    title: '开始部署',\r\n                    message: '正在进行部署，部署完成后会有邮件通知',\r\n                    type: 'success',\r\n                })\r\n                this.messageShow(this, response);\r\n            }).catch((error) =>{\r\n                this.errorMessageShow(this, error.response);\r\n            })\r\n        },\r\n        deleteComment(id){\r\n            this.$axios.delete((this.$api.commentDelete + id)).then(response => {\r\n                if (this.messageShow(this, response)){\r\n                    this.reload();\r\n                }\r\n                }).catch((error) => {\r\n                this.errorMessageShow(this, error.response);\r\n                })\r\n        },\r\n        addCommentBtn(){\r\n            this.$confirm('确定要提交再次部署申请吗？')\r\n                .then(() => {\r\n                this.loading = true;\r\n                let deploy_id = this.$route.params.id\r\n                let data = {\r\n                    \"author\": this.commentForm.author,\r\n                    \"site\": this.commentForm.site,\r\n                    \"body\": this.commentForm.body,\r\n                    \"bug_id\": this.commentForm.bug_id,\r\n                    \"environment_id\": this.commentForm.environment_id\r\n                }\r\n                this.$axios.post(this.$api.commentAdd.replace(/DEPLOY_ID/g, deploy_id), data).then(response => {\r\n                    if (this.messageShow(this, response)){\r\n                        this.loading = false;\r\n                        this.dialog = false;\r\n                        this.reload();\r\n                    }\r\n                }).catch((error) => {\r\n                    this.loading = false;\r\n                    this.dialog = false;\r\n                    this.errorMessageShow(this, error.response);\r\n                })\r\n            })\r\n        },\r\n        downloadUrl(fileName){\r\n            let url = this.$api.fileDownload + 'report/' + fileName\r\n            return url \r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["DeployDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+IA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DeployDetail.vue","sourceRoot":"src/components/deploy","sourcesContent":["<template>\r\n    <div>\r\n        <el-page-header @back=\"goBack\" :content=\"deploy.title\"></el-page-header>\r\n        <el-divider></el-divider>\r\n        <el-collapse v-model=\"activeNames\">\r\n            <el-collapse-item title=\"基本信息\" name=\"1\">\r\n                <ul>\r\n                    <li>项目:</li>{{ deploy.category }}\r\n                    <li>日期:</li> {{ deploy.timestamp }}\r\n                    <li>责任人:</li> {{ deploy.post_author }}\r\n                    <li>发布版本:</li>{{ deploy.version }}\r\n                    <li>转测范围:</li>{{ deploy.deploy_describe }}\r\n                </ul>\r\n            </el-collapse-item>\r\n            <el-collapse-item title=\"下载链接\" name=\"2\">\r\n                <ul>\r\n                    <li>部署环境:</li>{{ deploy.environment }}\r\n                    <li>部署包下载链接:</li>{{ deploy.deploy_links }}\r\n                    <li v-if=\"deploy.deploy_uco != null\">UCO部署包下载链接:</li>{{ deploy.deploy_uco }}\r\n                    <li v-if=\"deploy.deploy_uca != null\">UCA部署包下载链接:</li>{{ deploy.deploy_uca }}\r\n                    <li v-if=\"deploy.deploy_ucs != null\">UCS部署包获取路径:</li>{{ deploy.deploy_ucs }}\r\n                    <li v-if=\"deploy.deploy_sql != ''\">SQL脚本:</li>{{ deploy.deploy_sql }}\r\n                </ul>\r\n            </el-collapse-item>\r\n            <el-collapse-item title=\"测试报告\" name=\"3\">\r\n                <ul>\r\n                    <span v-html=\"deploy.body\"></span>\r\n                </ul>\r\n            </el-collapse-item>\r\n            <el-collapse-item title=\"测试报告文档\" name=\"4\">\r\n                <li v-for=\"(item, index) in fileList\" :key=\"index\">\r\n                    <a :href=\"downloadUrl(item.name)\">{{ item.name }}</a>\r\n                </li>\r\n            </el-collapse-item>\r\n        </el-collapse>\r\n\r\n        <el-divider content-position=\"right\">\r\n        <el-button type=\"warning\" size=\"mini\" round plain\r\n                    @click.native=\"beginDeploy()\">开始部署\r\n        </el-button>\r\n        <el-button type=\"primary\" size=\"mini\" round plain\r\n                    @click.native=\"addComment()\">再次部署\r\n        </el-button>\r\n        </el-divider>\r\n\r\n        <el-divider content-position=\"left\">再次部署记录</el-divider>\r\n\r\n        <el-table\r\n            :data=\"tableData\"\r\n            style=\"width: 100%\">\r\n            <el-table-column type=\"expand\">\r\n            <template slot-scope=\"props\">\r\n                <el-form label-position=\"left\" inline class=\"demo-table-expand\">\r\n                    <el-form-item label=\"部署环境\">\r\n                        <span>{{ props.row.environment_name }}</span>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"下载链接\">\r\n                        <span>{{ props.row.site }}</span>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"描述\">\r\n                        <ul>\r\n                            <span v-html=\"props.row.body\"></span>\r\n                        </ul>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n            label=\"责任人\"\r\n            prop=\"author\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            label=\"禅道BUG ID\"\r\n            prop=\"bug_id\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            label=\"时间\"\r\n            prop=\"timestamp\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            label=\"操作\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"primary\" size=\"mini\" round plain\r\n                                @click.native=\"commentDeploy(tableData[scope.$index]['id'])\"\r\n                                >Deploy\r\n                    </el-button>\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" circle plain\r\n                                @click.native=\"sureView(deleteComment,tableData[scope.$index]['id'],'')\">\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <!-- <el-backtop target=\".page-component__scroll .el-scrollbar__wrap\"></el-backtop> -->\r\n\r\n        <el-drawer\r\n        title=\"再次部署申请\"\r\n        :visible.sync=\"dialog\"\r\n        direction=\"rtl\"\r\n        custom-class=\"demo-drawer\"\r\n        ref=\"drawer\"\r\n        size=\"50%\">\r\n            <div class=\"demo-drawer__content\">\r\n                <el-form :model=\"commentForm\" :rules=\"rules\" ref=\"commentForm\" label-width=\"100px\">\r\n                    <el-form-item label=\"责任人\" prop=\"author\" size=\"small\">\r\n                        <el-input v-model=\"commentForm.author\" autocomplete=\"off\" :disabled=\"true\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"禅道BUG ID\" prop=\"bug_id\" size=\"small\">\r\n                        <el-input v-model=\"commentForm.bug_id\" autocomplete=\"off\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"部署环境\" prop=\"environment_id\" size=\"small\">\r\n                        <el-select v-model=\"commentForm.environment_id\" placeholder=\"请选择部署环境\">\r\n                            <el-option\r\n                            v-for=\"item in environments\"\r\n                            :key=\"item.value\"\r\n                            :label=\"item.label\"\r\n                            :value=\"item.value\">\r\n                            </el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"部署包路径\" prop=\"site\" size=\"small\">\r\n                        <el-input type=\"textarea\" v-model=\"commentForm.site\" autocomplete=\"off\"\r\n                        placeholder=\"http://***.tar.gz;http://***.tar.gz\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"事务记录\" prop=\"body\" size=\"small\">\r\n                        <div>\r\n                        <ckeditor :editor=\"editor\" @ready=\"editorOnReady\" v-model=\"commentForm.body\" :config=\"editorConfig\">\r\n                        </ckeditor>\r\n                        <el-divider></el-divider>\r\n                        </div>\r\n                    </el-form-item>\r\n                </el-form>\r\n                <div class=\"demo-drawer__footer\">\r\n                <el-button type=\"primary\" @click.native=\"addCommentBtn()\" :loading=\"loading\">{{ loading ? '提交中 ...' : '确 定' }}</el-button>\r\n                <el-button @click=\"dialog = false\">取 消</el-button>\r\n                <el-button @click=\"resetForm('commentForm')\">重置</el-button>\r\n                </div>\r\n            </div>\r\n        </el-drawer>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport '@ckeditor/ckeditor5-build-decoupled-document/build/translations/zh-cn'\r\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document'\r\n\r\nexport default {\r\n    inject: ['reload'],\r\n    data(){\r\n        return{\r\n            editor: DecoupledEditor,\r\n            editorConfig: {\r\n                language: 'zh-cn',\r\n                fontSize: {\r\n                    options: [8, 10, 'default', 14, 16, 18, 20, 22, 24, 26, 28, 32, 48]\r\n                },\r\n                fontFamily:{\r\n                    options: ['宋体', '仿宋', '微软雅黑', '黑体', '仿宋_GB2312', '楷体', '隶书', '幼圆']\r\n                }\r\n            },\r\n            dialog: false,\r\n            loading: false,\r\n            activeNames: ['1'],\r\n            deploy: {\r\n                title: \"\",\r\n                body: \"\",\r\n                timestamp: \"\",\r\n                category: \"\",\r\n                post_author: \"\",\r\n                deploy_uco: \"\",\r\n                deploy_uca: \"\",\r\n                deploy_ucs: \"\",\r\n                deploy_links: \"\",\r\n                environment: \"\",\r\n                deploy_sql: \"\",\r\n                deploy_describe: \"\",\r\n                version: \"\",\r\n                api_task_id: \"\",\r\n                api_test_report: \"\"\r\n            },\r\n            fileList: [],\r\n            tableData: [],\r\n            commentForm: {\r\n                author: '',\r\n                site: '',\r\n                body: '',\r\n                bug_id: '',\r\n                environment_id: null\r\n            },\r\n            rules: {\r\n                author: [\r\n                    { required: true, message: '请输入责任人', trigger: 'blur' },\r\n                ],\r\n                site: [\r\n                    { required: true, message: '请输入下载链接', trigger: 'blur' }\r\n                ],\r\n                body: [\r\n                    { required: true, message: '请输入再次部署原因', trigger: 'blur' },\r\n                ],\r\n                bug_id: [\r\n                    { required: false, message: '请填写对应禅道BUG ID', trigger: 'blur' }\r\n                ],\r\n                environment_id: [\r\n                    { required: true, message: '请选择部署环境', trigger: 'change' }\r\n                ]\r\n            },\r\n            environments: [{\r\n                value: 2,\r\n                label: 'yfb-uco'\r\n                }, {\r\n                value: 3,\r\n                label: 'UCA-LF'\r\n                }, {\r\n                value: 5,\r\n                label: 'UCA-TJ'\r\n                }, {\r\n                value: 6,\r\n                label: 'UCA-BJ'\r\n                }, {\r\n                value: 7,\r\n                label: 'CVM-TJ'\r\n                }, {\r\n                value: 8,\r\n                label: 'CVM-BJ'\r\n                }, {\r\n                value: 10,\r\n                label: 'CVM-LF'\r\n                }, {\r\n                value: 11,\r\n                label: 'CVK-TJ'\r\n                }, {\r\n                value: 13,\r\n                label: 'CVK-BJ'\r\n                }, {\r\n                value: 15,\r\n                label: 'CVK-LF'\r\n                }, {\r\n                value: 17,\r\n                label: 'VCFC-TJ'\r\n                }, {\r\n                value: 18,\r\n                label: 'VCFC-BJ'\r\n                }, {\r\n                value: 19,\r\n                label: 'VCFC-LF'\r\n            }],\r\n        }\r\n    },\r\n    mounted() {\r\n        this.initDeployDetial();\r\n        this.getComments();\r\n    },\r\n    methods: {\r\n        editorOnReady(editor){\r\n            editor.ui.getEditableElement().parentElement.insertBefore(\r\n                editor.ui.view.toolbar.element,\r\n                editor.ui.getEditableElement()\r\n            );\r\n            editor.plugins.get('FileRepository').createUploadAdapter = function(loader){\r\n                let val = editor.getData();\r\n                return{\r\n                    upload: async function(){\r\n                        return await loader.file.then(f => {\r\n                            const F = new FileReader();\r\n                            F.readAsArrayBuffer(f);\r\n                            return new Promise(resolve => {\r\n                                F.onload = function(){\r\n                                    resolve(F.result)\r\n                                };\r\n                            })\r\n                        }).then(bufAsArray => {\r\n                            return{\r\n                                default: ''\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n        }, \r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        },\r\n        initDeployDetial(){\r\n            let id = this.$route.params.id\r\n            this.$axios.get((this.$api.deployManage + '/' + id)).then((response) => {\r\n                this.deploy.title = response.data['res']['title']\r\n                this.deploy.category = response.data['res']['category']\r\n                this.deploy.version = response.data['res']['version']\r\n                this.deploy.post_author = response.data['res']['post_author']\r\n                this.deploy.deploy_uco = response.data['res']['deploy_uco']\r\n                this.deploy.deploy_uca = response.data['res']['deploy_uca']\r\n                this.deploy.deploy_ucs = response.data['res']['deploy_ucs']\r\n                this.deploy.deploy_sql = response.data['res']['deploy_sql']\r\n                this.deploy.deploy_links = response.data['res']['deploy_links']\r\n                this.deploy.environment = response.data['res']['environment_name']\r\n                this.deploy.deploy_describe = response.data['res']['deploy_describe']\r\n                this.deploy.body = response.data['res']['body']\r\n                this.deploy.api_task_id = response.data['res']['api_task_id']\r\n                this.deploy.api_test_report = response.data['res']['api_test_report']\r\n                this.deploy.timestamp = response.data['res']['timestamp']\r\n                this.fileList = response.data['fileList']\r\n            })\r\n        },\r\n        goBack(){\r\n            this.$router.go(-1);\r\n        },\r\n        beginDeploy(){\r\n            let post_id = this.$route.params.id\r\n            this.$axios.get((this.$api.postDeploy + post_id)).then((response) => {\r\n                this.$notify({\r\n                    title: '开始部署',\r\n                    message: '正在进行部署，部署完成后会有邮件通知',\r\n                    type: 'success',\r\n                })\r\n                this.messageShow(this, response);\r\n            }).catch((error) =>{\r\n                this.errorMessageShow(this, error.response);\r\n            })\r\n        },\r\n        getComments(){\r\n            let deploy_id = this.$route.params.id\r\n            this.$axios.get(this.$api.commentList.replace(/DEPLOY_ID/g, deploy_id),{\r\n                params: {page: 1, size: 100}\r\n            }).then(response => {\r\n                this.tableData = response.data['res']\r\n            })\r\n        },\r\n        addComment(){\r\n            this.dialog = true\r\n            this.commentForm.author = localStorage.getItem(\"name\")\r\n        },\r\n        commentDeploy(id){\r\n            this.$axios.get((this.$api.commentDeploy + id)).then((response) => {\r\n                this.$notify({\r\n                    title: '开始部署',\r\n                    message: '正在进行部署，部署完成后会有邮件通知',\r\n                    type: 'success',\r\n                })\r\n                this.messageShow(this, response);\r\n            }).catch((error) =>{\r\n                this.errorMessageShow(this, error.response);\r\n            })\r\n        },\r\n        deleteComment(id){\r\n            this.$axios.delete((this.$api.commentDelete + id)).then(response => {\r\n                if (this.messageShow(this, response)){\r\n                    this.reload();\r\n                }\r\n                }).catch((error) => {\r\n                this.errorMessageShow(this, error.response);\r\n                })\r\n        },\r\n        addCommentBtn(){\r\n            this.$confirm('确定要提交再次部署申请吗？')\r\n                .then(() => {\r\n                this.loading = true;\r\n                let deploy_id = this.$route.params.id\r\n                let data = {\r\n                    \"author\": this.commentForm.author,\r\n                    \"site\": this.commentForm.site,\r\n                    \"body\": this.commentForm.body,\r\n                    \"bug_id\": this.commentForm.bug_id,\r\n                    \"environment_id\": this.commentForm.environment_id\r\n                }\r\n                this.$axios.post(this.$api.commentAdd.replace(/DEPLOY_ID/g, deploy_id), data).then(response => {\r\n                    if (this.messageShow(this, response)){\r\n                        this.loading = false;\r\n                        this.dialog = false;\r\n                        this.reload();\r\n                    }\r\n                }).catch((error) => {\r\n                    this.loading = false;\r\n                    this.dialog = false;\r\n                    this.errorMessageShow(this, error.response);\r\n                })\r\n            })\r\n        },\r\n        downloadUrl(fileName){\r\n            let url = this.$api.fileDownload + 'report/' + fileName\r\n            return url \r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n  .demo-table-expand {\r\n    font-size: 0;\r\n  }\r\n  .demo-table-expand label {\r\n    width: 80px;\r\n    color: #99a9bf;\r\n  }\r\n  .demo-table-expand .el-form-item {\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n    width: 100%;\r\n  }\r\n  .el-drawer {\r\n    padding: 10px 10px 10px 10px;\r\n    position: absolute;\r\n    box-sizing: border-box;\r\n    background-color: #fff;\r\n    display: flex;\r\n    flex-direction: column;\r\n    box-shadow: 0 8px 10px -5px rgba(0,0,0,.2), 0 16px 24px 2px rgba(0,0,0,.14), 0 6px 30px 5px rgba(0,0,0,.12);\r\n    overflow: hidden;\r\n  }  \r\n  .demo-drawer__footer {\r\n      display: flex;\r\n  }\r\n</style>"]}]}