{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\test\\TestTaskDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\test\\TestTaskDetail.vue","mtime":1583747397550},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    inject: ['reload'],\r\n    data(){\r\n        return{\r\n            task: {\r\n                id: '',\r\n                title: '',\r\n                category_id: '',\r\n                host: '',\r\n                username: '',\r\n                password: '',\r\n                command: '',\r\n                report_path: '',\r\n                email: '',\r\n                cron: '',\r\n                remark: ''\r\n            },\r\n            reports: []\r\n        }\r\n    },\r\n    mounted() {\r\n        this.initTaskDetial()\r\n    },\r\n    methods: {\r\n        initTaskDetial(){\r\n            let id = this.$route.params.id\r\n            this.$axios.get((this.$api.testTaskManage + '/' + id)).then((response) => {\r\n                this.task.title = response.data['res']['title']\r\n                this.task.category_id = response.data['res']['category_id']\r\n                this.task.host = response.data['res']['host']\r\n                this.task.username = response.data['res']['username']\r\n                this.task.password = response.data['res']['password']\r\n                this.task.command = response.data['res']['command']\r\n                this.task.report_path = response.data['res']['report_path']\r\n                this.task.email = response.data['res']['email']\r\n                this.task.cron = response.data['res']['cron']\r\n                this.task.remark = response.data['res']['remark']\r\n                this.reports = response.data['reports']\r\n            })\r\n        },\r\n        goBack(){\r\n            this.$router.go(-1);\r\n        },\r\n        deleteReport(id){\r\n            this.$axios.delete((this.$api.testTaskReport + id)).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                    this.reload();\r\n                }\r\n                }).catch((error) => {\r\n                    this.errorMessageShow(this, error.response);\r\n                })\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["TestTaskDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TestTaskDetail.vue","sourceRoot":"src/components/test","sourcesContent":["<template>\r\n    <div>\r\n        <el-page-header @back=\"goBack\" :content=\"task.title\"></el-page-header>\r\n        <el-divider></el-divider>\r\n        <div class=\"row\">\r\n            <div class=\"mdui-typo\">\r\n                <ul>\r\n                <li>项目:</li>{{ task.category }}\r\n                <li>Host:</li> {{ task.host }}\r\n                <li>Command:</li>{{ task.command }}\r\n                <li>Report Path:</li>{{ task.report_path }}\r\n                <li>Emails:</li>{{ task.email }}\r\n                <li>Cron:</li>{{ task.cron }}\r\n                <li>状态:</li>\r\n                    <p v-if=\"task.status === 0\">STOPPED</p>\r\n                    <p v-else>RUNNING</p>\r\n                </ul>\r\n                <el-divider content-position=\"left\"><strong>任务描述</strong></el-divider>\r\n                <span v-html=\"task.remark\"></span>\r\n            </div>\r\n        </div>\r\n        <el-divider content-position=\"left\"><strong>测试报告</strong></el-divider>\r\n        <el-table\r\n            :data=\"reports\"\r\n            stripe\r\n            style=\"width: 100%\">\r\n            <el-table-column\r\n            type=\"index\"\r\n            label=\"No.\"\r\n            width=\"50\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"reportId\"\r\n            label=\"测试报告链接\">\r\n                <template slot-scope=\"scope\">\r\n                <a :href=\"'/api/testTaskReport/' + scope.row.reportId\" target=\"_blank\">{{ scope.row.reportId }}</a>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"timestamp\"\r\n            label=\"时间\">\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"360\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" circle plain\r\n                                @click.native=\"sureView(deleteReport,reports[scope.$index]['reportId'],reports[scope.$index]['reportId'])\">\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    inject: ['reload'],\r\n    data(){\r\n        return{\r\n            task: {\r\n                id: '',\r\n                title: '',\r\n                category_id: '',\r\n                host: '',\r\n                username: '',\r\n                password: '',\r\n                command: '',\r\n                report_path: '',\r\n                email: '',\r\n                cron: '',\r\n                remark: ''\r\n            },\r\n            reports: []\r\n        }\r\n    },\r\n    mounted() {\r\n        this.initTaskDetial()\r\n    },\r\n    methods: {\r\n        initTaskDetial(){\r\n            let id = this.$route.params.id\r\n            this.$axios.get((this.$api.testTaskManage + '/' + id)).then((response) => {\r\n                this.task.title = response.data['res']['title']\r\n                this.task.category_id = response.data['res']['category_id']\r\n                this.task.host = response.data['res']['host']\r\n                this.task.username = response.data['res']['username']\r\n                this.task.password = response.data['res']['password']\r\n                this.task.command = response.data['res']['command']\r\n                this.task.report_path = response.data['res']['report_path']\r\n                this.task.email = response.data['res']['email']\r\n                this.task.cron = response.data['res']['cron']\r\n                this.task.remark = response.data['res']['remark']\r\n                this.reports = response.data['reports']\r\n            })\r\n        },\r\n        goBack(){\r\n            this.$router.go(-1);\r\n        },\r\n        deleteReport(id){\r\n            this.$axios.delete((this.$api.testTaskReport + id)).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                    this.reload();\r\n                }\r\n                }).catch((error) => {\r\n                    this.errorMessageShow(this, error.response);\r\n                })\r\n        }\r\n    }\r\n}\r\n</script>"]}]}