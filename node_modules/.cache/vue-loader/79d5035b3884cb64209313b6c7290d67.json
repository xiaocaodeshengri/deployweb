{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\settings\\User.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\settings\\User.vue","mtime":1583747397548},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: ['categorys'],\n  data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      editUserFlag: false,\n      dialogFormVisible: false,\n      userForm: {\n        id: Number,\n        username: '',\n        name: '',\n        email: '',\n        category_id: null\n      },\n      rules: {\n        username: [\n          { required: true, message: '请输入登陆用户名', trigger: 'blur' },\n          { min: 1, max: 30, message: '长度在 1 到 30 个字符', trigger: 'blur' }\n        ],\n        name: [\n          { required: true, message: '请输入用户显示名称', trigger: 'blur' },\n          { min: 1, max: 30, message: '长度在 1 到 30 个字符', trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: '请输入电子邮件', trigger: 'blur' },\n          { min: 1, max: 254, message: '长度在 1 到 254 个字符', trigger: 'blur' }\n        ],\n        category_id: [\n          { required: true, message: '请选择项目组', trigger: 'change' }\n        ]\n      },\n      tableData: [],\n      filterInput: '',\n      filterTag: 'name',\n    }\n  },\n  mounted() {\n    this.userList();\n  },\n  methods: {\n    initUserForm(){\n      this.userForm.id = Number,\n      this.userForm.username = null,\n      this.userForm.name = null,\n      this.userForm.email = null,\n      this.userForm.category_id = null\n    },\n    userList(){\n      this.$axios.get(this.$api.userList, \n      {\n        params: {page: this.currentPage, size: this.pageSize, name: this.filterInput}\n      }).then((response) => {\n          this.tableData = response.data['res']\n          this.total = response.data['total']\n      })\n    },\n    handleSizeChange(val){\n      this.pageSize = val;\n      this.userList()\n    },\n    handleCurrentChange(val){\n      this.currentPage = val;\n      this.userList()\n    },\n    editUser(id){\n      this.editTaskFlag = true\n      this.$axios.get((this.$api.userManage + '/' + id)).then((response) => {\n        this.userForm.id = id\n        this.userForm.username = response.data['res']['username']\n        this.userForm.name = response.data['res']['name']\n        this.userForm.email = response.data['res']['email']\n        this.userForm.category_id = response.data['res']['category_id']\n      })\n      this.dialogFormVisible = true\n    },\n    editUserBtn(id){\n      let data = {\n        \"username\": this.userForm.username,\n        \"name\": this.userForm.name,\n        \"email\": this.userForm.email,\n        \"category_id\": this.userForm.category_id\n      }\n      this.$axios.put((this.$api.userManage + '/' + id), data).then((response) => {\n        if (this.messageShow(this, response)){\n          this.dialogFormVisible = false;\n          this.editUserFlag = false;\n          this.userList();\n        }\n      }).catch((error) => {\n        this.errorMessageShow(this, error.response);\n      })\n    },\n    opUser(id, operation){\n      this.$axios.get((this.$api.userOperation.replace(/OPERATION/g, operation) + '/' + id)).then((response) => {\n        if (this.messageShow(this, response)){\n          this.userList()\n        }\n      }).catch((error) => {\n        this.errorMessageShow(this, error.response);\n      })\n    },\n    deleteUser(id){\n      this.$axios.delete((this.$api.userManage + '/' + id)).then((response) => {\n        if (this.messageShow(this, response)){\n          this.userList();\n        }\n      }).catch((error) => {\n        this.errorMessageShow(this, error.response);\n      })\n    },\n    cancelBtn(){\n      this.dialogFormVisible = false;\n      this.initUserForm();\n      this.editUserFlag = false;\n    },\n    refreshList(){\n      this.filterInput = null\n      this.userList()\n    },\n    filterBtn(){\n      this.userList()\n    }\n  }\n}\n",{"version":3,"sources":["User.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"User.vue","sourceRoot":"src/components/settings","sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"10\">\r\n          <el-col :span=\"3\"><h2>用户信息</h2></el-col>\r\n          <el-col :span=\"6\" :offset=\"12\" style=\"padding-top:18px\">\r\n            <el-input placeholder=\"请输入用户名\" v-model=\"filterInput\" size=\"small\">\r\n              <el-select v-model=\"filterTag\" slot=\"prepend\" placeholder=\"请选择\" class=\"select-inside\">\r\n                <el-option label=\"用户名\" value=\"name\"></el-option>\r\n              </el-select>\r\n              <el-button slot=\"append\" icon=\"el-icon-search\" @click.native=\"filterBtn\"></el-button>\r\n            </el-input>\r\n          </el-col>\r\n          <el-col :span=\"1\" style=\"padding-top:18px\">\r\n                <el-button type=\"primary\" icon=\"el-icon-refresh\" size=\"mini\" plain\r\n                            @click.native=\"refreshList\">\r\n                </el-button>\r\n          </el-col>\r\n        </el-row>\r\n        <el-divider></el-divider>\r\n        <el-table\r\n            :data=\"tableData\"\r\n            stripe\r\n            style=\"width: 100%\">\r\n            <el-table-column\r\n            type=\"index\"\r\n            label=\"No.\"\r\n            width=\"50\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"username\"\r\n            label=\"登录名\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"name\"\r\n            label=\"用户名\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"email\"\r\n            label=\"电子邮箱\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"category\"\r\n            label=\"项目组\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"role\"\r\n            label=\"权限等级\">\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"550\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" plain\r\n                                @click.native=\"editUser(tableData[scope.$index]['id'])\">Edit\r\n                    </el-button>\r\n                    <el-button type=\"warning\" size=\"mini\" plain\r\n                                @click.native=\"opUser(tableData[scope.$index]['id'], 'resetPassword')\">Reset Password\r\n                    </el-button>\r\n                    <el-button type=\"waring\" size=\"mini\" plain\r\n                                @click.native=\"opUser(tableData[scope.$index]['id'], 'roleUp')\">Role +1\r\n                    </el-button>\r\n                    <el-button type=\"warning\" size=\"mini\" plain\r\n                                @click.native=\"opUser(tableData[scope.$index]['id'], 'roleDown')\">Role -1\r\n                    </el-button>\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" plain\r\n                                @click.native=\"sureView(deleteUser,tableData[scope.$index]['id'],tableData[scope.$index]['name'])\">Delete\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <el-row type=\"flex\" justify=\"end\">\r\n          <el-col :span=\"12\" style=padding-top:24px>\r\n            <el-pagination\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"currentPage\"\r\n              :page-sizes=\"[10, 20, 50, 100]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"total\">\r\n            </el-pagination>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-dialog title=\"用户配置\" :visible.sync=\"dialogFormVisible\">\r\n          <el-form :model=\"userForm\" :rules=\"rules\" ref=\"userForm\" label-width=\"100px\" class=\"demo-userForm\">\r\n              <el-form-item label=\"登陆名\" prop=\"username\" size=\"small\">\r\n                  <el-input v-model=\"userForm.username\" class=\"commonwidth\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"用户名\" prop=\"name\" size=\"small\">\r\n                  <el-input v-model=\"userForm.name\" class=\"commonwidth\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"电子邮箱\" prop=\"email\" size=\"small\">\r\n                  <el-input v-model=\"userForm.email\" class=\"commonwidth\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"项目\" prop=\"category_id\" size=\"small\">\r\n                  <el-select v-model=\"userForm.category_id\" placeholder=\"请选择项目\">\r\n                    <el-option\r\n                      v-for=\"item in categorys\"\r\n                      :key=\"item.id\"\r\n                      :label=\"item.name\"\r\n                      :value=\"item.id\">\r\n                    </el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click.native=\"cancelBtn()\">取 消</el-button>\r\n              <el-button type=\"primary\" @click=\"editUserBtn(userForm['id'])\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    props: ['categorys'],\r\n    data() {\r\n      return {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        editUserFlag: false,\r\n        dialogFormVisible: false,\r\n        userForm: {\r\n          id: Number,\r\n          username: '',\r\n          name: '',\r\n          email: '',\r\n          category_id: null\r\n        },\r\n        rules: {\r\n          username: [\r\n            { required: true, message: '请输入登陆用户名', trigger: 'blur' },\r\n            { min: 1, max: 30, message: '长度在 1 到 30 个字符', trigger: 'blur' }\r\n          ],\r\n          name: [\r\n            { required: true, message: '请输入用户显示名称', trigger: 'blur' },\r\n            { min: 1, max: 30, message: '长度在 1 到 30 个字符', trigger: 'blur' }\r\n          ],\r\n          email: [\r\n            { required: true, message: '请输入电子邮件', trigger: 'blur' },\r\n            { min: 1, max: 254, message: '长度在 1 到 254 个字符', trigger: 'blur' }\r\n          ],\r\n          category_id: [\r\n            { required: true, message: '请选择项目组', trigger: 'change' }\r\n          ]\r\n        },\r\n        tableData: [],\r\n        filterInput: '',\r\n        filterTag: 'name',\r\n      }\r\n    },\r\n    mounted() {\r\n      this.userList();\r\n    },\r\n    methods: {\r\n      initUserForm(){\r\n        this.userForm.id = Number,\r\n        this.userForm.username = null,\r\n        this.userForm.name = null,\r\n        this.userForm.email = null,\r\n        this.userForm.category_id = null\r\n      },\r\n      userList(){\r\n        this.$axios.get(this.$api.userList, \r\n        {\r\n          params: {page: this.currentPage, size: this.pageSize, name: this.filterInput}\r\n        }).then((response) => {\r\n            this.tableData = response.data['res']\r\n            this.total = response.data['total']\r\n        })\r\n      },\r\n      handleSizeChange(val){\r\n        this.pageSize = val;\r\n        this.userList()\r\n      },\r\n      handleCurrentChange(val){\r\n        this.currentPage = val;\r\n        this.userList()\r\n      },\r\n      editUser(id){\r\n        this.editTaskFlag = true\r\n        this.$axios.get((this.$api.userManage + '/' + id)).then((response) => {\r\n          this.userForm.id = id\r\n          this.userForm.username = response.data['res']['username']\r\n          this.userForm.name = response.data['res']['name']\r\n          this.userForm.email = response.data['res']['email']\r\n          this.userForm.category_id = response.data['res']['category_id']\r\n        })\r\n        this.dialogFormVisible = true\r\n      },\r\n      editUserBtn(id){\r\n        let data = {\r\n          \"username\": this.userForm.username,\r\n          \"name\": this.userForm.name,\r\n          \"email\": this.userForm.email,\r\n          \"category_id\": this.userForm.category_id\r\n        }\r\n        this.$axios.put((this.$api.userManage + '/' + id), data).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.dialogFormVisible = false;\r\n            this.editUserFlag = false;\r\n            this.userList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      opUser(id, operation){\r\n        this.$axios.get((this.$api.userOperation.replace(/OPERATION/g, operation) + '/' + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.userList()\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      deleteUser(id){\r\n        this.$axios.delete((this.$api.userManage + '/' + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.userList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      cancelBtn(){\r\n        this.dialogFormVisible = false;\r\n        this.initUserForm();\r\n        this.editUserFlag = false;\r\n      },\r\n      refreshList(){\r\n        this.filterInput = null\r\n        this.userList()\r\n      },\r\n      filterBtn(){\r\n        this.userList()\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.select-inside {\r\n  width: 100px;\r\n}\r\n</style>"]}]}