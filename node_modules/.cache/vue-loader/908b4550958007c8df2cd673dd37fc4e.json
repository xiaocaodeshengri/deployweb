{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\environment\\Product.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\environment\\Product.vue","mtime":1583747397524},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    inject: ['reload'],\r\n    props: ['categorys'],\r\n    data() {\r\n      return {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        dialogFormVisible: false,\r\n        dialogRegionFormVisible: false,\r\n        editFlag: false,\r\n        category: '',\r\n        tableData: [],\r\n        tableHead: [],\r\n        productForm: {\r\n            id: '',\r\n            category_id: null,\r\n            product: '',\r\n            function: '',\r\n            region: []\r\n        },\r\n        rules: {\r\n            category_id: [\r\n                { required: true, message: '请选择所属项目', trigger: 'change' },\r\n            ],\r\n            product: [\r\n                { required: true, message: '请输入产品名称', trigger: 'blur' }\r\n            ],\r\n            function: [\r\n                { required: true, message: '请输入产品二级功能', trigger: 'blur' }\r\n            ],\r\n            region: [\r\n                { required: true, message: '请选择开通地域', trigger: 'blur' }\r\n            ]\r\n        },\r\n        regionForm: {\r\n            name: '',\r\n            region: ''\r\n        },\r\n        regionRules: {\r\n            name: [\r\n                { required: true, message: '请输入地域名称', trigger: 'blur' }\r\n            ],\r\n            region: [\r\n                { required: true, message: '请输入输入地域英文表示字符', trigger: 'blur' }\r\n            ]\r\n        },\r\n      }\r\n    },\r\n    mounted() {\r\n      this.regionList();\r\n      this.productList();\r\n    },\r\n    methods: {\r\n        regionList(){\r\n            this.$axios.get(this.$api.regionList,{\r\n                params: {page: 1, size: 100}\r\n            }).then((response) =>{\r\n                this.tableHead = response.data['res']\r\n            })\r\n        },\r\n        productList(category){\r\n            this.$axios.get(this.$api.productList, {\r\n                params: {page: this.currentPage, size: this.pageSize, category_id: category}\r\n            }).then((response) => {\r\n                this.tableData = response.data['res']\r\n                this.total = response.data['total']\r\n            })\r\n        },\r\n        handleSizeChange(val){\r\n            this.pageSize = val;\r\n            this.productList(this.category)\r\n        },\r\n        handleCurrentChange(val){\r\n            this.currentPage = val;\r\n            this.productList(this.category)\r\n        },\r\n        filterProduct(){\r\n            this.productList(this.category)\r\n        },\r\n        refreshList(){\r\n            this.currentPage = 1,\r\n            this.category = null,\r\n            this.productList(this.category)\r\n        },\r\n        editProduct(row){\r\n            this.$axios.get((this.$api.productManage + '/' + row.id)).then((response) => {\r\n                this.productForm = response.data['res']\r\n            })\r\n            this.dialogFormVisible = true\r\n            this.editFlag = true\r\n        },\r\n        editProductBtn(id){\r\n            let data = {\r\n                'category_id': this.productForm.category_id,\r\n                'product': this.productForm.product,\r\n                'function': this.productForm.function,\r\n                'region': this.productForm.region\r\n            }\r\n            this.$axios.put((this.$api.productManage + '/' + id), data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                    this.productList(this.category)\r\n                    this.dialogFormVisible = false\r\n                    this.editFlag = false\r\n                }\r\n                }).catch((error) => {\r\n                    this.errorMessageShow(this, error.response);\r\n            })\r\n        },\r\n        addBtn(){\r\n            this.initForm()\r\n            this.editFlag = false\r\n            this.dialogFormVisible = true\r\n        },\r\n        addRegionBtn(){\r\n            this.initRegionForm()\r\n            this.dialogRegionFormVisible = true\r\n        },\r\n        addProductBtn(){\r\n            let data = {\r\n                'category_id': this.productForm.category_id,\r\n                'product': this.productForm.product,\r\n                'function': this.productForm.function,\r\n                'region': this.productForm.region\r\n            }\r\n            this.$axios.post(this.$api.productManage, data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                    this.productList(this.category)\r\n                    this.dialogFormVisible = false\r\n                }\r\n                }).catch((error) => {\r\n                    this.errorMessageShow(this, error.response);\r\n            })\r\n        },\r\n        addRegion(){\r\n            let data = {\r\n                'name': this.regionForm.name,\r\n                'region': this.regionForm.region\r\n            }\r\n            this.$axios.post(this.$api.regionManage, data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                    this.dialogFormVisible = false\r\n                    this.reload()\r\n                }\r\n                }).catch((error) => {\r\n                    this.errorMessageShow(this, error.response);\r\n            })\r\n        },\r\n        initForm(){\r\n            this.productForm.category_id = null,\r\n            this.productForm.product = null,\r\n            this.productForm.function = null,\r\n            this.productForm.region = []\r\n        },\r\n        initRegionForm(){\r\n            this.regionForm.name = '',\r\n            this.regionForm.region = ''\r\n        },\r\n        cancleBtn(){\r\n            this.initForm()\r\n            this.editFlag = false\r\n            this.dialogFormVisible = false\r\n        },\r\n        cancleRegionBtn(){\r\n            this.initRegionForm()\r\n            this.dialogRegionFormVisible = false\r\n        },\r\n        deleteProduct(id){\r\n            this.$axios.delete((this.$api.productManage + '/' + id)).then((response) => {\r\n            if (this.messageShow(this, response)){\r\n                this.productList(this.category);\r\n            }\r\n            }).catch((error) => {\r\n            this.errorMessageShow(this, error.response);\r\n            })\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["Product.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Product.vue","sourceRoot":"src/components/environment","sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"10\">\r\n          <el-col :span=\"3\"><h2>产品开通信息</h2></el-col>\r\n          <el-col :span=\"3\" :offset=\"15\">\r\n            <el-select v-model=\"category\" filterable placeholder=\"根据项目筛选\" size=\"small\" v-on:change=\"filterProduct\"\r\n            style=\"padding-top:17px\">\r\n              <el-option\r\n                v-for=\"item in categorys\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>          \r\n          </el-col>\r\n          <el-col :span=\"1\" style=\"padding-top:17px\">\r\n                <el-button type=\"primary\" icon=\"el-icon-refresh\" size=\"mini\" plain\r\n                            @click.native=\"refreshList\">\r\n                </el-button>\r\n          </el-col>\r\n          <!-- <el-col :span=\"1\" style=padding-top:16px>\r\n            <el-button @click.native=\"addBtn()\" type=\"primary\" icon=\"el-icon-plus\" size=\"small\" circle plain></el-button>\r\n          </el-col> -->\r\n          <el-col :span=\"1\" style=padding-top:16px>\r\n            <el-dropdown>\r\n            <span split-button class=\"el-dropdown-link icon-warp\">\r\n                <i class=\"el-icon-circle-plus-outline\"></i>\r\n            </span>\r\n            <el-dropdown-menu slot=\"dropdown\">\r\n                <el-dropdown-item @click.native=\"addBtn()\">产品</el-dropdown-item>\r\n                <el-dropdown-item @click.native=\"addRegionBtn()\">地域</el-dropdown-item>\r\n            </el-dropdown-menu>\r\n            </el-dropdown>\r\n          </el-col>\r\n        </el-row>\r\n        <el-divider></el-divider>\r\n        <el-table\r\n            :data=\"tableData\"\r\n            stripe\r\n            style=\"width: 100%\"\r\n            @row-dblclick=\"editProduct\">\r\n            <el-table-column\r\n            type=\"index\"\r\n            label=\"No.\"\r\n            width=\"50\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"category\"\r\n            label=\"项目组\"\r\n            width=\"100\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"product\"\r\n            label=\"产品\"\r\n            width=\"120\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"function\"\r\n            label=\"功能\"\r\n            width=\"120\">\r\n            </el-table-column>\r\n            <el-table-column label=\"地域\">\r\n                <template v-for=\"(item,index) in tableHead\">\r\n                    <el-table-column :prop=\"item.region\" :label=\"item.name\" :key=\"index\" width=\"100\"></el-table-column>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n            fixed=\"right\"\r\n            label=\"操作\"\r\n            width=\"50\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" circle plain\r\n                                @click.native=\"sureView(deleteProduct,tableData[scope.$index]['id'],tableData[scope.$index]['function'])\">\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <el-row type=\"flex\" justify=\"end\">\r\n          <el-col :span=\"12\" style=padding-top:24px>\r\n            <el-pagination\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"currentPage\"\r\n              :page-sizes=\"[10, 20, 50, 100]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"total\">\r\n            </el-pagination>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-dialog title=\"产品配置\" :visible.sync=\"dialogFormVisible\">\r\n          <el-form :model=\"productForm\" :rules=\"rules\" ref=\"productForm\" label-width=\"150px\" class=\"demo-productForm\">\r\n              <el-form-item label=\"项目\" prop=\"category_id\" size=\"small\">\r\n                <el-select v-model=\"productForm.category_id\" placeholder=\"请选择项目\">\r\n                  <el-option\r\n                    v-for=\"item in categorys\"\r\n                    :key=\"item.id\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.id\">\r\n                  </el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"产品名称\" prop=\"product\" size=\"small\">\r\n                  <el-input v-model=\"productForm.product\" class=\"commonwidth\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"二级功能\" prop=\"function\" size=\"small\">\r\n                  <el-input v-model=\"productForm.function\" class=\"commonwidth\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"开通地域\" prop=\"region\" size=\"small\">\r\n                  <template>\r\n                      <el-checkbox-group v-model=\"productForm.region\">\r\n                          <template v-for=\"(item,index) in tableHead\">\r\n                              <el-checkbox :value=\"item.region\" :label=\"item.region\" :key=\"index\"></el-checkbox>\r\n                          </template>\r\n                      </el-checkbox-group>\r\n                  </template>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"cancleBtn()\">取 消</el-button>\r\n              <el-button v-if=\"editFlag === true\" type=\"primary\" @click=\"editProductBtn(productForm['id'])\">修 改</el-button>\r\n              <el-button v-else type=\"primary\" @click=\"addProductBtn()\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-dialog title=\"添加地域\" :visible.sync=\"dialogRegionFormVisible\" width=\"30%\">\r\n          <el-form :model=\"regionForm\" :rules=\"regionRules\" ref=\"regionForm\" label-width=\"150px\" class=\"demo-regionForm\">\r\n              <el-form-item label=\"地域名称\" prop=\"name\" size=\"small\">\r\n                  <el-input v-model=\"regionForm.name\" class=\"small-size\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"地域英文字符\" prop=\"region\" size=\"small\">\r\n                  <el-input v-model=\"regionForm.region\" class=\"small-size\"></el-input>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"cancleRegionBtn()\">取 消</el-button>\r\n              <el-button type=\"primary\" @click=\"addRegion()\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    inject: ['reload'],\r\n    props: ['categorys'],\r\n    data() {\r\n      return {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        dialogFormVisible: false,\r\n        dialogRegionFormVisible: false,\r\n        editFlag: false,\r\n        category: '',\r\n        tableData: [],\r\n        tableHead: [],\r\n        productForm: {\r\n            id: '',\r\n            category_id: null,\r\n            product: '',\r\n            function: '',\r\n            region: []\r\n        },\r\n        rules: {\r\n            category_id: [\r\n                { required: true, message: '请选择所属项目', trigger: 'change' },\r\n            ],\r\n            product: [\r\n                { required: true, message: '请输入产品名称', trigger: 'blur' }\r\n            ],\r\n            function: [\r\n                { required: true, message: '请输入产品二级功能', trigger: 'blur' }\r\n            ],\r\n            region: [\r\n                { required: true, message: '请选择开通地域', trigger: 'blur' }\r\n            ]\r\n        },\r\n        regionForm: {\r\n            name: '',\r\n            region: ''\r\n        },\r\n        regionRules: {\r\n            name: [\r\n                { required: true, message: '请输入地域名称', trigger: 'blur' }\r\n            ],\r\n            region: [\r\n                { required: true, message: '请输入输入地域英文表示字符', trigger: 'blur' }\r\n            ]\r\n        },\r\n      }\r\n    },\r\n    mounted() {\r\n      this.regionList();\r\n      this.productList();\r\n    },\r\n    methods: {\r\n        regionList(){\r\n            this.$axios.get(this.$api.regionList,{\r\n                params: {page: 1, size: 100}\r\n            }).then((response) =>{\r\n                this.tableHead = response.data['res']\r\n            })\r\n        },\r\n        productList(category){\r\n            this.$axios.get(this.$api.productList, {\r\n                params: {page: this.currentPage, size: this.pageSize, category_id: category}\r\n            }).then((response) => {\r\n                this.tableData = response.data['res']\r\n                this.total = response.data['total']\r\n            })\r\n        },\r\n        handleSizeChange(val){\r\n            this.pageSize = val;\r\n            this.productList(this.category)\r\n        },\r\n        handleCurrentChange(val){\r\n            this.currentPage = val;\r\n            this.productList(this.category)\r\n        },\r\n        filterProduct(){\r\n            this.productList(this.category)\r\n        },\r\n        refreshList(){\r\n            this.currentPage = 1,\r\n            this.category = null,\r\n            this.productList(this.category)\r\n        },\r\n        editProduct(row){\r\n            this.$axios.get((this.$api.productManage + '/' + row.id)).then((response) => {\r\n                this.productForm = response.data['res']\r\n            })\r\n            this.dialogFormVisible = true\r\n            this.editFlag = true\r\n        },\r\n        editProductBtn(id){\r\n            let data = {\r\n                'category_id': this.productForm.category_id,\r\n                'product': this.productForm.product,\r\n                'function': this.productForm.function,\r\n                'region': this.productForm.region\r\n            }\r\n            this.$axios.put((this.$api.productManage + '/' + id), data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                    this.productList(this.category)\r\n                    this.dialogFormVisible = false\r\n                    this.editFlag = false\r\n                }\r\n                }).catch((error) => {\r\n                    this.errorMessageShow(this, error.response);\r\n            })\r\n        },\r\n        addBtn(){\r\n            this.initForm()\r\n            this.editFlag = false\r\n            this.dialogFormVisible = true\r\n        },\r\n        addRegionBtn(){\r\n            this.initRegionForm()\r\n            this.dialogRegionFormVisible = true\r\n        },\r\n        addProductBtn(){\r\n            let data = {\r\n                'category_id': this.productForm.category_id,\r\n                'product': this.productForm.product,\r\n                'function': this.productForm.function,\r\n                'region': this.productForm.region\r\n            }\r\n            this.$axios.post(this.$api.productManage, data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                    this.productList(this.category)\r\n                    this.dialogFormVisible = false\r\n                }\r\n                }).catch((error) => {\r\n                    this.errorMessageShow(this, error.response);\r\n            })\r\n        },\r\n        addRegion(){\r\n            let data = {\r\n                'name': this.regionForm.name,\r\n                'region': this.regionForm.region\r\n            }\r\n            this.$axios.post(this.$api.regionManage, data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                    this.dialogFormVisible = false\r\n                    this.reload()\r\n                }\r\n                }).catch((error) => {\r\n                    this.errorMessageShow(this, error.response);\r\n            })\r\n        },\r\n        initForm(){\r\n            this.productForm.category_id = null,\r\n            this.productForm.product = null,\r\n            this.productForm.function = null,\r\n            this.productForm.region = []\r\n        },\r\n        initRegionForm(){\r\n            this.regionForm.name = '',\r\n            this.regionForm.region = ''\r\n        },\r\n        cancleBtn(){\r\n            this.initForm()\r\n            this.editFlag = false\r\n            this.dialogFormVisible = false\r\n        },\r\n        cancleRegionBtn(){\r\n            this.initRegionForm()\r\n            this.dialogRegionFormVisible = false\r\n        },\r\n        deleteProduct(id){\r\n            this.$axios.delete((this.$api.productManage + '/' + id)).then((response) => {\r\n            if (this.messageShow(this, response)){\r\n                this.productList(this.category);\r\n            }\r\n            }).catch((error) => {\r\n            this.errorMessageShow(this, error.response);\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>"]}]}