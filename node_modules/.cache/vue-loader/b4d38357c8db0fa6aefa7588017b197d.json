{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\environment\\Image.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\environment\\Image.vue","mtime":1583747397522},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: ['categorys'],\n  data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      tableImageData: [],\n      imageCategory: '',\n      environmentId: null,\n      environments: [],\n      category: null,\n      imageName: null\n    }\n  },\n  mounted() {\n    this.imageList();\n    this.environmentList();\n  },\n  methods: {\n      environmentList(){\n          this.$axios.get(this.$api.environmentList, \n          {\n          params: {page: 1, size: 100}\n          }).then((response) => {\n              this.environments = response.data['res']\n          })\n      },\n      imageList(environmentId, categoryName, imageName){\n          this.$axios.get(this.$api.imageList, \n          {\n          params: {page: this.currentPage, size: this.pageSize, environment_id: environmentId, category: categoryName, name: imageName}\n          }).then((response) => {\n              this.tableImageData = response.data['res']\n              this.total = response.data['total']\n          })\n      },\n      handleSizeChange(val){\n          this.pageSize = val;\n          this.imageList(this.environmentId, this.category, this.imageName)\n      },\n      handleCurrentChange(val){\n          this.currentPage = val;\n          this.imageList(this.environmentId, this.category, this.imageName)\n      },\n      filterByEnv(){\n          this.imageList(this.environmentId, this.category, this.imageName)\n      },\n      filterByCategory(){\n          this.imageList(this.environmentId, this.category, this.imageName)\n      },\n      searchByName(){\n          this.imageList(this.environmentId, this.category, this.imageName)\n      },\n      refreshList(){\n          this.currentPage = 1;\n          this.environmentId = null;\n          this.category = null;\n          this.imageName = null;\n          this.imageList(this.environmentId, this.category, this.imageName);\n      },\n      handleEdit(id){\n          let data = {\n              'category': this.imageCategory\n          }\n          this.$axios.put((this.$api.imageOperation + id), data).then((response) => {\n              if (this.messageShow(this, response)){\n                  this.imageList(this.environmentId, this.category, this.imageName);\n              }\n              }).catch((error) => {\n              this.errorMessageShow(this, error.response);\n          })\n      },\n      deleteImage(id){\n          this.$axios.delete((this.$api.imageOperation + id)).then((response) => {\n              if (this.messageShow(this, response)){\n                  this.imageList(this.environmentId, this.category, this.imageName);\n              }\n              }).catch((error) => {\n              this.errorMessageShow(this, error.response);\n          })\n      },\n      dblhandleCurrentChange(row) {\n          row.editable = true\n      },\n      inputblur(row){\n          row.editable = false\n          this.imageCategory = null\n      }\n  }\n}\n",{"version":3,"sources":["Image.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Image.vue","sourceRoot":"src/components/environment","sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"10\">\r\n          <el-col :span=\"3\"><h2>镜像信息</h2></el-col>\r\n          <el-col :span=\"3\" :offset=\"10\" style=\"padding-top:16px\">\r\n                <el-input placeholder=\"镜像名称\" \r\n                v-model='imageName' size=\"small\"\r\n                @change=\"searchByName\">\r\n                </el-input>\r\n          </el-col>\r\n          <el-col :span=\"3\">\r\n            <el-select v-model=\"category\" filterable placeholder=\"根据项目筛选\" size=\"small\" v-on:change=\"filterByCategory\"\r\n            style=\"padding-top:16px\">\r\n              <el-option\r\n                v-for=\"item in categorys\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.name\">\r\n              </el-option>\r\n            </el-select>          \r\n          </el-col>\r\n          <el-col :span=\"3\">\r\n            <el-select v-model=\"environmentId\" filterable placeholder=\"根据环境筛选\" size=\"small\" v-on:change=\"filterByEnv\"\r\n            style=\"padding-top:16px\">\r\n              <el-option\r\n                v-for=\"item in environments\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-col>\r\n          <el-col :span=\"2\" style=\"padding-top:16px\">\r\n                <el-button type=\"primary\" icon=\"el-icon-refresh\" size=\"mini\" plain\r\n                            @click.native=\"refreshList\">\r\n                </el-button>\r\n          </el-col>\r\n        </el-row>\r\n        <el-divider></el-divider>\r\n        <el-table\r\n            :data=\"tableImageData\"\r\n            stripe\r\n            style=\"width: 100%\"\r\n            @cell-dblclick=\"dblhandleCurrentChange\">\r\n            <el-table-column\r\n            type=\"index\"\r\n            label=\"No.\"\r\n            width=\"50\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"name\"\r\n            label=\"镜像名称\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"version\"\r\n            label=\"版本\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"category\"\r\n            label=\"所属项目\"\r\n            width=\"150\">\r\n                <template scope=\"scope\">\r\n                    <el-input v-if=\"scope.row.editable\" v-model='imageCategory' size=\"small\"\r\n                    @change=\"handleEdit(scope.row.id)\"\r\n                    v-on:blur=\"inputblur\"></el-input>\r\n                    <span v-else>{{scope.row.category}}</span>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"environment\"\r\n            label=\"所在环境\"\r\n            width=\"100\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"last_version\"\r\n            label=\"上个版本\">\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"100\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" circle plain\r\n                                @click.native=\"sureView(deleteImage,tableImageData[scope.$index]['id'],tableImageData[scope.$index]['name'])\">\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <el-row type=\"flex\" justify=\"end\">\r\n          <el-col :span=\"15\" style=padding-top:24px>\r\n            <el-pagination\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"currentPage\"\r\n              :page-sizes=\"[10, 20, 50, 100, 200, 500]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"total\">\r\n            </el-pagination>\r\n          </el-col>\r\n        </el-row>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    props: ['categorys'],\r\n    data() {\r\n      return {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        tableImageData: [],\r\n        imageCategory: '',\r\n        environmentId: null,\r\n        environments: [],\r\n        category: null,\r\n        imageName: null\r\n      }\r\n    },\r\n    mounted() {\r\n      this.imageList();\r\n      this.environmentList();\r\n    },\r\n    methods: {\r\n        environmentList(){\r\n            this.$axios.get(this.$api.environmentList, \r\n            {\r\n            params: {page: 1, size: 100}\r\n            }).then((response) => {\r\n                this.environments = response.data['res']\r\n            })\r\n        },\r\n        imageList(environmentId, categoryName, imageName){\r\n            this.$axios.get(this.$api.imageList, \r\n            {\r\n            params: {page: this.currentPage, size: this.pageSize, environment_id: environmentId, category: categoryName, name: imageName}\r\n            }).then((response) => {\r\n                this.tableImageData = response.data['res']\r\n                this.total = response.data['total']\r\n            })\r\n        },\r\n        handleSizeChange(val){\r\n            this.pageSize = val;\r\n            this.imageList(this.environmentId, this.category, this.imageName)\r\n        },\r\n        handleCurrentChange(val){\r\n            this.currentPage = val;\r\n            this.imageList(this.environmentId, this.category, this.imageName)\r\n        },\r\n        filterByEnv(){\r\n            this.imageList(this.environmentId, this.category, this.imageName)\r\n        },\r\n        filterByCategory(){\r\n            this.imageList(this.environmentId, this.category, this.imageName)\r\n        },\r\n        searchByName(){\r\n            this.imageList(this.environmentId, this.category, this.imageName)\r\n        },\r\n        refreshList(){\r\n            this.currentPage = 1;\r\n            this.environmentId = null;\r\n            this.category = null;\r\n            this.imageName = null;\r\n            this.imageList(this.environmentId, this.category, this.imageName);\r\n        },\r\n        handleEdit(id){\r\n            let data = {\r\n                'category': this.imageCategory\r\n            }\r\n            this.$axios.put((this.$api.imageOperation + id), data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                    this.imageList(this.environmentId, this.category, this.imageName);\r\n                }\r\n                }).catch((error) => {\r\n                this.errorMessageShow(this, error.response);\r\n            })\r\n        },\r\n        deleteImage(id){\r\n            this.$axios.delete((this.$api.imageOperation + id)).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                    this.imageList(this.environmentId, this.category, this.imageName);\r\n                }\r\n                }).catch((error) => {\r\n                this.errorMessageShow(this, error.response);\r\n            })\r\n        },\r\n        dblhandleCurrentChange(row) {\r\n            row.editable = true\r\n        },\r\n        inputblur(row){\r\n            row.editable = false\r\n            this.imageCategory = null\r\n        }\r\n    }\r\n  }\r\n</script>"]}]}