{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\qr\\Require.vue?vue&type=style&index=0&id=86700432&scoped=true&lang=css&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\qr\\Require.vue","mtime":1583747397543},{"path":"D:\\workFiles\\deployweb\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.select-inside {\r\n  width: 100px;\r\n}\r\n",{"version":3,"sources":["Require.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuQA;AACA;AACA","file":"Require.vue","sourceRoot":"src/components/qr","sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"10\">\r\n          <el-col :span=\"3\"><h2>需求记录</h2></el-col>\r\n          <el-col :span=\"6\" :offset=\"11\" style=\"padding-top:18px\">\r\n            <el-autocomplete placeholder=\"请输入内容\" v-model=\"filterInput\" size=\"small\"\r\n            :fetch-suggestions=\"querySearch\"\r\n            :trigger-on-focus=\"true\">\r\n              <el-select v-model=\"filterTag\" slot=\"prepend\" placeholder=\"请选择\" class=\"select-inside\">\r\n                <el-option label=\"类型\" value=\"record_type\"></el-option>\r\n                <el-option label=\"级别\" value=\"p_class\"></el-option>\r\n                <el-option label=\"状态\" value=\"status_code\"></el-option>\r\n                <el-option label=\"指派人\" value=\"resolver\"></el-option>\r\n              </el-select>\r\n              <el-button slot=\"append\" icon=\"el-icon-search\" @click.native=\"filterBtn\"></el-button>\r\n            </el-autocomplete>\r\n          </el-col>\r\n          <el-col :span=\"1\" style=\"padding-top:18px\">\r\n                <el-button type=\"primary\" icon=\"el-icon-refresh\" size=\"mini\" plain\r\n                            @click.native=\"refreshList\">\r\n                </el-button>\r\n          </el-col>\r\n          <el-col :span=\"1\" style=padding-top:17px>\r\n            <el-button @click.native=\"gotoRequireCreate\" type=\"primary\" icon=\"el-icon-plus\" size=\"small\" circle plain></el-button>\r\n          </el-col>\r\n        </el-row>\r\n        <el-divider></el-divider>\r\n        <el-table\r\n            :data=\"tableData\"\r\n            stripe\r\n            style=\"width: 100%\">\r\n            <el-table-column\r\n            type=\"index\"\r\n            label=\"No.\"\r\n            width=\"50\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"title\"\r\n            label=\"标题\"\r\n            width=\"350\">\r\n            <template slot-scope=\"scope\">\r\n              <a :href=\"'#/q_r/requires/' + scope.row.id + '/detail'\">{{ scope.row.title }}</a>\r\n            </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"record_type\"\r\n            label=\"类型\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"p_class\"\r\n            label=\"级别\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"questioner\"\r\n            label=\"提出者\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"resolver\"\r\n            label=\"指派\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"status\"\r\n            label=\"状态\">\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"300\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" plain\r\n                                @click.native=\"editRequire(tableData[scope.$index]['id'])\">Edit\r\n                    </el-button>\r\n                    <el-button type=\"warning\" size=\"mini\" v-if=\"tableData[scope.$index]['status_code'] === 0\" plain\r\n                                :disabled=\"true\">Close\r\n                    </el-button>\r\n                    <el-button type=\"warning\" size=\"mini\" v-else-if=\"tableData[scope.$index]['status_code'] === 1\" plain\r\n                                @click.native=\"closeRequire(tableData[scope.$index]['id'])\">Close\r\n                    </el-button>\r\n                    <el-button type=\"info\" size=\"mini\" v-else plain\r\n                                @click.native=\"reactiveRequire(tableData[scope.$index]['id'])\">Reactive\r\n                    </el-button>\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" plain\r\n                                @click.native=\"sureView(deleteRequire,tableData[scope.$index]['id'],tableData[scope.$index]['title'])\">\r\n                        Delete\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <el-row type=\"flex\" justify=\"end\">\r\n          <el-col :span=\"12\" style=padding-top:24px>\r\n            <el-pagination\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"currentPage\"\r\n              :page-sizes=\"[10, 20, 50, 100]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"total\">\r\n            </el-pagination>\r\n          </el-col>\r\n        </el-row>\r\n        \r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    inject: ['reload'],\r\n    data() {\r\n      return {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        tableData: [],\r\n        filterInput: '',\r\n        filterTag: '',\r\n        resolver: '',\r\n        record_type: '',\r\n        p_class: '',\r\n        status_code: '',\r\n        users: [],\r\n        record_types: [\r\n          {key: '环境问题', value: '环境问题'},\r\n          {key: '脚本问题', value: '脚本问题'},\r\n          {key: '版本问题', value: '版本问题'},\r\n          {key: '测试数据有误', value: '测试数据有误'},\r\n          {key: '其它', value: '其它'}\r\n        ],\r\n        p_classes: [\r\n          {key: 'P1', value: 'P1'},\r\n          {key: 'P2', value: 'P2'},\r\n          {key: 'P3', value: 'P3'},\r\n          {key: 'P4', value: 'P4'}\r\n        ],\r\n        status_codes: [\r\n          {key: '0', value: '未确认'},\r\n          {key: '1', value: '已确认'},\r\n          {key: '2', value: '已关闭'}\r\n        ]\r\n      }\r\n    },\r\n    mounted() {\r\n      this.requireList();\r\n      this.getAllUsers();\r\n    },\r\n    methods: {\r\n      editRequire(id){\r\n        this.$router.push('/q_r/requires/' + id +'/edit')\r\n      },\r\n      answerRequire(id){\r\n        console.log(id)\r\n      },\r\n      closeRequire(id){\r\n        this.$axios.get((this.$api.requireOperation.replace(/OPERATION/g, 'close') + '/' + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.reload();\r\n          }\r\n        }).catch((error) => {\r\n            this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      reactiveRequire(id){\r\n        this.$axios.get((this.$api.requireOperation.replace(/OPERATION/g, 'reactive') + '/' + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.reload();\r\n          }\r\n        }).catch((error) => {\r\n            this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      deleteRequire(id){\r\n        this.$axios.delete((this.$api.requireManage + '/' + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.requireList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      requireList(){\r\n        let paramsData = {\r\n          page: this.currentPage,\r\n          size: this.pageSize,\r\n          record_type: this.record_type,\r\n          resolver: this.resolver,\r\n          p_class: this.p_class,\r\n          resolver: this.resolver\r\n        }\r\n        if (this.filterTag === 'resolver'){\r\n          paramsData.resolver = this.filterInput;\r\n        }else if (this.filterTag === 'record_type'){\r\n          paramsData.record_type = this.filterInput;\r\n        }else if (this.filterTag === 'p_class'){\r\n          paramsData.p_class = this.filterInput;\r\n        }else if (this.filterTag === 'status_code'){\r\n          paramsData.status_code = this.filterInput;\r\n        }\r\n        this.$axios.get(this.$api.requireList,\r\n        {\r\n          params: paramsData\r\n        }).then((response) => {\r\n            this.tableData = response.data['res']\r\n            this.total = response.data['total']\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      handleSizeChange(val){\r\n        this.pageSize = val;\r\n        this.requireList()\r\n      },\r\n      handleCurrentChange(val){\r\n        this.currentPage = val;\r\n        this.requireList()\r\n      },\r\n      gotoRequireCreate(){\r\n        this.$router.push('/q_r/requires/create')\r\n      },\r\n      querySearch(queryString, cb) {\r\n        this.initFilter()\r\n        if (this.filterTag === 'resolver'){\r\n          var filters = this.users;\r\n        }else if (this.filterTag === 'record_type'){\r\n          var filters = this.record_types;\r\n        }else if (this.filterTag === 'p_class'){\r\n          var filters = this.p_classes;\r\n        }else if (this.filterTag === 'status_code'){\r\n          var filters = this.status_codes;\r\n        }\r\n        var results = queryString ? filters.filter(this.createFilter(queryString)) : filters;\r\n        cb(results);\r\n      },\r\n      createFilter(queryString) {\r\n        return (filters) => {\r\n          return (filters.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\r\n        };\r\n      },\r\n      getAllUsers(){\r\n        this.$axios.get(this.$api.userList, \r\n        {\r\n          params: {page: 1, size: 100}\r\n        }).then((response) => {\r\n          this.users = response.data['res']\r\n        })\r\n      },\r\n      initFilter(){\r\n        this.resolver = null\r\n        this.p_class = null\r\n        this.status_code = null\r\n        this.record_type = null\r\n      },\r\n      refreshList(){\r\n        this.filterTag = null\r\n        this.filterInput = null\r\n        this.initFilter()\r\n        this.requireList()\r\n      },\r\n      filterBtn(){\r\n        this.requireList()\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.select-inside {\r\n  width: 100px;\r\n}\r\n</style>"]}]}