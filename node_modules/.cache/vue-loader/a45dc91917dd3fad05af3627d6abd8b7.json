{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\topo\\TopoManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\topo\\TopoManage.vue","mtime":1583747397553},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  inject: ['reload'],\n  data() {\n    return {\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      // editFlag: false,\n      dialogFormVisible: false,\n      topoForm: {\n          id: '',\n          name: ''\n      },\n      topoRules: {\n        name: [\n          { required: true, message: '请输入环境拓扑图名称', trigger: 'blur' },\n          { min: 1, max: 60, message: '长度在 1 到 60 个字符', trigger: 'blur' }\n        ]\n      },\n      tableData: []\n    }\n  },\n  mounted() {\n    this.topoList();\n  },\n  methods: {\n    topoList(){\n      this.$axios.get(this.$api.topoList, \n      {\n        params: {page: this.currentPage, size: this.pageSize}\n      }).then((response) => {\n          this.tableData = response.data['res']\n          this.total = response.data['total']\n      })\n    },\n    handleSizeChange(val){\n      this.pageSize = val;\n      this.topoList()\n    },\n    handleCurrentChange(val){\n      this.currentPage = val;\n      this.topoList()\n    },\n    initTopoForm(){\n        this.topoForm.id = null;\n        this.topoForm.name = null;\n    },\n    editTopo(id){\n      // this.editFlag = true\n      this.$axios.get((this.$api.topoManage + id)).then((response) => {\n        this.topoForm.id = id\n        this.topoForm.name = response.data['res']['name']\n      })\n      this.dialogFormVisible = true\n    },\n    deleteTopo(id){\n      this.$axios.delete((this.$api.topoManage + id)).then((response) => {\n        if (this.messageShow(this, response)){\n          this.reload();\n        }\n      }).catch((error) => {\n        this.errorMessageShow(this, error.response);\n      })\n    },\n  //   addTopoBtn(){\n  //     let data = {\n  //       \"name\": this.topoForm.name,\n  //     }\n  //     this.$axios.post(this.$api.topoManage, data).then((response) => {\n  //       if (this.messageShow(this, response)){\n  //         this.dialogFormVisible = false;\n  //         this.topoList();\n  //       }\n  //     }).catch((error) => {\n  //       this.errorMessageShow(this, error.response);\n  //     })\n  //   },\n    editTopoBtn(id){\n      let data = {\n        \"name\": this.topoForm.name,\n      }\n      this.$axios.put((this.$api.topoManage + '/' + id), data).then((response) => {\n        if (this.messageShow(this, response)){\n          this.dialogFormVisible = false;\n          // this.editFlag = false;\n          this.topoList();\n        }\n      }).catch((error) => {\n        this.errorMessageShow(this, error.response);\n      })\n    },\n    cancelBtn(){\n      this.dialogFormVisible = false;\n      this.initTopoForm();\n      this.editFlag = false;\n    }\n  }\n}\n",{"version":3,"sources":["TopoManage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TopoManage.vue","sourceRoot":"src/components/topo","sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"10\">\r\n          <el-col :span=\"3\"><h2>环境拓扑</h2></el-col>\r\n          <!-- <el-col :span=\"3\" :offset=\"18\" style=padding-top:18px>\r\n            <el-button @click.native=\"initTopoForm()\" @click=\"dialogFormVisible = true\" type=\"primary\" icon=\"el-icon-plus\" size=\"small\" circle plain></el-button>\r\n          </el-col> -->\r\n        </el-row>\r\n        <el-divider></el-divider>\r\n        <el-table\r\n            :data=\"tableData\"\r\n            stripe\r\n            style=\"width: 100%\">\r\n            <el-table-column\r\n            type=\"index\"\r\n            label=\"No.\"\r\n            width=\"50\">\r\n            </el-table-column>\r\n            <el-table-column\r\n            prop=\"name\"\r\n            label=\"拓扑名称\">\r\n            <template slot-scope=\"scope\">\r\n              <a :href=\"'#/topo/' + scope.row.id\" target=\"_blank\">{{ scope.row.name }}</a>\r\n            </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"360\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" circle plain\r\n                                @click.native=\"editTopo(tableData[scope.$index]['id'])\">\r\n                    </el-button>\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" circle plain\r\n                                @click.native=\"sureView(deleteTopo,tableData[scope.$index]['id'],tableData[scope.$index]['name'])\">\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <el-row type=\"flex\" justify=\"end\">\r\n          <el-col :span=\"12\" style=padding-top:24px>\r\n            <el-pagination\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"currentPage\"\r\n              :page-sizes=\"[10, 20, 50, 100]\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"total\">\r\n            </el-pagination>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-dialog title=\"编辑拓扑名称\" :visible.sync=\"dialogFormVisible\" width=\"30%\">\r\n            <el-form :model=\"topoForm\" :rules=\"topoRules\" ref=\"topoForm\" label-width=\"100px\">\r\n                <el-form-item label=\"拓扑名称\" prop=\"name\" size=\"small\">\r\n                    <el-input v-model=\"topoForm.name\" class=\"register\" placeholder=\"请输入拓扑名称\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"cancelBtn()\">取 消</el-button>\r\n              <el-button type=\"primary\" @click=\"editTopoBtn(topoForm['id'])\">确 定</el-button>\r\n              <!-- <el-button v-else type=\"primary\" @click=\"addTopoBtn()\">新 建</el-button> -->\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    inject: ['reload'],\r\n    data() {\r\n      return {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0,\r\n        // editFlag: false,\r\n        dialogFormVisible: false,\r\n        topoForm: {\r\n            id: '',\r\n            name: ''\r\n        },\r\n        topoRules: {\r\n          name: [\r\n            { required: true, message: '请输入环境拓扑图名称', trigger: 'blur' },\r\n            { min: 1, max: 60, message: '长度在 1 到 60 个字符', trigger: 'blur' }\r\n          ]\r\n        },\r\n        tableData: []\r\n      }\r\n    },\r\n    mounted() {\r\n      this.topoList();\r\n    },\r\n    methods: {\r\n      topoList(){\r\n        this.$axios.get(this.$api.topoList, \r\n        {\r\n          params: {page: this.currentPage, size: this.pageSize}\r\n        }).then((response) => {\r\n            this.tableData = response.data['res']\r\n            this.total = response.data['total']\r\n        })\r\n      },\r\n      handleSizeChange(val){\r\n        this.pageSize = val;\r\n        this.topoList()\r\n      },\r\n      handleCurrentChange(val){\r\n        this.currentPage = val;\r\n        this.topoList()\r\n      },\r\n      initTopoForm(){\r\n          this.topoForm.id = null;\r\n          this.topoForm.name = null;\r\n      },\r\n      editTopo(id){\r\n        // this.editFlag = true\r\n        this.$axios.get((this.$api.topoManage + id)).then((response) => {\r\n          this.topoForm.id = id\r\n          this.topoForm.name = response.data['res']['name']\r\n        })\r\n        this.dialogFormVisible = true\r\n      },\r\n      deleteTopo(id){\r\n        this.$axios.delete((this.$api.topoManage + id)).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.reload();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n    //   addTopoBtn(){\r\n    //     let data = {\r\n    //       \"name\": this.topoForm.name,\r\n    //     }\r\n    //     this.$axios.post(this.$api.topoManage, data).then((response) => {\r\n    //       if (this.messageShow(this, response)){\r\n    //         this.dialogFormVisible = false;\r\n    //         this.topoList();\r\n    //       }\r\n    //     }).catch((error) => {\r\n    //       this.errorMessageShow(this, error.response);\r\n    //     })\r\n    //   },\r\n      editTopoBtn(id){\r\n        let data = {\r\n          \"name\": this.topoForm.name,\r\n        }\r\n        this.$axios.put((this.$api.topoManage + '/' + id), data).then((response) => {\r\n          if (this.messageShow(this, response)){\r\n            this.dialogFormVisible = false;\r\n            // this.editFlag = false;\r\n            this.topoList();\r\n          }\r\n        }).catch((error) => {\r\n          this.errorMessageShow(this, error.response);\r\n        })\r\n      },\r\n      cancelBtn(){\r\n        this.dialogFormVisible = false;\r\n        this.initTopoForm();\r\n        this.editFlag = false;\r\n      }\r\n    }\r\n  }\r\n</script>"]}]}