{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\deploy\\DeployEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\deploy\\DeployEdit.vue","mtime":1583747397519},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport '@ckeditor/ckeditor5-build-decoupled-document/build/translations/zh-cn'\r\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document'\r\n// import func from '../../../vue-temp/vue-editor-bridge';\r\n\r\n  export default {\r\n    props: ['categorys'],\r\n    data() {\r\n      return {\r\n        editor: DecoupledEditor,\r\n        editorConfig: {\r\n            language: 'zh-cn',\r\n            fontSize: {\r\n                options: [8, 10, 'default', 14, 16, 18, 20, 22, 24, 26, 28, 32, 48]\r\n            },\r\n            fontFamily:{\r\n                options: ['宋体', '仿宋', '微软雅黑', '黑体', '仿宋_GB2312', '楷体', '隶书', '幼圆']\r\n            }\r\n        },\r\n        deployEditFlag: false,\r\n        deployEditId: '',\r\n        planForDeployId: '',\r\n        subHeader: '',\r\n        fileList: [],\r\n        DeployForm: {\r\n          title: '',\r\n          category_id: '',\r\n          version: '',\r\n          post_author: '',\r\n          deploy_links: '',\r\n          deploy_sql: '',\r\n          deploy_describe: '',\r\n          body: '',\r\n          environment_id: null,\r\n          fileNames: null\r\n        },\r\n        rules: {\r\n          title: [\r\n            { required: true, message: '请输入部署标题', trigger: 'blur' },\r\n            { min: 3, max: 60, message: '长度在 3 到 60 个字符', trigger: 'blur' }\r\n          ],\r\n          category_id: [\r\n            { required: true, message: '请选择所属项目', trigger: 'change' }\r\n          ],\r\n          version: [\r\n            { required: true, message: '请输入发布版本', trigger: 'blur' },\r\n            { min: 3, max: 60, message: '长度在 3 到 60 个字符', trigger: 'blur' }\r\n          ],\r\n          deploy_describe: [\r\n            { required: true, message: '请填写转测范围', trigger: 'blur' }\r\n          ],\r\n          deploy_links: [\r\n            { required: true, message: '请填写部署包下载链接', trigger: 'blur' }\r\n          ],\r\n          environment_id: [\r\n            { required: true, message: '请选择部署环境', trigger: 'change' }\r\n          ],\r\n          body: [\r\n            { required: true, message: '请将测试报告复制到此处', trigger: 'blur' },\r\n          ]\r\n        },\r\n        environments: [{\r\n            value: 2,\r\n            label: 'yfb-uco'\r\n            }, {\r\n            value: 3,\r\n            label: 'UCA-LF'\r\n            }, {\r\n            value: 5,\r\n            label: 'UCA-TJ'\r\n            }, {\r\n            value: 6,\r\n            label: 'UCA-BJ'\r\n            }, {\r\n            value: 7,\r\n            label: 'CVM-TJ'\r\n            }, {\r\n            value: 8,\r\n            label: 'CVM-BJ'\r\n            }, {\r\n            value: 10,\r\n            label: 'CVM-LF'\r\n            }, {\r\n            value: 11,\r\n            label: 'CVK-TJ'\r\n            }, {\r\n            value: 13,\r\n            label: 'CVK-BJ'\r\n            }, {\r\n            value: 15,\r\n            label: 'CVK-LF'\r\n            }, {\r\n            value: 17,\r\n            label: 'VCFC-TJ'\r\n            }, {\r\n            value: 18,\r\n            label: 'VCFC-BJ'\r\n            }, {\r\n            value: 19,\r\n            label: 'VCFC-LF'\r\n        }],\r\n      };\r\n    },\r\n    mounted() {\r\n      this.judgeCreateOrEdit();\r\n    },\r\n    methods: {\r\n      initDeployFormEdit(id){\r\n          this.$axios.get((this.$api.deployManage + '/' + id)).then((response) => {\r\n            this.DeployForm.title = response.data['res']['title']\r\n            this.DeployForm.category_id = response.data['res']['category_id']\r\n            this.DeployForm.version = response.data['res']['version']\r\n            this.DeployForm.post_author = response.data['res']['post_author']\r\n            this.DeployForm.environment_id = response.data['res']['environment_id']\r\n            this.DeployForm.deploy_links = response.data['res']['deploy_links']\r\n            this.DeployForm.deploy_sql = response.data['res']['deploy_sql']\r\n            this.DeployForm.deploy_describe = response.data['res']['deploy_describe']\r\n            this.DeployForm.body = response.data['res']['body']\r\n            this.DeployForm.fileNames = response.data['res']['report_file_names']\r\n            this.fileList = response.data['fileList']\r\n          })\r\n      },\r\n      initDeployFormGoto(id){\r\n          this.$axios.get((this.$api.planManage + '/' + id)).then((response) => {\r\n            this.DeployForm.title = response.data['res']['title']\r\n            this.DeployForm.category_id = response.data['res']['category_id']\r\n            this.DeployForm.version = response.data['res']['version']\r\n            this.DeployForm.post_author = response.data['res']['author']\r\n          })\r\n      },\r\n      judgeCreateOrEdit(){\r\n          if(this.$route.path.indexOf('edit') >= 0){\r\n              this.deployEditFlag = true\r\n              this.subHeader = '编辑部署'\r\n              this.deployEditId = this.$route.path.split('/')[3]\r\n              this.initDeployFormEdit(this.deployEditId)\r\n          }else{\r\n              this.planEditFlag = false\r\n              this.subHeader = '转部署'\r\n              this.planForDeployId = this.$route.path.split('/')[3]\r\n              this.initDeployFormGoto(this.planForDeployId)\r\n          }\r\n      },\r\n      goBack(){\r\n          this.$router.go(-1);\r\n      },\r\n      editorOnReady(editor){\r\n          editor.ui.getEditableElement().parentElement.insertBefore(\r\n              editor.ui.view.toolbar.element,\r\n              editor.ui.getEditableElement()\r\n          );\r\n          editor.plugins.get('FileRepository').createUploadAdapter = function(loader){\r\n              let val = editor.getData();\r\n              return{\r\n                  upload: async function(){\r\n                      return await loader.file.then(f => {\r\n                          const F = new FileReader();\r\n                          F.readAsArrayBuffer(f);\r\n                          return new Promise(resolve => {\r\n                              F.onload = function(){\r\n                                  resolve(F.result)\r\n                              };\r\n                          })\r\n                      }).then(bufAsArray => {\r\n                          return{\r\n                              default: ''\r\n                          }\r\n                      });\r\n                  }\r\n              }\r\n          };\r\n      },\r\n      submitForm(formName) {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid) {\r\n            let data = {\r\n              \"title\": this.DeployForm.title,\r\n              \"category_id\": this.DeployForm.category_id,\r\n              \"version\": this.DeployForm.version,\r\n              \"post_author\": this.DeployForm.post_author,\r\n              \"environment_id\": this.DeployForm.environment_id,\r\n              \"deploy_links\": this.DeployForm.deploy_links,\r\n              \"deploy_sql\": this.DeployForm.deploy_sql,\r\n              \"deploy_describe\": this.DeployForm.deploy_describe,\r\n              \"body\": this.DeployForm.body,\r\n              \"report_file_names\": this.DeployForm.fileNames\r\n            }\r\n            if (this.deployEditFlag === false){\r\n              this.$axios.post((this.$api.planGotoDeploy.replace(/PLAN_ID/g, this.planForDeployId)), data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                  this.$router.push('/management/deploys')\r\n                  this.deployList();\r\n                }\r\n              }).catch((error) => {\r\n                this.errorMessageShow(this, error.response);\r\n              })\r\n            }else{\r\n              this.$axios.put((this.$api.deployManage + '/' + this.deployEditId), data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                  this.$router.push('/management/deploys')\r\n                  this.deployList();\r\n                }\r\n              }).catch((error) => {\r\n                this.errorMessageShow(this, error.response);\r\n              })\r\n            }\r\n          } else {\r\n            console.log('error submit!!');\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      resetForm(formName) {\r\n        this.$refs[formName].resetFields();\r\n      },\r\n      addFile(response, file, fileList) {\r\n        if(response['code'] === 200){\r\n          this.$notify({\r\n              title: '成功',\r\n              message: response['msg'],\r\n              type: 'success',\r\n          });\r\n          if (this.DeployForm.fileNames === null){\r\n              this.DeployForm.fileNames = file.name + ','\r\n          }else{\r\n              this.DeployForm.fileNames += (file.name + ',')\r\n          }\r\n          console.log(this.DeployForm.fileNames)\r\n        }else{\r\n          fileList.pop()\r\n          this.fileList = fileList\r\n          this.$notify({\r\n              title: '警告',\r\n              message: response['msg'],\r\n              type: 'warning',\r\n          });\r\n        }\r\n      },\r\n      removeFile(file, fileList){\r\n        let repStr = file.name + ','\r\n        this.DeployForm.fileNames = this.DeployForm.fileNames.replace(repStr, '')\r\n        console.log(this.DeployForm.fileNames)\r\n        this.$axios.get((this.$api.removeReport + file.name)).then((response) =>{\r\n          this.messageShow(this, response)\r\n        })\r\n      }\r\n    }\r\n  }\r\n",{"version":3,"sources":["DeployEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DeployEdit.vue","sourceRoot":"src/components/deploy","sourcesContent":["<template>\r\n<div>\r\n    <el-page-header @back=\"goBack\" v-bind:content=\"subHeader\"></el-page-header>\r\n    <el-divider></el-divider>\r\n    <el-form :model=\"DeployForm\" :rules=\"rules\" ref=\"DeployForm\" label-width=\"150px\" class=\"demo-DeployForm\" label-position=\"top\">\r\n        <el-form-item label=\"标题\" prop=\"title\" size=\"small\" >\r\n            <el-input v-model=\"DeployForm.title\" class=\"commonwidth\" :disabled=\"true\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"发布版本\" prop=\"version\" size=\"small\">\r\n            <el-input v-model=\"DeployForm.version\" class=\"commonwidth\" :disabled=\"true\"></el-input>\r\n        </el-form-item>\r\n        <el-row :gutter=\"10\">\r\n          <el-col :span=\"4\">\r\n            <el-form-item label=\"项目\" prop=\"category_id\" size=\"small\">\r\n                <el-select v-model=\"DeployForm.category_id\" placeholder=\"请选择项目\" :disabled=true>\r\n                  <el-option\r\n                    v-for=\"item in categorys\"\r\n                    :key=\"item.id\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.id\">\r\n                  </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"4\">\r\n            <el-form-item label=\"责任人\" prop=\"post_author\" class=\"authorwidth\" size=\"small\">\r\n                <el-input v-model=\"DeployForm.post_author\" :disabled=\"true\"></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-form-item label=\"转测范围\" prop=\"deploy_describe\" class=\"deploytext\" size=\"small\">\r\n            <el-input type=\"textarea\" v-model=\"DeployForm.deploy_describe\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"部署环境\" prop=\"environment_id\" size=\"small\">\r\n            <el-select v-model=\"DeployForm.environment_id\" placeholder=\"请选择部署环境\">\r\n                <el-option\r\n                v-for=\"item in environments\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\">\r\n                </el-option>\r\n            </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"部署包下载链接\" prop=\"deploy_links\" class=\"deploytext\" size=\"small\">\r\n            <el-input type=\"textarea\" v-model=\"DeployForm.deploy_links\" placeholder=\"http://***.tar.gz;http://***.tar.gz\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"SQL文件\" prop=\"deploy_sql\" class=\"deploytext\" size=\"small\">\r\n            <el-input type=\"textarea\" v-model=\"DeployForm.deploy_sql\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"测试报告\" prop=\"body\" size=\"small\">\r\n          <div  class=\"deploytext\">\r\n          <ckeditor :editor=\"editor\" @ready=\"editorOnReady\" v-model=\"DeployForm.body\" :config=\"editorConfig\">\r\n          </ckeditor>\r\n          <el-divider></el-divider>\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-upload\r\n            class=\"upload-demo\"\r\n            :action=\"this.$api.uploadReport\"\r\n            :on-success=\"addFile\"\r\n            :on-remove=\"removeFile\"\r\n            :file-list=\"fileList\">\r\n            <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n            <div slot=\"tip\" class=\"el-upload__tip\">支持多个文件，单个文件大小不超过10MB</div>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item>\r\n            <el-button type=\"primary\" @click=\"submitForm('DeployForm')\">确定</el-button>\r\n            <el-button @click=\"resetForm('DeployForm')\">重置</el-button>\r\n        </el-form-item>\r\n    </el-form>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport '@ckeditor/ckeditor5-build-decoupled-document/build/translations/zh-cn'\r\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document'\r\n// import func from '../../../vue-temp/vue-editor-bridge';\r\n\r\n  export default {\r\n    props: ['categorys'],\r\n    data() {\r\n      return {\r\n        editor: DecoupledEditor,\r\n        editorConfig: {\r\n            language: 'zh-cn',\r\n            fontSize: {\r\n                options: [8, 10, 'default', 14, 16, 18, 20, 22, 24, 26, 28, 32, 48]\r\n            },\r\n            fontFamily:{\r\n                options: ['宋体', '仿宋', '微软雅黑', '黑体', '仿宋_GB2312', '楷体', '隶书', '幼圆']\r\n            }\r\n        },\r\n        deployEditFlag: false,\r\n        deployEditId: '',\r\n        planForDeployId: '',\r\n        subHeader: '',\r\n        fileList: [],\r\n        DeployForm: {\r\n          title: '',\r\n          category_id: '',\r\n          version: '',\r\n          post_author: '',\r\n          deploy_links: '',\r\n          deploy_sql: '',\r\n          deploy_describe: '',\r\n          body: '',\r\n          environment_id: null,\r\n          fileNames: null\r\n        },\r\n        rules: {\r\n          title: [\r\n            { required: true, message: '请输入部署标题', trigger: 'blur' },\r\n            { min: 3, max: 60, message: '长度在 3 到 60 个字符', trigger: 'blur' }\r\n          ],\r\n          category_id: [\r\n            { required: true, message: '请选择所属项目', trigger: 'change' }\r\n          ],\r\n          version: [\r\n            { required: true, message: '请输入发布版本', trigger: 'blur' },\r\n            { min: 3, max: 60, message: '长度在 3 到 60 个字符', trigger: 'blur' }\r\n          ],\r\n          deploy_describe: [\r\n            { required: true, message: '请填写转测范围', trigger: 'blur' }\r\n          ],\r\n          deploy_links: [\r\n            { required: true, message: '请填写部署包下载链接', trigger: 'blur' }\r\n          ],\r\n          environment_id: [\r\n            { required: true, message: '请选择部署环境', trigger: 'change' }\r\n          ],\r\n          body: [\r\n            { required: true, message: '请将测试报告复制到此处', trigger: 'blur' },\r\n          ]\r\n        },\r\n        environments: [{\r\n            value: 2,\r\n            label: 'yfb-uco'\r\n            }, {\r\n            value: 3,\r\n            label: 'UCA-LF'\r\n            }, {\r\n            value: 5,\r\n            label: 'UCA-TJ'\r\n            }, {\r\n            value: 6,\r\n            label: 'UCA-BJ'\r\n            }, {\r\n            value: 7,\r\n            label: 'CVM-TJ'\r\n            }, {\r\n            value: 8,\r\n            label: 'CVM-BJ'\r\n            }, {\r\n            value: 10,\r\n            label: 'CVM-LF'\r\n            }, {\r\n            value: 11,\r\n            label: 'CVK-TJ'\r\n            }, {\r\n            value: 13,\r\n            label: 'CVK-BJ'\r\n            }, {\r\n            value: 15,\r\n            label: 'CVK-LF'\r\n            }, {\r\n            value: 17,\r\n            label: 'VCFC-TJ'\r\n            }, {\r\n            value: 18,\r\n            label: 'VCFC-BJ'\r\n            }, {\r\n            value: 19,\r\n            label: 'VCFC-LF'\r\n        }],\r\n      };\r\n    },\r\n    mounted() {\r\n      this.judgeCreateOrEdit();\r\n    },\r\n    methods: {\r\n      initDeployFormEdit(id){\r\n          this.$axios.get((this.$api.deployManage + '/' + id)).then((response) => {\r\n            this.DeployForm.title = response.data['res']['title']\r\n            this.DeployForm.category_id = response.data['res']['category_id']\r\n            this.DeployForm.version = response.data['res']['version']\r\n            this.DeployForm.post_author = response.data['res']['post_author']\r\n            this.DeployForm.environment_id = response.data['res']['environment_id']\r\n            this.DeployForm.deploy_links = response.data['res']['deploy_links']\r\n            this.DeployForm.deploy_sql = response.data['res']['deploy_sql']\r\n            this.DeployForm.deploy_describe = response.data['res']['deploy_describe']\r\n            this.DeployForm.body = response.data['res']['body']\r\n            this.DeployForm.fileNames = response.data['res']['report_file_names']\r\n            this.fileList = response.data['fileList']\r\n          })\r\n      },\r\n      initDeployFormGoto(id){\r\n          this.$axios.get((this.$api.planManage + '/' + id)).then((response) => {\r\n            this.DeployForm.title = response.data['res']['title']\r\n            this.DeployForm.category_id = response.data['res']['category_id']\r\n            this.DeployForm.version = response.data['res']['version']\r\n            this.DeployForm.post_author = response.data['res']['author']\r\n          })\r\n      },\r\n      judgeCreateOrEdit(){\r\n          if(this.$route.path.indexOf('edit') >= 0){\r\n              this.deployEditFlag = true\r\n              this.subHeader = '编辑部署'\r\n              this.deployEditId = this.$route.path.split('/')[3]\r\n              this.initDeployFormEdit(this.deployEditId)\r\n          }else{\r\n              this.planEditFlag = false\r\n              this.subHeader = '转部署'\r\n              this.planForDeployId = this.$route.path.split('/')[3]\r\n              this.initDeployFormGoto(this.planForDeployId)\r\n          }\r\n      },\r\n      goBack(){\r\n          this.$router.go(-1);\r\n      },\r\n      editorOnReady(editor){\r\n          editor.ui.getEditableElement().parentElement.insertBefore(\r\n              editor.ui.view.toolbar.element,\r\n              editor.ui.getEditableElement()\r\n          );\r\n          editor.plugins.get('FileRepository').createUploadAdapter = function(loader){\r\n              let val = editor.getData();\r\n              return{\r\n                  upload: async function(){\r\n                      return await loader.file.then(f => {\r\n                          const F = new FileReader();\r\n                          F.readAsArrayBuffer(f);\r\n                          return new Promise(resolve => {\r\n                              F.onload = function(){\r\n                                  resolve(F.result)\r\n                              };\r\n                          })\r\n                      }).then(bufAsArray => {\r\n                          return{\r\n                              default: ''\r\n                          }\r\n                      });\r\n                  }\r\n              }\r\n          };\r\n      },\r\n      submitForm(formName) {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid) {\r\n            let data = {\r\n              \"title\": this.DeployForm.title,\r\n              \"category_id\": this.DeployForm.category_id,\r\n              \"version\": this.DeployForm.version,\r\n              \"post_author\": this.DeployForm.post_author,\r\n              \"environment_id\": this.DeployForm.environment_id,\r\n              \"deploy_links\": this.DeployForm.deploy_links,\r\n              \"deploy_sql\": this.DeployForm.deploy_sql,\r\n              \"deploy_describe\": this.DeployForm.deploy_describe,\r\n              \"body\": this.DeployForm.body,\r\n              \"report_file_names\": this.DeployForm.fileNames\r\n            }\r\n            if (this.deployEditFlag === false){\r\n              this.$axios.post((this.$api.planGotoDeploy.replace(/PLAN_ID/g, this.planForDeployId)), data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                  this.$router.push('/management/deploys')\r\n                  this.deployList();\r\n                }\r\n              }).catch((error) => {\r\n                this.errorMessageShow(this, error.response);\r\n              })\r\n            }else{\r\n              this.$axios.put((this.$api.deployManage + '/' + this.deployEditId), data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                  this.$router.push('/management/deploys')\r\n                  this.deployList();\r\n                }\r\n              }).catch((error) => {\r\n                this.errorMessageShow(this, error.response);\r\n              })\r\n            }\r\n          } else {\r\n            console.log('error submit!!');\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      resetForm(formName) {\r\n        this.$refs[formName].resetFields();\r\n      },\r\n      addFile(response, file, fileList) {\r\n        if(response['code'] === 200){\r\n          this.$notify({\r\n              title: '成功',\r\n              message: response['msg'],\r\n              type: 'success',\r\n          });\r\n          if (this.DeployForm.fileNames === null){\r\n              this.DeployForm.fileNames = file.name + ','\r\n          }else{\r\n              this.DeployForm.fileNames += (file.name + ',')\r\n          }\r\n          console.log(this.DeployForm.fileNames)\r\n        }else{\r\n          fileList.pop()\r\n          this.fileList = fileList\r\n          this.$notify({\r\n              title: '警告',\r\n              message: response['msg'],\r\n              type: 'warning',\r\n          });\r\n        }\r\n      },\r\n      removeFile(file, fileList){\r\n        let repStr = file.name + ','\r\n        this.DeployForm.fileNames = this.DeployForm.fileNames.replace(repStr, '')\r\n        console.log(this.DeployForm.fileNames)\r\n        this.$axios.get((this.$api.removeReport + file.name)).then((response) =>{\r\n          this.messageShow(this, response)\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>"]}]}