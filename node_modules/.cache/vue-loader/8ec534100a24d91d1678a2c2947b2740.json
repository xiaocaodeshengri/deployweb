{"remainingRequest":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workFiles\\deployweb\\src\\components\\plan\\PlanEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workFiles\\deployweb\\src\\components\\plan\\PlanEdit.vue","mtime":1583747397537},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workFiles\\deployweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport '@ckeditor/ckeditor5-build-decoupled-document/build/translations/zh-cn'\r\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document'\r\n// import func from '../../../vue-temp/vue-editor-bridge';\r\n\r\n  export default {\r\n    props: ['categorys'],\r\n    data() {\r\n      return {\r\n        editor: DecoupledEditor,\r\n        editorConfig: {\r\n            language: 'zh-cn',\r\n            fontSize: {\r\n                options: [8, 10, 'default', 14, 16, 18, 20, 22, 24, 26, 28, 32, 48]\r\n            },\r\n            fontFamily:{\r\n                options: ['宋体', '仿宋', '微软雅黑', '黑体', '仿宋_GB2312', '楷体', '隶书', '幼圆']\r\n            }\r\n        },\r\n        planEditFlag: false,\r\n        planEditId: '',\r\n        subHeader: '',\r\n        planForm: {\r\n          title: '',\r\n          category_id: '',\r\n          version: '',\r\n          author: '',\r\n          yfb_datetime: '',\r\n          online_datetime: '',\r\n          remark: ''\r\n        },\r\n        rules: {\r\n          title: [\r\n            { required: true, message: '请输入计划标题', trigger: 'blur' },\r\n            { min: 3, max: 60, message: '长度在 3 到 60 个字符', trigger: 'blur' }\r\n          ],\r\n          category_id: [\r\n            { required: true, message: '请选择所属项目', trigger: 'change' }\r\n          ],\r\n          version: [\r\n            { required: true, message: '请输入发布版本', trigger: 'blur' },\r\n            { min: 3, max: 60, message: '长度在 3 到 60 个字符', trigger: 'blur' }\r\n          ],\r\n          yfb_datetime: [\r\n            { type: 'date', required: true, message: '请选择日期', trigger: 'change' }\r\n          ],\r\n          online_datetime: [\r\n            { type: 'date', required: true, message: '请选择时间', trigger: 'change' }\r\n          ],\r\n          remark: [\r\n            { required: true, message: '请填写转测详细内容', trigger: 'blur' }\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    mounted() {\r\n      this.judgeCreateOrEdit();\r\n    },\r\n    methods: {\r\n        initPlanFormEdit(id){\r\n          this.$axios.get((this.$api.planManage + '/' + id)).then((response) => {\r\n            this.planForm.title = response.data['res']['title']\r\n            this.planForm.category_id = response.data['res']['category_id']\r\n            this.planForm.version = response.data['res']['version']\r\n            this.planForm.author = response.data['res']['author']\r\n            // this.planForm.yfb_datetime = response.data['res']['yfb_datetime']\r\n            // this.planForm.online_datetime = response.data['res']['online_datetime']\r\n            this.planForm.remark = response.data['res']['remark']\r\n          })\r\n        },\r\n        judgeCreateOrEdit(){\r\n            if(this.$route.path.indexOf('edit') >= 0){\r\n                this.planEditFlag = true\r\n                this.subHeader = '编辑计划'\r\n                // this.planEditId = this.$route.path.split('/')[3]\r\n                this.planEditId = this.$route.params.id\r\n                this.initPlanFormEdit(this.planEditId)\r\n            }else{\r\n                this.planEditFlag = false\r\n                this.subHeader = '新建计划'\r\n                this.planForm.author = localStorage.getItem(\"name\")\r\n            }\r\n        },\r\n        goBack(){\r\n            this.$router.go(-1);\r\n        },\r\n        editorOnReady(editor){\r\n            editor.ui.getEditableElement().parentElement.insertBefore(\r\n                editor.ui.view.toolbar.element,\r\n                editor.ui.getEditableElement()\r\n            );\r\n            editor.plugins.get('FileRepository').createUploadAdapter = function(loader){\r\n                let val = editor.getData();\r\n                return{\r\n                    upload: async function(){\r\n                        return await loader.file.then(f => {\r\n                            const F = new FileReader();\r\n                            F.readAsArrayBuffer(f);\r\n                            return new Promise(resolve => {\r\n                                F.onload = function(){\r\n                                    resolve(F.result)\r\n                                };\r\n                            })\r\n                        }).then(bufAsArray => {\r\n                            return{\r\n                                default: ''\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n        },\r\n      submitForm(formName) {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid) {\r\n            let data = {\r\n              \"title\": this.planForm.title,\r\n              \"category_id\": this.planForm.category_id,\r\n              \"version\": this.planForm.version,\r\n              \"author\": this.planForm.author,\r\n              \"yfb_datetime\": this.planForm.yfb_datetime,\r\n              \"online_datetime\": this.planForm.online_datetime,\r\n              \"remark\": this.planForm.remark,\r\n            }\r\n            if (this.planEditFlag === false){\r\n              this.$axios.post(this.$api.planManage, data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                  this.$router.push('/management/plans')\r\n                  this.planList();\r\n                }\r\n              }).catch((error) => {\r\n                this.errorMessageShow(this, error.response);\r\n              })\r\n            }else{\r\n              this.$axios.put((this.$api.planManage + '/' + this.planEditId), data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                  this.$router.push('/management/plans')\r\n                  this.planList();\r\n                }\r\n              }).catch((error) => {\r\n                this.errorMessageShow(this, error.response);\r\n              })\r\n            }\r\n          } else {\r\n            console.log('error submit!!');\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      resetForm(formName) {\r\n        this.$refs[formName].resetFields();\r\n      }\r\n    }\r\n  }\r\n",{"version":3,"sources":["PlanEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PlanEdit.vue","sourceRoot":"src/components/plan","sourcesContent":["<template>\r\n<div>\r\n    <el-page-header @back=\"goBack\" v-bind:content=\"subHeader\"></el-page-header>\r\n    <el-divider></el-divider>\r\n    <el-form :model=\"planForm\" :rules=\"rules\" ref=\"planForm\" label-width=\"150px\" class=\"demo-planForm\" label-position=\"top\">\r\n        <el-form-item label=\"计划标题\" prop=\"title\" size=\"small\">\r\n            <el-input v-model=\"planForm.title\" class=\"commonwidth\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"发布版本\" prop=\"version\" size=\"small\">\r\n            <el-input v-model=\"planForm.version\" class=\"commonwidth\"></el-input>\r\n        </el-form-item>\r\n        <el-row :gutter=\"10\">\r\n          <el-col :span=\"4\">\r\n            <el-form-item label=\"项目\" prop=\"category_id\" size=\"small\">\r\n                <el-select v-model=\"planForm.category_id\" placeholder=\"请选择项目\">\r\n                  <el-option\r\n                    v-for=\"item in categorys\"\r\n                    :key=\"item.id\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.id\">\r\n                  </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"4\">\r\n            <el-form-item label=\"责任人\" prop=\"author\" size=\"small\">\r\n                <el-input v-model=\"planForm.author\" :disabled=\"true\"></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"5\">\r\n            <el-form-item label=\"计划上预发布时间\" required size=\"small\">\r\n                <el-form-item prop=\"yfb_datetime\">\r\n                    <el-date-picker type=\"date\" placeholder=\"选择日期\" v-model=\"planForm.yfb_datetime\">\r\n                    </el-date-picker>\r\n                </el-form-item>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"5\">\r\n            <el-form-item label=\"计划上线时间\" required size=\"small\">\r\n                <el-form-item prop=\"online_datetime\">\r\n                    <el-date-picker type=\"date\" placeholder=\"选择日期\" v-model=\"planForm.online_datetime\">\r\n                    </el-date-picker>\r\n                </el-form-item>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n        <el-form-item label=\"转测详细内容\" prop=\"remark\" size=\"small\">\r\n        <div  class=\"deploytext\">\r\n        <ckeditor :editor=\"editor\" @ready=\"editorOnReady\" v-model=\"planForm.remark\" :config=\"editorConfig\">\r\n        </ckeditor>\r\n        <el-divider></el-divider>\r\n        </div>\r\n        </el-form-item>\r\n        <el-form-item>\r\n            <el-button type=\"primary\" @click=\"submitForm('planForm')\">确定</el-button>\r\n            <el-button @click=\"resetForm('planForm')\">重置</el-button>\r\n        </el-form-item>\r\n    </el-form>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport '@ckeditor/ckeditor5-build-decoupled-document/build/translations/zh-cn'\r\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document'\r\n// import func from '../../../vue-temp/vue-editor-bridge';\r\n\r\n  export default {\r\n    props: ['categorys'],\r\n    data() {\r\n      return {\r\n        editor: DecoupledEditor,\r\n        editorConfig: {\r\n            language: 'zh-cn',\r\n            fontSize: {\r\n                options: [8, 10, 'default', 14, 16, 18, 20, 22, 24, 26, 28, 32, 48]\r\n            },\r\n            fontFamily:{\r\n                options: ['宋体', '仿宋', '微软雅黑', '黑体', '仿宋_GB2312', '楷体', '隶书', '幼圆']\r\n            }\r\n        },\r\n        planEditFlag: false,\r\n        planEditId: '',\r\n        subHeader: '',\r\n        planForm: {\r\n          title: '',\r\n          category_id: '',\r\n          version: '',\r\n          author: '',\r\n          yfb_datetime: '',\r\n          online_datetime: '',\r\n          remark: ''\r\n        },\r\n        rules: {\r\n          title: [\r\n            { required: true, message: '请输入计划标题', trigger: 'blur' },\r\n            { min: 3, max: 60, message: '长度在 3 到 60 个字符', trigger: 'blur' }\r\n          ],\r\n          category_id: [\r\n            { required: true, message: '请选择所属项目', trigger: 'change' }\r\n          ],\r\n          version: [\r\n            { required: true, message: '请输入发布版本', trigger: 'blur' },\r\n            { min: 3, max: 60, message: '长度在 3 到 60 个字符', trigger: 'blur' }\r\n          ],\r\n          yfb_datetime: [\r\n            { type: 'date', required: true, message: '请选择日期', trigger: 'change' }\r\n          ],\r\n          online_datetime: [\r\n            { type: 'date', required: true, message: '请选择时间', trigger: 'change' }\r\n          ],\r\n          remark: [\r\n            { required: true, message: '请填写转测详细内容', trigger: 'blur' }\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    mounted() {\r\n      this.judgeCreateOrEdit();\r\n    },\r\n    methods: {\r\n        initPlanFormEdit(id){\r\n          this.$axios.get((this.$api.planManage + '/' + id)).then((response) => {\r\n            this.planForm.title = response.data['res']['title']\r\n            this.planForm.category_id = response.data['res']['category_id']\r\n            this.planForm.version = response.data['res']['version']\r\n            this.planForm.author = response.data['res']['author']\r\n            // this.planForm.yfb_datetime = response.data['res']['yfb_datetime']\r\n            // this.planForm.online_datetime = response.data['res']['online_datetime']\r\n            this.planForm.remark = response.data['res']['remark']\r\n          })\r\n        },\r\n        judgeCreateOrEdit(){\r\n            if(this.$route.path.indexOf('edit') >= 0){\r\n                this.planEditFlag = true\r\n                this.subHeader = '编辑计划'\r\n                // this.planEditId = this.$route.path.split('/')[3]\r\n                this.planEditId = this.$route.params.id\r\n                this.initPlanFormEdit(this.planEditId)\r\n            }else{\r\n                this.planEditFlag = false\r\n                this.subHeader = '新建计划'\r\n                this.planForm.author = localStorage.getItem(\"name\")\r\n            }\r\n        },\r\n        goBack(){\r\n            this.$router.go(-1);\r\n        },\r\n        editorOnReady(editor){\r\n            editor.ui.getEditableElement().parentElement.insertBefore(\r\n                editor.ui.view.toolbar.element,\r\n                editor.ui.getEditableElement()\r\n            );\r\n            editor.plugins.get('FileRepository').createUploadAdapter = function(loader){\r\n                let val = editor.getData();\r\n                return{\r\n                    upload: async function(){\r\n                        return await loader.file.then(f => {\r\n                            const F = new FileReader();\r\n                            F.readAsArrayBuffer(f);\r\n                            return new Promise(resolve => {\r\n                                F.onload = function(){\r\n                                    resolve(F.result)\r\n                                };\r\n                            })\r\n                        }).then(bufAsArray => {\r\n                            return{\r\n                                default: ''\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n        },\r\n      submitForm(formName) {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid) {\r\n            let data = {\r\n              \"title\": this.planForm.title,\r\n              \"category_id\": this.planForm.category_id,\r\n              \"version\": this.planForm.version,\r\n              \"author\": this.planForm.author,\r\n              \"yfb_datetime\": this.planForm.yfb_datetime,\r\n              \"online_datetime\": this.planForm.online_datetime,\r\n              \"remark\": this.planForm.remark,\r\n            }\r\n            if (this.planEditFlag === false){\r\n              this.$axios.post(this.$api.planManage, data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                  this.$router.push('/management/plans')\r\n                  this.planList();\r\n                }\r\n              }).catch((error) => {\r\n                this.errorMessageShow(this, error.response);\r\n              })\r\n            }else{\r\n              this.$axios.put((this.$api.planManage + '/' + this.planEditId), data).then((response) => {\r\n                if (this.messageShow(this, response)){\r\n                  this.$router.push('/management/plans')\r\n                  this.planList();\r\n                }\r\n              }).catch((error) => {\r\n                this.errorMessageShow(this, error.response);\r\n              })\r\n            }\r\n          } else {\r\n            console.log('error submit!!');\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      resetForm(formName) {\r\n        this.$refs[formName].resetFields();\r\n      }\r\n    }\r\n  }\r\n</script>"]}]}